// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kalman_filter_kalman_filter_Pipeline_VITIS_LOOP_37_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        sext_ln37,
        in_local_V_address0,
        in_local_V_ce0,
        in_local_V_we0,
        in_local_V_d0,
        in_local_V_address1,
        in_local_V_ce1,
        in_local_V_we1,
        in_local_V_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [255:0] m_axi_gmem0_WDATA;
output  [31:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [255:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [58:0] sext_ln37;
output  [17:0] in_local_V_address0;
output   in_local_V_ce0;
output   in_local_V_we0;
output  [18:0] in_local_V_d0;
output  [17:0] in_local_V_address1;
output   in_local_V_ce1;
output   in_local_V_we1;
output  [18:0] in_local_V_d1;

reg ap_idle;
reg m_axi_gmem0_RREADY;
reg[17:0] in_local_V_address0;
reg in_local_V_ce0;
reg in_local_V_we0;
reg[18:0] in_local_V_d0;
reg[17:0] in_local_V_address1;
reg in_local_V_ce1;
reg in_local_V_we1;
reg[18:0] in_local_V_d1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln37_reg_2692;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln37_fu_243_p2;
wire   [15:0] add_ln37_fu_249_p2;
reg   [15:0] add_ln37_reg_2696;
reg   [255:0] temp_V_reg_2701;
reg    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg   [255:0] temp_V_reg_2701_pp0_iter1_reg;
wire   [31:0] trunc_ln668_fu_261_p1;
reg   [31:0] trunc_ln668_reg_2713;
reg   [31:0] p_Result_1_reg_2718;
reg   [31:0] p_Result_2_reg_2723;
reg   [31:0] p_Result_s_reg_2728;
reg   [31:0] p_Result_4_reg_2733;
reg   [31:0] p_Result_9_reg_2738;
reg   [31:0] p_Result_6_reg_2743;
reg   [31:0] p_Result_5_reg_2748;
wire   [31:0] bitcast_ln42_fu_339_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] bitcast_ln42_1_fu_343_p1;
reg   [0:0] tmp_reg_2763;
wire    ap_block_pp0_stage3_11001;
wire   [51:0] trunc_ln554_fu_377_p1;
reg   [51:0] trunc_ln554_reg_2769;
wire   [0:0] icmp_ln560_fu_381_p2;
reg   [0:0] icmp_ln560_reg_2774;
wire   [11:0] sub_ln564_fu_387_p2;
reg   [11:0] sub_ln564_reg_2782;
reg   [0:0] tmp_42_reg_2791;
wire   [51:0] trunc_ln554_1_fu_423_p1;
reg   [51:0] trunc_ln554_1_reg_2797;
wire   [0:0] icmp_ln560_1_fu_427_p2;
reg   [0:0] icmp_ln560_1_reg_2802;
wire   [11:0] sub_ln564_1_fu_433_p2;
reg   [11:0] sub_ln564_1_reg_2810;
wire   [31:0] bitcast_ln42_2_fu_439_p1;
wire   [31:0] bitcast_ln42_3_fu_443_p1;
wire   [0:0] icmp_ln592_fu_556_p2;
reg   [0:0] icmp_ln592_reg_2829;
wire   [18:0] add_ln377_fu_600_p2;
reg   [18:0] add_ln377_reg_2834;
wire   [0:0] and_ln571_fu_611_p2;
reg   [0:0] and_ln571_reg_2839;
wire   [0:0] or_ln560_fu_634_p2;
reg   [0:0] or_ln560_reg_2844;
wire   [18:0] select_ln560_1_fu_639_p3;
reg   [18:0] select_ln560_1_reg_2850;
wire   [0:0] icmp_ln592_1_fu_756_p2;
reg   [0:0] icmp_ln592_1_reg_2855;
wire   [18:0] add_ln377_2_fu_800_p2;
reg   [18:0] add_ln377_2_reg_2860;
wire   [0:0] and_ln571_1_fu_811_p2;
reg   [0:0] and_ln571_1_reg_2865;
wire   [0:0] or_ln560_3_fu_834_p2;
reg   [0:0] or_ln560_3_reg_2870;
wire   [18:0] select_ln560_5_fu_839_p3;
reg   [18:0] select_ln560_5_reg_2876;
reg   [0:0] tmp_44_reg_2881;
wire   [51:0] trunc_ln554_2_fu_877_p1;
reg   [51:0] trunc_ln554_2_reg_2887;
wire   [0:0] icmp_ln560_2_fu_881_p2;
reg   [0:0] icmp_ln560_2_reg_2892;
wire   [11:0] sub_ln564_2_fu_887_p2;
reg   [11:0] sub_ln564_2_reg_2900;
reg   [0:0] tmp_46_reg_2909;
wire   [51:0] trunc_ln554_3_fu_923_p1;
reg   [51:0] trunc_ln554_3_reg_2915;
wire   [0:0] icmp_ln560_3_fu_927_p2;
reg   [0:0] icmp_ln560_3_reg_2920;
wire   [11:0] sub_ln564_3_fu_933_p2;
reg   [11:0] sub_ln564_3_reg_2928;
wire   [31:0] bitcast_ln42_4_fu_939_p1;
wire   [31:0] bitcast_ln42_5_fu_943_p1;
wire   [17:0] empty_35_fu_955_p1;
reg   [17:0] empty_35_reg_2947;
wire   [17:0] or_ln43_fu_989_p2;
reg   [17:0] or_ln43_reg_2953;
wire   [0:0] icmp_ln592_2_fu_1139_p2;
reg   [0:0] icmp_ln592_2_reg_2958;
wire   [18:0] add_ln377_3_fu_1183_p2;
reg   [18:0] add_ln377_3_reg_2963;
wire   [0:0] and_ln571_2_fu_1194_p2;
reg   [0:0] and_ln571_2_reg_2968;
wire   [0:0] or_ln560_6_fu_1217_p2;
reg   [0:0] or_ln560_6_reg_2973;
wire   [18:0] select_ln560_9_fu_1222_p3;
reg   [18:0] select_ln560_9_reg_2979;
wire   [0:0] icmp_ln592_3_fu_1339_p2;
reg   [0:0] icmp_ln592_3_reg_2984;
wire   [18:0] add_ln377_4_fu_1383_p2;
reg   [18:0] add_ln377_4_reg_2989;
wire   [0:0] and_ln571_3_fu_1394_p2;
reg   [0:0] and_ln571_3_reg_2994;
wire   [0:0] or_ln560_9_fu_1417_p2;
reg   [0:0] or_ln560_9_reg_2999;
wire   [18:0] select_ln560_13_fu_1422_p3;
reg   [18:0] select_ln560_13_reg_3005;
reg   [0:0] tmp_48_reg_3010;
wire   [51:0] trunc_ln554_4_fu_1460_p1;
reg   [51:0] trunc_ln554_4_reg_3016;
wire   [0:0] icmp_ln560_4_fu_1464_p2;
reg   [0:0] icmp_ln560_4_reg_3021;
wire   [11:0] sub_ln564_4_fu_1470_p2;
reg   [11:0] sub_ln564_4_reg_3029;
reg   [0:0] tmp_50_reg_3038;
wire   [51:0] trunc_ln554_5_fu_1506_p1;
reg   [51:0] trunc_ln554_5_reg_3044;
wire   [0:0] icmp_ln560_5_fu_1510_p2;
reg   [0:0] icmp_ln560_5_reg_3049;
wire   [11:0] sub_ln564_5_fu_1516_p2;
reg   [11:0] sub_ln564_5_reg_3057;
wire   [31:0] bitcast_ln42_6_fu_1522_p1;
wire   [31:0] bitcast_ln42_7_fu_1526_p1;
wire   [17:0] or_ln43_1_fu_1581_p2;
reg   [17:0] or_ln43_1_reg_3076;
wire   [0:0] icmp_ln592_4_fu_1730_p2;
reg   [0:0] icmp_ln592_4_reg_3083;
wire   [18:0] add_ln377_5_fu_1774_p2;
reg   [18:0] add_ln377_5_reg_3088;
wire   [0:0] and_ln571_4_fu_1785_p2;
reg   [0:0] and_ln571_4_reg_3093;
wire   [0:0] or_ln560_12_fu_1808_p2;
reg   [0:0] or_ln560_12_reg_3098;
wire   [18:0] select_ln560_17_fu_1813_p3;
reg   [18:0] select_ln560_17_reg_3104;
wire   [0:0] icmp_ln592_5_fu_1930_p2;
reg   [0:0] icmp_ln592_5_reg_3109;
wire   [18:0] add_ln377_6_fu_1974_p2;
reg   [18:0] add_ln377_6_reg_3114;
wire   [0:0] and_ln571_5_fu_1985_p2;
reg   [0:0] and_ln571_5_reg_3119;
wire   [0:0] or_ln560_15_fu_2008_p2;
reg   [0:0] or_ln560_15_reg_3124;
wire   [18:0] select_ln560_21_fu_2013_p3;
reg   [18:0] select_ln560_21_reg_3130;
reg   [0:0] tmp_52_reg_3135;
wire   [51:0] trunc_ln554_6_fu_2051_p1;
reg   [51:0] trunc_ln554_6_reg_3141;
wire   [0:0] icmp_ln560_6_fu_2055_p2;
reg   [0:0] icmp_ln560_6_reg_3146;
wire   [11:0] sub_ln564_6_fu_2061_p2;
reg   [11:0] sub_ln564_6_reg_3154;
reg   [0:0] tmp_54_reg_3163;
wire   [51:0] trunc_ln554_7_fu_2097_p1;
reg   [51:0] trunc_ln554_7_reg_3169;
wire   [0:0] icmp_ln560_7_fu_2101_p2;
reg   [0:0] icmp_ln560_7_reg_3174;
wire   [11:0] sub_ln564_7_fu_2107_p2;
reg   [11:0] sub_ln564_7_reg_3182;
wire   [0:0] icmp_ln592_6_fu_2302_p2;
reg   [0:0] icmp_ln592_6_reg_3191;
wire   [18:0] add_ln377_7_fu_2346_p2;
reg   [18:0] add_ln377_7_reg_3196;
wire   [0:0] and_ln571_6_fu_2357_p2;
reg   [0:0] and_ln571_6_reg_3201;
wire   [0:0] or_ln560_18_fu_2380_p2;
reg   [0:0] or_ln560_18_reg_3206;
wire   [18:0] select_ln560_25_fu_2385_p3;
reg   [18:0] select_ln560_25_reg_3212;
wire   [0:0] icmp_ln592_7_fu_2502_p2;
reg   [0:0] icmp_ln592_7_reg_3217;
wire   [18:0] add_ln377_8_fu_2546_p2;
reg   [18:0] add_ln377_8_reg_3222;
wire   [0:0] and_ln571_7_fu_2557_p2;
reg   [0:0] and_ln571_7_reg_3227;
wire   [0:0] or_ln560_21_fu_2580_p2;
reg   [0:0] or_ln560_21_reg_3232;
wire   [18:0] select_ln560_29_fu_2585_p3;
reg   [18:0] select_ln560_29_reg_3238;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] counter_cast174_fu_950_p1;
wire   [63:0] zext_ln666_fu_995_p1;
wire   [63:0] zext_ln666_1_fu_1546_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln666_2_fu_1586_p1;
wire   [63:0] zext_ln666_3_fu_2118_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln666_4_fu_2158_p1;
wire   [63:0] zext_ln666_5_fu_2598_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln666_6_fu_2638_p1;
reg   [18:0] counter_fu_128;
wire   [18:0] add_ln37_1_fu_1530_p2;
wire    ap_loop_init;
reg   [15:0] i_fu_132;
reg   [15:0] ap_sig_allocacmp_i_2;
wire   [18:0] select_ln560_3_fu_980_p3;
wire   [18:0] select_ln560_7_fu_1021_p3;
wire   [18:0] select_ln560_11_fu_1572_p3;
wire   [18:0] select_ln560_15_fu_1612_p3;
wire   [18:0] select_ln560_19_fu_2144_p3;
wire   [18:0] select_ln560_23_fu_2184_p3;
wire   [18:0] select_ln560_27_fu_2624_p3;
wire   [18:0] select_ln560_31_fu_2664_p3;
reg   [31:0] grp_fu_220_p0;
reg   [31:0] grp_fu_223_p0;
wire   [63:0] grp_fu_220_p1;
wire   [63:0] bitcast_ln724_fu_347_p1;
wire   [10:0] exp_tmp6_fu_363_p4;
wire   [62:0] trunc_ln546_fu_351_p1;
wire   [11:0] zext_ln455_fu_373_p1;
wire   [63:0] grp_fu_223_p1;
wire   [63:0] bitcast_ln724_1_fu_393_p1;
wire   [10:0] exp_tmp_s_fu_409_p4;
wire   [62:0] trunc_ln546_1_fu_397_p1;
wire   [11:0] zext_ln455_1_fu_419_p1;
wire   [52:0] zext_ln558_cast_fu_447_p3;
wire   [53:0] zext_ln558_fu_454_p1;
wire   [53:0] sub_ln455_fu_458_p2;
wire   [0:0] icmp_ln570_fu_471_p2;
wire   [11:0] add_ln570_fu_476_p2;
wire   [11:0] sub_ln570_fu_481_p2;
wire  signed [11:0] select_ln570_fu_486_p3;
wire   [53:0] select_ln559_fu_464_p3;
wire   [0:0] tmp_41_fu_513_p3;
wire  signed [31:0] sext_ln571_fu_494_p1;
wire   [53:0] zext_ln575_fu_528_p1;
wire   [53:0] ashr_ln575_fu_532_p2;
wire   [0:0] icmp_ln574_fu_507_p2;
wire   [18:0] trunc_ln575_fu_538_p1;
wire   [18:0] select_ln577_fu_520_p3;
wire   [18:0] trunc_ln572_fu_503_p1;
wire   [18:0] sext_ln571cast_fu_562_p1;
wire   [11:0] add_ln580_fu_572_p2;
wire  signed [31:0] sext_ln580_fu_577_p1;
wire   [0:0] icmp_ln580_fu_550_p2;
wire   [0:0] p_Result_3_fu_581_p3;
wire   [0:0] select_ln580_fu_589_p3;
wire   [18:0] select_ln574_fu_542_p3;
wire   [18:0] zext_ln377_fu_596_p1;
wire   [0:0] icmp_ln571_fu_498_p2;
wire   [0:0] xor_ln560_fu_606_p2;
wire   [0:0] or_ln571_fu_617_p2;
wire   [0:0] xor_ln571_fu_622_p2;
wire   [0:0] and_ln570_fu_628_p2;
wire   [18:0] shl_ln593_fu_566_p2;
wire   [52:0] zext_ln558_1_cast_fu_647_p3;
wire   [53:0] zext_ln558_1_fu_654_p1;
wire   [53:0] sub_ln455_1_fu_658_p2;
wire   [0:0] icmp_ln570_1_fu_671_p2;
wire   [11:0] add_ln570_1_fu_676_p2;
wire   [11:0] sub_ln570_1_fu_681_p2;
wire  signed [11:0] select_ln570_1_fu_686_p3;
wire   [53:0] select_ln559_1_fu_664_p3;
wire   [0:0] tmp_43_fu_713_p3;
wire  signed [31:0] sext_ln571_1_fu_694_p1;
wire   [53:0] zext_ln575_1_fu_728_p1;
wire   [53:0] ashr_ln575_1_fu_732_p2;
wire   [0:0] icmp_ln574_1_fu_707_p2;
wire   [18:0] trunc_ln575_1_fu_738_p1;
wire   [18:0] select_ln577_1_fu_720_p3;
wire   [18:0] trunc_ln572_1_fu_703_p1;
wire   [18:0] sext_ln571_1cast_fu_762_p1;
wire   [11:0] add_ln580_1_fu_772_p2;
wire  signed [31:0] sext_ln580_1_fu_777_p1;
wire   [0:0] icmp_ln580_1_fu_750_p2;
wire   [0:0] p_Result_3_1_fu_781_p3;
wire   [0:0] select_ln580_1_fu_789_p3;
wire   [18:0] select_ln574_1_fu_742_p3;
wire   [18:0] zext_ln377_1_fu_796_p1;
wire   [0:0] icmp_ln571_1_fu_698_p2;
wire   [0:0] xor_ln560_1_fu_806_p2;
wire   [0:0] or_ln571_1_fu_817_p2;
wire   [0:0] xor_ln571_1_fu_822_p2;
wire   [0:0] and_ln570_1_fu_828_p2;
wire   [18:0] shl_ln593_1_fu_766_p2;
wire   [63:0] bitcast_ln724_2_fu_847_p1;
wire   [10:0] exp_tmp_1_fu_863_p4;
wire   [62:0] trunc_ln546_2_fu_851_p1;
wire   [11:0] zext_ln455_2_fu_873_p1;
wire   [63:0] bitcast_ln724_3_fu_893_p1;
wire   [10:0] exp_tmp_2_fu_909_p4;
wire   [62:0] trunc_ln546_3_fu_897_p1;
wire   [11:0] zext_ln455_3_fu_919_p1;
wire   [18:0] select_ln560_fu_959_p3;
wire   [0:0] or_ln560_1_fu_965_p2;
wire   [0:0] or_ln560_2_fu_975_p2;
wire   [18:0] select_ln560_2_fu_969_p3;
wire   [18:0] select_ln560_4_fu_1000_p3;
wire   [0:0] or_ln560_4_fu_1006_p2;
wire   [0:0] or_ln560_5_fu_1016_p2;
wire   [18:0] select_ln560_6_fu_1010_p3;
wire   [52:0] zext_ln558_2_cast_fu_1030_p3;
wire   [53:0] zext_ln558_2_fu_1037_p1;
wire   [53:0] sub_ln455_2_fu_1041_p2;
wire   [0:0] icmp_ln570_2_fu_1054_p2;
wire   [11:0] add_ln570_2_fu_1059_p2;
wire   [11:0] sub_ln570_2_fu_1064_p2;
wire  signed [11:0] select_ln570_2_fu_1069_p3;
wire   [53:0] select_ln559_2_fu_1047_p3;
wire   [0:0] tmp_45_fu_1096_p3;
wire  signed [31:0] sext_ln571_2_fu_1077_p1;
wire   [53:0] zext_ln575_2_fu_1111_p1;
wire   [53:0] ashr_ln575_2_fu_1115_p2;
wire   [0:0] icmp_ln574_2_fu_1090_p2;
wire   [18:0] trunc_ln575_2_fu_1121_p1;
wire   [18:0] select_ln577_2_fu_1103_p3;
wire   [18:0] trunc_ln572_2_fu_1086_p1;
wire   [18:0] sext_ln571_2cast_fu_1145_p1;
wire   [11:0] add_ln580_2_fu_1155_p2;
wire  signed [31:0] sext_ln580_2_fu_1160_p1;
wire   [0:0] icmp_ln580_2_fu_1133_p2;
wire   [0:0] p_Result_3_2_fu_1164_p3;
wire   [0:0] select_ln580_2_fu_1172_p3;
wire   [18:0] select_ln574_2_fu_1125_p3;
wire   [18:0] zext_ln377_2_fu_1179_p1;
wire   [0:0] icmp_ln571_2_fu_1081_p2;
wire   [0:0] xor_ln560_2_fu_1189_p2;
wire   [0:0] or_ln571_2_fu_1200_p2;
wire   [0:0] xor_ln571_2_fu_1205_p2;
wire   [0:0] and_ln570_2_fu_1211_p2;
wire   [18:0] shl_ln593_2_fu_1149_p2;
wire   [52:0] zext_ln558_3_cast_fu_1230_p3;
wire   [53:0] zext_ln558_3_fu_1237_p1;
wire   [53:0] sub_ln455_3_fu_1241_p2;
wire   [0:0] icmp_ln570_3_fu_1254_p2;
wire   [11:0] add_ln570_3_fu_1259_p2;
wire   [11:0] sub_ln570_3_fu_1264_p2;
wire  signed [11:0] select_ln570_3_fu_1269_p3;
wire   [53:0] select_ln559_3_fu_1247_p3;
wire   [0:0] tmp_47_fu_1296_p3;
wire  signed [31:0] sext_ln571_3_fu_1277_p1;
wire   [53:0] zext_ln575_3_fu_1311_p1;
wire   [53:0] ashr_ln575_3_fu_1315_p2;
wire   [0:0] icmp_ln574_3_fu_1290_p2;
wire   [18:0] trunc_ln575_3_fu_1321_p1;
wire   [18:0] select_ln577_3_fu_1303_p3;
wire   [18:0] trunc_ln572_3_fu_1286_p1;
wire   [18:0] sext_ln571_3cast_fu_1345_p1;
wire   [11:0] add_ln580_3_fu_1355_p2;
wire  signed [31:0] sext_ln580_3_fu_1360_p1;
wire   [0:0] icmp_ln580_3_fu_1333_p2;
wire   [0:0] p_Result_3_3_fu_1364_p3;
wire   [0:0] select_ln580_3_fu_1372_p3;
wire   [18:0] select_ln574_3_fu_1325_p3;
wire   [18:0] zext_ln377_3_fu_1379_p1;
wire   [0:0] icmp_ln571_3_fu_1281_p2;
wire   [0:0] xor_ln560_3_fu_1389_p2;
wire   [0:0] or_ln571_3_fu_1400_p2;
wire   [0:0] xor_ln571_3_fu_1405_p2;
wire   [0:0] and_ln570_3_fu_1411_p2;
wire   [18:0] shl_ln593_3_fu_1349_p2;
wire   [63:0] bitcast_ln724_4_fu_1430_p1;
wire   [10:0] exp_tmp_3_fu_1446_p4;
wire   [62:0] trunc_ln546_4_fu_1434_p1;
wire   [11:0] zext_ln455_4_fu_1456_p1;
wire   [63:0] bitcast_ln724_5_fu_1476_p1;
wire   [10:0] exp_tmp_4_fu_1492_p4;
wire   [62:0] trunc_ln546_5_fu_1480_p1;
wire   [11:0] zext_ln455_5_fu_1502_p1;
wire   [17:0] add_ln43_fu_1541_p2;
wire   [18:0] select_ln560_8_fu_1551_p3;
wire   [0:0] or_ln560_7_fu_1557_p2;
wire   [0:0] or_ln560_8_fu_1567_p2;
wire   [18:0] select_ln560_10_fu_1561_p3;
wire   [18:0] select_ln560_12_fu_1591_p3;
wire   [0:0] or_ln560_10_fu_1597_p2;
wire   [0:0] or_ln560_11_fu_1607_p2;
wire   [18:0] select_ln560_14_fu_1601_p3;
wire   [52:0] zext_ln558_4_cast_fu_1621_p3;
wire   [53:0] zext_ln558_4_fu_1628_p1;
wire   [53:0] sub_ln455_4_fu_1632_p2;
wire   [0:0] icmp_ln570_4_fu_1645_p2;
wire   [11:0] add_ln570_4_fu_1650_p2;
wire   [11:0] sub_ln570_4_fu_1655_p2;
wire  signed [11:0] select_ln570_4_fu_1660_p3;
wire   [53:0] select_ln559_4_fu_1638_p3;
wire   [0:0] tmp_49_fu_1687_p3;
wire  signed [31:0] sext_ln571_4_fu_1668_p1;
wire   [53:0] zext_ln575_4_fu_1702_p1;
wire   [53:0] ashr_ln575_4_fu_1706_p2;
wire   [0:0] icmp_ln574_4_fu_1681_p2;
wire   [18:0] trunc_ln575_4_fu_1712_p1;
wire   [18:0] select_ln577_4_fu_1694_p3;
wire   [18:0] trunc_ln572_4_fu_1677_p1;
wire   [18:0] sext_ln571_4cast_fu_1736_p1;
wire   [11:0] add_ln580_4_fu_1746_p2;
wire  signed [31:0] sext_ln580_4_fu_1751_p1;
wire   [0:0] icmp_ln580_4_fu_1724_p2;
wire   [0:0] p_Result_3_4_fu_1755_p3;
wire   [0:0] select_ln580_4_fu_1763_p3;
wire   [18:0] select_ln574_4_fu_1716_p3;
wire   [18:0] zext_ln377_4_fu_1770_p1;
wire   [0:0] icmp_ln571_4_fu_1672_p2;
wire   [0:0] xor_ln560_4_fu_1780_p2;
wire   [0:0] or_ln571_4_fu_1791_p2;
wire   [0:0] xor_ln571_4_fu_1796_p2;
wire   [0:0] and_ln570_4_fu_1802_p2;
wire   [18:0] shl_ln593_4_fu_1740_p2;
wire   [52:0] zext_ln558_5_cast_fu_1821_p3;
wire   [53:0] zext_ln558_5_fu_1828_p1;
wire   [53:0] sub_ln455_5_fu_1832_p2;
wire   [0:0] icmp_ln570_5_fu_1845_p2;
wire   [11:0] add_ln570_5_fu_1850_p2;
wire   [11:0] sub_ln570_5_fu_1855_p2;
wire  signed [11:0] select_ln570_5_fu_1860_p3;
wire   [53:0] select_ln559_5_fu_1838_p3;
wire   [0:0] tmp_51_fu_1887_p3;
wire  signed [31:0] sext_ln571_5_fu_1868_p1;
wire   [53:0] zext_ln575_5_fu_1902_p1;
wire   [53:0] ashr_ln575_5_fu_1906_p2;
wire   [0:0] icmp_ln574_5_fu_1881_p2;
wire   [18:0] trunc_ln575_5_fu_1912_p1;
wire   [18:0] select_ln577_5_fu_1894_p3;
wire   [18:0] trunc_ln572_5_fu_1877_p1;
wire   [18:0] sext_ln571_5cast_fu_1936_p1;
wire   [11:0] add_ln580_5_fu_1946_p2;
wire  signed [31:0] sext_ln580_5_fu_1951_p1;
wire   [0:0] icmp_ln580_5_fu_1924_p2;
wire   [0:0] p_Result_3_5_fu_1955_p3;
wire   [0:0] select_ln580_5_fu_1963_p3;
wire   [18:0] select_ln574_5_fu_1916_p3;
wire   [18:0] zext_ln377_5_fu_1970_p1;
wire   [0:0] icmp_ln571_5_fu_1872_p2;
wire   [0:0] xor_ln560_5_fu_1980_p2;
wire   [0:0] or_ln571_5_fu_1991_p2;
wire   [0:0] xor_ln571_5_fu_1996_p2;
wire   [0:0] and_ln570_5_fu_2002_p2;
wire   [18:0] shl_ln593_5_fu_1940_p2;
wire   [63:0] bitcast_ln724_6_fu_2021_p1;
wire   [10:0] exp_tmp_5_fu_2037_p4;
wire   [62:0] trunc_ln546_6_fu_2025_p1;
wire   [11:0] zext_ln455_6_fu_2047_p1;
wire   [63:0] bitcast_ln724_7_fu_2067_p1;
wire   [10:0] exp_tmp_6_fu_2083_p4;
wire   [62:0] trunc_ln546_7_fu_2071_p1;
wire   [11:0] zext_ln455_7_fu_2093_p1;
wire   [17:0] add_ln43_1_fu_2113_p2;
wire   [18:0] select_ln560_16_fu_2123_p3;
wire   [0:0] or_ln560_13_fu_2129_p2;
wire   [0:0] or_ln560_14_fu_2139_p2;
wire   [18:0] select_ln560_18_fu_2133_p3;
wire   [17:0] add_ln43_2_fu_2153_p2;
wire   [18:0] select_ln560_20_fu_2163_p3;
wire   [0:0] or_ln560_16_fu_2169_p2;
wire   [0:0] or_ln560_17_fu_2179_p2;
wire   [18:0] select_ln560_22_fu_2173_p3;
wire   [52:0] zext_ln558_6_cast_fu_2193_p3;
wire   [53:0] zext_ln558_6_fu_2200_p1;
wire   [53:0] sub_ln455_6_fu_2204_p2;
wire   [0:0] icmp_ln570_6_fu_2217_p2;
wire   [11:0] add_ln570_6_fu_2222_p2;
wire   [11:0] sub_ln570_6_fu_2227_p2;
wire  signed [11:0] select_ln570_6_fu_2232_p3;
wire   [53:0] select_ln559_6_fu_2210_p3;
wire   [0:0] tmp_53_fu_2259_p3;
wire  signed [31:0] sext_ln571_6_fu_2240_p1;
wire   [53:0] zext_ln575_6_fu_2274_p1;
wire   [53:0] ashr_ln575_6_fu_2278_p2;
wire   [0:0] icmp_ln574_6_fu_2253_p2;
wire   [18:0] trunc_ln575_6_fu_2284_p1;
wire   [18:0] select_ln577_6_fu_2266_p3;
wire   [18:0] trunc_ln572_6_fu_2249_p1;
wire   [18:0] sext_ln571_6cast_fu_2308_p1;
wire   [11:0] add_ln580_6_fu_2318_p2;
wire  signed [31:0] sext_ln580_6_fu_2323_p1;
wire   [0:0] icmp_ln580_6_fu_2296_p2;
wire   [0:0] p_Result_3_6_fu_2327_p3;
wire   [0:0] select_ln580_6_fu_2335_p3;
wire   [18:0] select_ln574_6_fu_2288_p3;
wire   [18:0] zext_ln377_6_fu_2342_p1;
wire   [0:0] icmp_ln571_6_fu_2244_p2;
wire   [0:0] xor_ln560_6_fu_2352_p2;
wire   [0:0] or_ln571_6_fu_2363_p2;
wire   [0:0] xor_ln571_6_fu_2368_p2;
wire   [0:0] and_ln570_6_fu_2374_p2;
wire   [18:0] shl_ln593_6_fu_2312_p2;
wire   [52:0] zext_ln558_7_cast_fu_2393_p3;
wire   [53:0] zext_ln558_7_fu_2400_p1;
wire   [53:0] sub_ln455_7_fu_2404_p2;
wire   [0:0] icmp_ln570_7_fu_2417_p2;
wire   [11:0] add_ln570_7_fu_2422_p2;
wire   [11:0] sub_ln570_7_fu_2427_p2;
wire  signed [11:0] select_ln570_7_fu_2432_p3;
wire   [53:0] select_ln559_7_fu_2410_p3;
wire   [0:0] tmp_55_fu_2459_p3;
wire  signed [31:0] sext_ln571_7_fu_2440_p1;
wire   [53:0] zext_ln575_7_fu_2474_p1;
wire   [53:0] ashr_ln575_7_fu_2478_p2;
wire   [0:0] icmp_ln574_7_fu_2453_p2;
wire   [18:0] trunc_ln575_7_fu_2484_p1;
wire   [18:0] select_ln577_7_fu_2466_p3;
wire   [18:0] trunc_ln572_7_fu_2449_p1;
wire   [18:0] sext_ln571_7cast_fu_2508_p1;
wire   [11:0] add_ln580_7_fu_2518_p2;
wire  signed [31:0] sext_ln580_7_fu_2523_p1;
wire   [0:0] icmp_ln580_7_fu_2496_p2;
wire   [0:0] p_Result_3_7_fu_2527_p3;
wire   [0:0] select_ln580_7_fu_2535_p3;
wire   [18:0] select_ln574_7_fu_2488_p3;
wire   [18:0] zext_ln377_7_fu_2542_p1;
wire   [0:0] icmp_ln571_7_fu_2444_p2;
wire   [0:0] xor_ln560_7_fu_2552_p2;
wire   [0:0] or_ln571_7_fu_2563_p2;
wire   [0:0] xor_ln571_7_fu_2568_p2;
wire   [0:0] and_ln570_7_fu_2574_p2;
wire   [18:0] shl_ln593_7_fu_2512_p2;
wire   [17:0] add_ln43_3_fu_2593_p2;
wire   [18:0] select_ln560_24_fu_2603_p3;
wire   [0:0] or_ln560_19_fu_2609_p2;
wire   [0:0] or_ln560_20_fu_2619_p2;
wire   [18:0] select_ln560_26_fu_2613_p3;
wire   [17:0] or_ln43_2_fu_2633_p2;
wire   [18:0] select_ln560_28_fu_2643_p3;
wire   [0:0] or_ln560_22_fu_2649_p2;
wire   [0:0] or_ln560_23_fu_2659_p2;
wire   [18:0] select_ln560_30_fu_2653_p3;
reg    grp_fu_220_ce;
reg    grp_fu_223_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage0;
reg    ap_idle_pp0_0to0;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_1to2;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

kalman_filter_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_220_p0),
    .ce(grp_fu_220_ce),
    .dout(grp_fu_220_p1)
);

kalman_filter_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_223_p0),
    .ce(grp_fu_223_ce),
    .dout(grp_fu_223_p1)
);

kalman_filter_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        counter_fu_128 <= 19'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        counter_fu_128 <= add_ln37_1_fu_1530_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_132 <= 16'd0;
    end else if (((icmp_ln37_reg_2692 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_132 <= add_ln37_reg_2696;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln560_1_reg_2802 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln377_2_reg_2860 <= add_ln377_2_fu_800_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln560_2_reg_2892 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln377_3_reg_2963 <= add_ln377_3_fu_1183_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln560_3_reg_2920 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln377_4_reg_2989 <= add_ln377_4_fu_1383_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln560_4_reg_3021 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln377_5_reg_3088 <= add_ln377_5_fu_1774_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln560_5_reg_3049 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln377_6_reg_3114 <= add_ln377_6_fu_1974_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln560_6_reg_3146 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln377_7_reg_3196 <= add_ln377_7_fu_2346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln560_7_reg_3174 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln377_8_reg_3222 <= add_ln377_8_fu_2546_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln560_reg_2774 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln377_reg_2834 <= add_ln377_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln37_reg_2696 <= add_ln37_fu_249_p2;
        and_ln571_1_reg_2865 <= and_ln571_1_fu_811_p2;
        and_ln571_reg_2839 <= and_ln571_fu_611_p2;
        icmp_ln37_reg_2692 <= icmp_ln37_fu_243_p2;
        icmp_ln560_2_reg_2892 <= icmp_ln560_2_fu_881_p2;
        icmp_ln560_3_reg_2920 <= icmp_ln560_3_fu_927_p2;
        icmp_ln592_1_reg_2855 <= icmp_ln592_1_fu_756_p2;
        icmp_ln592_reg_2829 <= icmp_ln592_fu_556_p2;
        or_ln560_3_reg_2870 <= or_ln560_3_fu_834_p2;
        or_ln560_reg_2844 <= or_ln560_fu_634_p2;
        select_ln560_1_reg_2850 <= select_ln560_1_fu_639_p3;
        select_ln560_5_reg_2876 <= select_ln560_5_fu_839_p3;
        sub_ln564_2_reg_2900 <= sub_ln564_2_fu_887_p2;
        sub_ln564_3_reg_2928 <= sub_ln564_3_fu_933_p2;
        tmp_44_reg_2881 <= bitcast_ln724_2_fu_847_p1[32'd63];
        tmp_46_reg_2909 <= bitcast_ln724_3_fu_893_p1[32'd63];
        trunc_ln554_2_reg_2887 <= trunc_ln554_2_fu_877_p1;
        trunc_ln554_3_reg_2915 <= trunc_ln554_3_fu_923_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        and_ln571_2_reg_2968 <= and_ln571_2_fu_1194_p2;
        and_ln571_3_reg_2994 <= and_ln571_3_fu_1394_p2;
        empty_35_reg_2947 <= empty_35_fu_955_p1;
        icmp_ln560_4_reg_3021 <= icmp_ln560_4_fu_1464_p2;
        icmp_ln560_5_reg_3049 <= icmp_ln560_5_fu_1510_p2;
        icmp_ln592_2_reg_2958 <= icmp_ln592_2_fu_1139_p2;
        icmp_ln592_3_reg_2984 <= icmp_ln592_3_fu_1339_p2;
        or_ln43_reg_2953[17 : 1] <= or_ln43_fu_989_p2[17 : 1];
        or_ln560_6_reg_2973 <= or_ln560_6_fu_1217_p2;
        or_ln560_9_reg_2999 <= or_ln560_9_fu_1417_p2;
        select_ln560_13_reg_3005 <= select_ln560_13_fu_1422_p3;
        select_ln560_9_reg_2979 <= select_ln560_9_fu_1222_p3;
        sub_ln564_4_reg_3029 <= sub_ln564_4_fu_1470_p2;
        sub_ln564_5_reg_3057 <= sub_ln564_5_fu_1516_p2;
        temp_V_reg_2701_pp0_iter1_reg <= temp_V_reg_2701;
        tmp_48_reg_3010 <= bitcast_ln724_4_fu_1430_p1[32'd63];
        tmp_50_reg_3038 <= bitcast_ln724_5_fu_1476_p1[32'd63];
        trunc_ln554_4_reg_3016 <= trunc_ln554_4_fu_1460_p1;
        trunc_ln554_5_reg_3044 <= trunc_ln554_5_fu_1506_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        and_ln571_4_reg_3093 <= and_ln571_4_fu_1785_p2;
        and_ln571_5_reg_3119 <= and_ln571_5_fu_1985_p2;
        icmp_ln560_6_reg_3146 <= icmp_ln560_6_fu_2055_p2;
        icmp_ln560_7_reg_3174 <= icmp_ln560_7_fu_2101_p2;
        icmp_ln592_4_reg_3083 <= icmp_ln592_4_fu_1730_p2;
        icmp_ln592_5_reg_3109 <= icmp_ln592_5_fu_1930_p2;
        or_ln43_1_reg_3076[17 : 2] <= or_ln43_1_fu_1581_p2[17 : 2];
        or_ln560_12_reg_3098 <= or_ln560_12_fu_1808_p2;
        or_ln560_15_reg_3124 <= or_ln560_15_fu_2008_p2;
        select_ln560_17_reg_3104 <= select_ln560_17_fu_1813_p3;
        select_ln560_21_reg_3130 <= select_ln560_21_fu_2013_p3;
        sub_ln564_6_reg_3154 <= sub_ln564_6_fu_2061_p2;
        sub_ln564_7_reg_3182 <= sub_ln564_7_fu_2107_p2;
        tmp_52_reg_3135 <= bitcast_ln724_6_fu_2021_p1[32'd63];
        tmp_54_reg_3163 <= bitcast_ln724_7_fu_2067_p1[32'd63];
        trunc_ln554_6_reg_3141 <= trunc_ln554_6_fu_2051_p1;
        trunc_ln554_7_reg_3169 <= trunc_ln554_7_fu_2097_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        and_ln571_6_reg_3201 <= and_ln571_6_fu_2357_p2;
        and_ln571_7_reg_3227 <= and_ln571_7_fu_2557_p2;
        icmp_ln592_6_reg_3191 <= icmp_ln592_6_fu_2302_p2;
        icmp_ln592_7_reg_3217 <= icmp_ln592_7_fu_2502_p2;
        or_ln560_18_reg_3206 <= or_ln560_18_fu_2380_p2;
        or_ln560_21_reg_3232 <= or_ln560_21_fu_2580_p2;
        select_ln560_25_reg_3212 <= select_ln560_25_fu_2385_p3;
        select_ln560_29_reg_3238 <= select_ln560_29_fu_2585_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_2692 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln560_1_reg_2802 <= icmp_ln560_1_fu_427_p2;
        icmp_ln560_reg_2774 <= icmp_ln560_fu_381_p2;
        sub_ln564_1_reg_2810 <= sub_ln564_1_fu_433_p2;
        sub_ln564_reg_2782 <= sub_ln564_fu_387_p2;
        tmp_42_reg_2791 <= bitcast_ln724_1_fu_393_p1[32'd63];
        tmp_reg_2763 <= bitcast_ln724_fu_347_p1[32'd63];
        trunc_ln554_1_reg_2797 <= trunc_ln554_1_fu_423_p1;
        trunc_ln554_reg_2769 <= trunc_ln554_fu_377_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_2692 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_Result_1_reg_2718 <= {{m_axi_gmem0_RDATA[63:32]}};
        p_Result_2_reg_2723 <= {{m_axi_gmem0_RDATA[95:64]}};
        p_Result_4_reg_2733 <= {{m_axi_gmem0_RDATA[159:128]}};
        p_Result_5_reg_2748 <= {{m_axi_gmem0_RDATA[255:224]}};
        p_Result_6_reg_2743 <= {{m_axi_gmem0_RDATA[223:192]}};
        p_Result_9_reg_2738 <= {{m_axi_gmem0_RDATA[191:160]}};
        p_Result_s_reg_2728 <= {{m_axi_gmem0_RDATA[127:96]}};
        temp_V_reg_2701 <= m_axi_gmem0_RDATA;
        trunc_ln668_reg_2713 <= trunc_ln668_fu_261_p1;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_2692 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_2692 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 16'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_132;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_2692 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_220_ce = 1'b1;
    end else begin
        grp_fu_220_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_220_p0 = bitcast_ln42_6_fu_1522_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_220_p0 = bitcast_ln42_4_fu_939_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_220_p0 = bitcast_ln42_2_fu_439_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_220_p0 = bitcast_ln42_fu_339_p1;
    end else begin
        grp_fu_220_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_223_ce = 1'b1;
    end else begin
        grp_fu_223_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_223_p0 = bitcast_ln42_7_fu_1526_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_223_p0 = bitcast_ln42_5_fu_943_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_223_p0 = bitcast_ln42_3_fu_443_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_223_p0 = bitcast_ln42_1_fu_343_p1;
    end else begin
        grp_fu_223_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_local_V_address0 = zext_ln666_6_fu_2638_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_local_V_address0 = zext_ln666_4_fu_2158_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        in_local_V_address0 = zext_ln666_2_fu_1586_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_local_V_address0 = zext_ln666_fu_995_p1;
    end else begin
        in_local_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_local_V_address1 = zext_ln666_5_fu_2598_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_local_V_address1 = zext_ln666_3_fu_2118_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        in_local_V_address1 = zext_ln666_1_fu_1546_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_local_V_address1 = counter_cast174_fu_950_p1;
    end else begin
        in_local_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_local_V_ce0 = 1'b1;
    end else begin
        in_local_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_local_V_ce1 = 1'b1;
    end else begin
        in_local_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_local_V_d0 = select_ln560_31_fu_2664_p3;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_local_V_d0 = select_ln560_23_fu_2184_p3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        in_local_V_d0 = select_ln560_15_fu_1612_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_local_V_d0 = select_ln560_7_fu_1021_p3;
    end else begin
        in_local_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_local_V_d1 = select_ln560_27_fu_2624_p3;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_local_V_d1 = select_ln560_19_fu_2144_p3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        in_local_V_d1 = select_ln560_11_fu_1572_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_local_V_d1 = select_ln560_3_fu_980_p3;
    end else begin
        in_local_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_local_V_we0 = 1'b1;
    end else begin
        in_local_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_local_V_we1 = 1'b1;
    end else begin
        in_local_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_2692 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m_axi_gmem0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln377_2_fu_800_p2 = (select_ln574_1_fu_742_p3 + zext_ln377_1_fu_796_p1);

assign add_ln377_3_fu_1183_p2 = (select_ln574_2_fu_1125_p3 + zext_ln377_2_fu_1179_p1);

assign add_ln377_4_fu_1383_p2 = (select_ln574_3_fu_1325_p3 + zext_ln377_3_fu_1379_p1);

assign add_ln377_5_fu_1774_p2 = (select_ln574_4_fu_1716_p3 + zext_ln377_4_fu_1770_p1);

assign add_ln377_6_fu_1974_p2 = (select_ln574_5_fu_1916_p3 + zext_ln377_5_fu_1970_p1);

assign add_ln377_7_fu_2346_p2 = (select_ln574_6_fu_2288_p3 + zext_ln377_6_fu_2342_p1);

assign add_ln377_8_fu_2546_p2 = (select_ln574_7_fu_2488_p3 + zext_ln377_7_fu_2542_p1);

assign add_ln377_fu_600_p2 = (select_ln574_fu_542_p3 + zext_ln377_fu_596_p1);

assign add_ln37_1_fu_1530_p2 = (counter_fu_128 + 19'd8);

assign add_ln37_fu_249_p2 = (ap_sig_allocacmp_i_2 + 16'd1);

assign add_ln43_1_fu_2113_p2 = (or_ln43_1_reg_3076 + 18'd1);

assign add_ln43_2_fu_2153_p2 = (or_ln43_1_reg_3076 + 18'd2);

assign add_ln43_3_fu_2593_p2 = (or_ln43_1_reg_3076 + 18'd3);

assign add_ln43_fu_1541_p2 = (or_ln43_reg_2953 + 18'd1);

assign add_ln570_1_fu_676_p2 = ($signed(sub_ln564_1_reg_2810) + $signed(12'd4090));

assign add_ln570_2_fu_1059_p2 = ($signed(sub_ln564_2_reg_2900) + $signed(12'd4090));

assign add_ln570_3_fu_1259_p2 = ($signed(sub_ln564_3_reg_2928) + $signed(12'd4090));

assign add_ln570_4_fu_1650_p2 = ($signed(sub_ln564_4_reg_3029) + $signed(12'd4090));

assign add_ln570_5_fu_1850_p2 = ($signed(sub_ln564_5_reg_3057) + $signed(12'd4090));

assign add_ln570_6_fu_2222_p2 = ($signed(sub_ln564_6_reg_3154) + $signed(12'd4090));

assign add_ln570_7_fu_2422_p2 = ($signed(sub_ln564_7_reg_3182) + $signed(12'd4090));

assign add_ln570_fu_476_p2 = ($signed(sub_ln564_reg_2782) + $signed(12'd4090));

assign add_ln580_1_fu_772_p2 = ($signed(sub_ln564_1_reg_2810) + $signed(12'd4089));

assign add_ln580_2_fu_1155_p2 = ($signed(sub_ln564_2_reg_2900) + $signed(12'd4089));

assign add_ln580_3_fu_1355_p2 = ($signed(sub_ln564_3_reg_2928) + $signed(12'd4089));

assign add_ln580_4_fu_1746_p2 = ($signed(sub_ln564_4_reg_3029) + $signed(12'd4089));

assign add_ln580_5_fu_1946_p2 = ($signed(sub_ln564_5_reg_3057) + $signed(12'd4089));

assign add_ln580_6_fu_2318_p2 = ($signed(sub_ln564_6_reg_3154) + $signed(12'd4089));

assign add_ln580_7_fu_2518_p2 = ($signed(sub_ln564_7_reg_3182) + $signed(12'd4089));

assign add_ln580_fu_572_p2 = ($signed(sub_ln564_reg_2782) + $signed(12'd4089));

assign and_ln570_1_fu_828_p2 = (xor_ln571_1_fu_822_p2 & icmp_ln570_1_fu_671_p2);

assign and_ln570_2_fu_1211_p2 = (xor_ln571_2_fu_1205_p2 & icmp_ln570_2_fu_1054_p2);

assign and_ln570_3_fu_1411_p2 = (xor_ln571_3_fu_1405_p2 & icmp_ln570_3_fu_1254_p2);

assign and_ln570_4_fu_1802_p2 = (xor_ln571_4_fu_1796_p2 & icmp_ln570_4_fu_1645_p2);

assign and_ln570_5_fu_2002_p2 = (xor_ln571_5_fu_1996_p2 & icmp_ln570_5_fu_1845_p2);

assign and_ln570_6_fu_2374_p2 = (xor_ln571_6_fu_2368_p2 & icmp_ln570_6_fu_2217_p2);

assign and_ln570_7_fu_2574_p2 = (xor_ln571_7_fu_2568_p2 & icmp_ln570_7_fu_2417_p2);

assign and_ln570_fu_628_p2 = (xor_ln571_fu_622_p2 & icmp_ln570_fu_471_p2);

assign and_ln571_1_fu_811_p2 = (xor_ln560_1_fu_806_p2 & icmp_ln571_1_fu_698_p2);

assign and_ln571_2_fu_1194_p2 = (xor_ln560_2_fu_1189_p2 & icmp_ln571_2_fu_1081_p2);

assign and_ln571_3_fu_1394_p2 = (xor_ln560_3_fu_1389_p2 & icmp_ln571_3_fu_1281_p2);

assign and_ln571_4_fu_1785_p2 = (xor_ln560_4_fu_1780_p2 & icmp_ln571_4_fu_1672_p2);

assign and_ln571_5_fu_1985_p2 = (xor_ln560_5_fu_1980_p2 & icmp_ln571_5_fu_1872_p2);

assign and_ln571_6_fu_2357_p2 = (xor_ln560_6_fu_2352_p2 & icmp_ln571_6_fu_2244_p2);

assign and_ln571_7_fu_2557_p2 = (xor_ln560_7_fu_2552_p2 & icmp_ln571_7_fu_2444_p2);

assign and_ln571_fu_611_p2 = (xor_ln560_fu_606_p2 & icmp_ln571_fu_498_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln37_reg_2692 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln37_reg_2692 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((m_axi_gmem0_RVALID == 1'b0) & (icmp_ln37_reg_2692 == 1'd0));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign ashr_ln575_1_fu_732_p2 = $signed(select_ln559_1_fu_664_p3) >>> zext_ln575_1_fu_728_p1;

assign ashr_ln575_2_fu_1115_p2 = $signed(select_ln559_2_fu_1047_p3) >>> zext_ln575_2_fu_1111_p1;

assign ashr_ln575_3_fu_1315_p2 = $signed(select_ln559_3_fu_1247_p3) >>> zext_ln575_3_fu_1311_p1;

assign ashr_ln575_4_fu_1706_p2 = $signed(select_ln559_4_fu_1638_p3) >>> zext_ln575_4_fu_1702_p1;

assign ashr_ln575_5_fu_1906_p2 = $signed(select_ln559_5_fu_1838_p3) >>> zext_ln575_5_fu_1902_p1;

assign ashr_ln575_6_fu_2278_p2 = $signed(select_ln559_6_fu_2210_p3) >>> zext_ln575_6_fu_2274_p1;

assign ashr_ln575_7_fu_2478_p2 = $signed(select_ln559_7_fu_2410_p3) >>> zext_ln575_7_fu_2474_p1;

assign ashr_ln575_fu_532_p2 = $signed(select_ln559_fu_464_p3) >>> zext_ln575_fu_528_p1;

assign bitcast_ln42_1_fu_343_p1 = p_Result_1_reg_2718;

assign bitcast_ln42_2_fu_439_p1 = p_Result_2_reg_2723;

assign bitcast_ln42_3_fu_443_p1 = p_Result_s_reg_2728;

assign bitcast_ln42_4_fu_939_p1 = p_Result_4_reg_2733;

assign bitcast_ln42_5_fu_943_p1 = p_Result_9_reg_2738;

assign bitcast_ln42_6_fu_1522_p1 = p_Result_6_reg_2743;

assign bitcast_ln42_7_fu_1526_p1 = p_Result_5_reg_2748;

assign bitcast_ln42_fu_339_p1 = trunc_ln668_reg_2713;

assign bitcast_ln724_1_fu_393_p1 = grp_fu_223_p1;

assign bitcast_ln724_2_fu_847_p1 = grp_fu_220_p1;

assign bitcast_ln724_3_fu_893_p1 = grp_fu_223_p1;

assign bitcast_ln724_4_fu_1430_p1 = grp_fu_220_p1;

assign bitcast_ln724_5_fu_1476_p1 = grp_fu_223_p1;

assign bitcast_ln724_6_fu_2021_p1 = grp_fu_220_p1;

assign bitcast_ln724_7_fu_2067_p1 = grp_fu_223_p1;

assign bitcast_ln724_fu_347_p1 = grp_fu_220_p1;

assign counter_cast174_fu_950_p1 = counter_fu_128;

assign empty_35_fu_955_p1 = counter_fu_128[17:0];

assign exp_tmp6_fu_363_p4 = {{bitcast_ln724_fu_347_p1[62:52]}};

assign exp_tmp_1_fu_863_p4 = {{bitcast_ln724_2_fu_847_p1[62:52]}};

assign exp_tmp_2_fu_909_p4 = {{bitcast_ln724_3_fu_893_p1[62:52]}};

assign exp_tmp_3_fu_1446_p4 = {{bitcast_ln724_4_fu_1430_p1[62:52]}};

assign exp_tmp_4_fu_1492_p4 = {{bitcast_ln724_5_fu_1476_p1[62:52]}};

assign exp_tmp_5_fu_2037_p4 = {{bitcast_ln724_6_fu_2021_p1[62:52]}};

assign exp_tmp_6_fu_2083_p4 = {{bitcast_ln724_7_fu_2067_p1[62:52]}};

assign exp_tmp_s_fu_409_p4 = {{bitcast_ln724_1_fu_393_p1[62:52]}};

assign icmp_ln37_fu_243_p2 = ((ap_sig_allocacmp_i_2 == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln560_1_fu_427_p2 = ((trunc_ln546_1_fu_397_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_2_fu_881_p2 = ((trunc_ln546_2_fu_851_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_3_fu_927_p2 = ((trunc_ln546_3_fu_897_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_4_fu_1464_p2 = ((trunc_ln546_4_fu_1434_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_5_fu_1510_p2 = ((trunc_ln546_5_fu_1480_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_6_fu_2055_p2 = ((trunc_ln546_6_fu_2025_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_7_fu_2101_p2 = ((trunc_ln546_7_fu_2071_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_fu_381_p2 = ((trunc_ln546_fu_351_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln570_1_fu_671_p2 = (($signed(sub_ln564_1_reg_2810) > $signed(12'd6)) ? 1'b1 : 1'b0);

assign icmp_ln570_2_fu_1054_p2 = (($signed(sub_ln564_2_reg_2900) > $signed(12'd6)) ? 1'b1 : 1'b0);

assign icmp_ln570_3_fu_1254_p2 = (($signed(sub_ln564_3_reg_2928) > $signed(12'd6)) ? 1'b1 : 1'b0);

assign icmp_ln570_4_fu_1645_p2 = (($signed(sub_ln564_4_reg_3029) > $signed(12'd6)) ? 1'b1 : 1'b0);

assign icmp_ln570_5_fu_1845_p2 = (($signed(sub_ln564_5_reg_3057) > $signed(12'd6)) ? 1'b1 : 1'b0);

assign icmp_ln570_6_fu_2217_p2 = (($signed(sub_ln564_6_reg_3154) > $signed(12'd6)) ? 1'b1 : 1'b0);

assign icmp_ln570_7_fu_2417_p2 = (($signed(sub_ln564_7_reg_3182) > $signed(12'd6)) ? 1'b1 : 1'b0);

assign icmp_ln570_fu_471_p2 = (($signed(sub_ln564_reg_2782) > $signed(12'd6)) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_698_p2 = ((sub_ln564_1_reg_2810 == 12'd6) ? 1'b1 : 1'b0);

assign icmp_ln571_2_fu_1081_p2 = ((sub_ln564_2_reg_2900 == 12'd6) ? 1'b1 : 1'b0);

assign icmp_ln571_3_fu_1281_p2 = ((sub_ln564_3_reg_2928 == 12'd6) ? 1'b1 : 1'b0);

assign icmp_ln571_4_fu_1672_p2 = ((sub_ln564_4_reg_3029 == 12'd6) ? 1'b1 : 1'b0);

assign icmp_ln571_5_fu_1872_p2 = ((sub_ln564_5_reg_3057 == 12'd6) ? 1'b1 : 1'b0);

assign icmp_ln571_6_fu_2244_p2 = ((sub_ln564_6_reg_3154 == 12'd6) ? 1'b1 : 1'b0);

assign icmp_ln571_7_fu_2444_p2 = ((sub_ln564_7_reg_3182 == 12'd6) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_498_p2 = ((sub_ln564_reg_2782 == 12'd6) ? 1'b1 : 1'b0);

assign icmp_ln574_1_fu_707_p2 = ((select_ln570_1_fu_686_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_2_fu_1090_p2 = ((select_ln570_2_fu_1069_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_3_fu_1290_p2 = ((select_ln570_3_fu_1269_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_4_fu_1681_p2 = ((select_ln570_4_fu_1660_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_5_fu_1881_p2 = ((select_ln570_5_fu_1860_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_6_fu_2253_p2 = ((select_ln570_6_fu_2232_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_7_fu_2453_p2 = ((select_ln570_7_fu_2432_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_507_p2 = ((select_ln570_fu_486_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln580_1_fu_750_p2 = (($signed(add_ln570_1_fu_676_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln580_2_fu_1133_p2 = (($signed(add_ln570_2_fu_1059_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln580_3_fu_1333_p2 = (($signed(add_ln570_3_fu_1259_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln580_4_fu_1724_p2 = (($signed(add_ln570_4_fu_1650_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln580_5_fu_1924_p2 = (($signed(add_ln570_5_fu_1850_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln580_6_fu_2296_p2 = (($signed(add_ln570_6_fu_2222_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln580_7_fu_2496_p2 = (($signed(add_ln570_7_fu_2422_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_550_p2 = (($signed(add_ln570_fu_476_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln592_1_fu_756_p2 = ((select_ln570_1_fu_686_p3 < 12'd19) ? 1'b1 : 1'b0);

assign icmp_ln592_2_fu_1139_p2 = ((select_ln570_2_fu_1069_p3 < 12'd19) ? 1'b1 : 1'b0);

assign icmp_ln592_3_fu_1339_p2 = ((select_ln570_3_fu_1269_p3 < 12'd19) ? 1'b1 : 1'b0);

assign icmp_ln592_4_fu_1730_p2 = ((select_ln570_4_fu_1660_p3 < 12'd19) ? 1'b1 : 1'b0);

assign icmp_ln592_5_fu_1930_p2 = ((select_ln570_5_fu_1860_p3 < 12'd19) ? 1'b1 : 1'b0);

assign icmp_ln592_6_fu_2302_p2 = ((select_ln570_6_fu_2232_p3 < 12'd19) ? 1'b1 : 1'b0);

assign icmp_ln592_7_fu_2502_p2 = ((select_ln570_7_fu_2432_p3 < 12'd19) ? 1'b1 : 1'b0);

assign icmp_ln592_fu_556_p2 = ((select_ln570_fu_486_p3 < 12'd19) ? 1'b1 : 1'b0);

assign m_axi_gmem0_ARADDR = 64'd0;

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd0;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_ARVALID = 1'b0;

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_WDATA = 256'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 32'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign or_ln43_1_fu_1581_p2 = (empty_35_reg_2947 | 18'd3);

assign or_ln43_2_fu_2633_p2 = (empty_35_reg_2947 | 18'd7);

assign or_ln43_fu_989_p2 = (empty_35_fu_955_p1 | 18'd1);

assign or_ln560_10_fu_1597_p2 = (icmp_ln592_3_reg_2984 | and_ln571_3_reg_2994);

assign or_ln560_11_fu_1607_p2 = (or_ln560_9_reg_2999 | or_ln560_10_fu_1597_p2);

assign or_ln560_12_fu_1808_p2 = (icmp_ln560_4_reg_3021 | and_ln570_4_fu_1802_p2);

assign or_ln560_13_fu_2129_p2 = (icmp_ln592_4_reg_3083 | and_ln571_4_reg_3093);

assign or_ln560_14_fu_2139_p2 = (or_ln560_13_fu_2129_p2 | or_ln560_12_reg_3098);

assign or_ln560_15_fu_2008_p2 = (icmp_ln560_5_reg_3049 | and_ln570_5_fu_2002_p2);

assign or_ln560_16_fu_2169_p2 = (icmp_ln592_5_reg_3109 | and_ln571_5_reg_3119);

assign or_ln560_17_fu_2179_p2 = (or_ln560_16_fu_2169_p2 | or_ln560_15_reg_3124);

assign or_ln560_18_fu_2380_p2 = (icmp_ln560_6_reg_3146 | and_ln570_6_fu_2374_p2);

assign or_ln560_19_fu_2609_p2 = (icmp_ln592_6_reg_3191 | and_ln571_6_reg_3201);

assign or_ln560_1_fu_965_p2 = (icmp_ln592_reg_2829 | and_ln571_reg_2839);

assign or_ln560_20_fu_2619_p2 = (or_ln560_19_fu_2609_p2 | or_ln560_18_reg_3206);

assign or_ln560_21_fu_2580_p2 = (icmp_ln560_7_reg_3174 | and_ln570_7_fu_2574_p2);

assign or_ln560_22_fu_2649_p2 = (icmp_ln592_7_reg_3217 | and_ln571_7_reg_3227);

assign or_ln560_23_fu_2659_p2 = (or_ln560_22_fu_2649_p2 | or_ln560_21_reg_3232);

assign or_ln560_2_fu_975_p2 = (or_ln560_reg_2844 | or_ln560_1_fu_965_p2);

assign or_ln560_3_fu_834_p2 = (icmp_ln560_1_reg_2802 | and_ln570_1_fu_828_p2);

assign or_ln560_4_fu_1006_p2 = (icmp_ln592_1_reg_2855 | and_ln571_1_reg_2865);

assign or_ln560_5_fu_1016_p2 = (or_ln560_4_fu_1006_p2 | or_ln560_3_reg_2870);

assign or_ln560_6_fu_1217_p2 = (icmp_ln560_2_reg_2892 | and_ln570_2_fu_1211_p2);

assign or_ln560_7_fu_1557_p2 = (icmp_ln592_2_reg_2958 | and_ln571_2_reg_2968);

assign or_ln560_8_fu_1567_p2 = (or_ln560_7_fu_1557_p2 | or_ln560_6_reg_2973);

assign or_ln560_9_fu_1417_p2 = (icmp_ln560_3_reg_2920 | and_ln570_3_fu_1411_p2);

assign or_ln560_fu_634_p2 = (icmp_ln560_reg_2774 | and_ln570_fu_628_p2);

assign or_ln571_1_fu_817_p2 = (icmp_ln571_1_fu_698_p2 | icmp_ln560_1_reg_2802);

assign or_ln571_2_fu_1200_p2 = (icmp_ln571_2_fu_1081_p2 | icmp_ln560_2_reg_2892);

assign or_ln571_3_fu_1400_p2 = (icmp_ln571_3_fu_1281_p2 | icmp_ln560_3_reg_2920);

assign or_ln571_4_fu_1791_p2 = (icmp_ln571_4_fu_1672_p2 | icmp_ln560_4_reg_3021);

assign or_ln571_5_fu_1991_p2 = (icmp_ln571_5_fu_1872_p2 | icmp_ln560_5_reg_3049);

assign or_ln571_6_fu_2363_p2 = (icmp_ln571_6_fu_2244_p2 | icmp_ln560_6_reg_3146);

assign or_ln571_7_fu_2563_p2 = (icmp_ln571_7_fu_2444_p2 | icmp_ln560_7_reg_3174);

assign or_ln571_fu_617_p2 = (icmp_ln571_fu_498_p2 | icmp_ln560_reg_2774);

assign p_Result_3_1_fu_781_p3 = select_ln559_1_fu_664_p3[sext_ln580_1_fu_777_p1];

assign p_Result_3_2_fu_1164_p3 = select_ln559_2_fu_1047_p3[sext_ln580_2_fu_1160_p1];

assign p_Result_3_3_fu_1364_p3 = select_ln559_3_fu_1247_p3[sext_ln580_3_fu_1360_p1];

assign p_Result_3_4_fu_1755_p3 = select_ln559_4_fu_1638_p3[sext_ln580_4_fu_1751_p1];

assign p_Result_3_5_fu_1955_p3 = select_ln559_5_fu_1838_p3[sext_ln580_5_fu_1951_p1];

assign p_Result_3_6_fu_2327_p3 = select_ln559_6_fu_2210_p3[sext_ln580_6_fu_2323_p1];

assign p_Result_3_7_fu_2527_p3 = select_ln559_7_fu_2410_p3[sext_ln580_7_fu_2523_p1];

assign p_Result_3_fu_581_p3 = select_ln559_fu_464_p3[sext_ln580_fu_577_p1];

assign select_ln559_1_fu_664_p3 = ((tmp_42_reg_2791[0:0] == 1'b1) ? sub_ln455_1_fu_658_p2 : zext_ln558_1_fu_654_p1);

assign select_ln559_2_fu_1047_p3 = ((tmp_44_reg_2881[0:0] == 1'b1) ? sub_ln455_2_fu_1041_p2 : zext_ln558_2_fu_1037_p1);

assign select_ln559_3_fu_1247_p3 = ((tmp_46_reg_2909[0:0] == 1'b1) ? sub_ln455_3_fu_1241_p2 : zext_ln558_3_fu_1237_p1);

assign select_ln559_4_fu_1638_p3 = ((tmp_48_reg_3010[0:0] == 1'b1) ? sub_ln455_4_fu_1632_p2 : zext_ln558_4_fu_1628_p1);

assign select_ln559_5_fu_1838_p3 = ((tmp_50_reg_3038[0:0] == 1'b1) ? sub_ln455_5_fu_1832_p2 : zext_ln558_5_fu_1828_p1);

assign select_ln559_6_fu_2210_p3 = ((tmp_52_reg_3135[0:0] == 1'b1) ? sub_ln455_6_fu_2204_p2 : zext_ln558_6_fu_2200_p1);

assign select_ln559_7_fu_2410_p3 = ((tmp_54_reg_3163[0:0] == 1'b1) ? sub_ln455_7_fu_2404_p2 : zext_ln558_7_fu_2400_p1);

assign select_ln559_fu_464_p3 = ((tmp_reg_2763[0:0] == 1'b1) ? sub_ln455_fu_458_p2 : zext_ln558_fu_454_p1);

assign select_ln560_10_fu_1561_p3 = ((or_ln560_6_reg_2973[0:0] == 1'b1) ? select_ln560_8_fu_1551_p3 : select_ln560_9_reg_2979);

assign select_ln560_11_fu_1572_p3 = ((or_ln560_8_fu_1567_p2[0:0] == 1'b1) ? select_ln560_10_fu_1561_p3 : 19'd0);

assign select_ln560_12_fu_1591_p3 = ((icmp_ln560_3_reg_2920[0:0] == 1'b1) ? 19'd0 : add_ln377_4_reg_2989);

assign select_ln560_13_fu_1422_p3 = ((and_ln571_3_fu_1394_p2[0:0] == 1'b1) ? trunc_ln572_3_fu_1286_p1 : shl_ln593_3_fu_1349_p2);

assign select_ln560_14_fu_1601_p3 = ((or_ln560_9_reg_2999[0:0] == 1'b1) ? select_ln560_12_fu_1591_p3 : select_ln560_13_reg_3005);

assign select_ln560_15_fu_1612_p3 = ((or_ln560_11_fu_1607_p2[0:0] == 1'b1) ? select_ln560_14_fu_1601_p3 : 19'd0);

assign select_ln560_16_fu_2123_p3 = ((icmp_ln560_4_reg_3021[0:0] == 1'b1) ? 19'd0 : add_ln377_5_reg_3088);

assign select_ln560_17_fu_1813_p3 = ((and_ln571_4_fu_1785_p2[0:0] == 1'b1) ? trunc_ln572_4_fu_1677_p1 : shl_ln593_4_fu_1740_p2);

assign select_ln560_18_fu_2133_p3 = ((or_ln560_12_reg_3098[0:0] == 1'b1) ? select_ln560_16_fu_2123_p3 : select_ln560_17_reg_3104);

assign select_ln560_19_fu_2144_p3 = ((or_ln560_14_fu_2139_p2[0:0] == 1'b1) ? select_ln560_18_fu_2133_p3 : 19'd0);

assign select_ln560_1_fu_639_p3 = ((and_ln571_fu_611_p2[0:0] == 1'b1) ? trunc_ln572_fu_503_p1 : shl_ln593_fu_566_p2);

assign select_ln560_20_fu_2163_p3 = ((icmp_ln560_5_reg_3049[0:0] == 1'b1) ? 19'd0 : add_ln377_6_reg_3114);

assign select_ln560_21_fu_2013_p3 = ((and_ln571_5_fu_1985_p2[0:0] == 1'b1) ? trunc_ln572_5_fu_1877_p1 : shl_ln593_5_fu_1940_p2);

assign select_ln560_22_fu_2173_p3 = ((or_ln560_15_reg_3124[0:0] == 1'b1) ? select_ln560_20_fu_2163_p3 : select_ln560_21_reg_3130);

assign select_ln560_23_fu_2184_p3 = ((or_ln560_17_fu_2179_p2[0:0] == 1'b1) ? select_ln560_22_fu_2173_p3 : 19'd0);

assign select_ln560_24_fu_2603_p3 = ((icmp_ln560_6_reg_3146[0:0] == 1'b1) ? 19'd0 : add_ln377_7_reg_3196);

assign select_ln560_25_fu_2385_p3 = ((and_ln571_6_fu_2357_p2[0:0] == 1'b1) ? trunc_ln572_6_fu_2249_p1 : shl_ln593_6_fu_2312_p2);

assign select_ln560_26_fu_2613_p3 = ((or_ln560_18_reg_3206[0:0] == 1'b1) ? select_ln560_24_fu_2603_p3 : select_ln560_25_reg_3212);

assign select_ln560_27_fu_2624_p3 = ((or_ln560_20_fu_2619_p2[0:0] == 1'b1) ? select_ln560_26_fu_2613_p3 : 19'd0);

assign select_ln560_28_fu_2643_p3 = ((icmp_ln560_7_reg_3174[0:0] == 1'b1) ? 19'd0 : add_ln377_8_reg_3222);

assign select_ln560_29_fu_2585_p3 = ((and_ln571_7_fu_2557_p2[0:0] == 1'b1) ? trunc_ln572_7_fu_2449_p1 : shl_ln593_7_fu_2512_p2);

assign select_ln560_2_fu_969_p3 = ((or_ln560_reg_2844[0:0] == 1'b1) ? select_ln560_fu_959_p3 : select_ln560_1_reg_2850);

assign select_ln560_30_fu_2653_p3 = ((or_ln560_21_reg_3232[0:0] == 1'b1) ? select_ln560_28_fu_2643_p3 : select_ln560_29_reg_3238);

assign select_ln560_31_fu_2664_p3 = ((or_ln560_23_fu_2659_p2[0:0] == 1'b1) ? select_ln560_30_fu_2653_p3 : 19'd0);

assign select_ln560_3_fu_980_p3 = ((or_ln560_2_fu_975_p2[0:0] == 1'b1) ? select_ln560_2_fu_969_p3 : 19'd0);

assign select_ln560_4_fu_1000_p3 = ((icmp_ln560_1_reg_2802[0:0] == 1'b1) ? 19'd0 : add_ln377_2_reg_2860);

assign select_ln560_5_fu_839_p3 = ((and_ln571_1_fu_811_p2[0:0] == 1'b1) ? trunc_ln572_1_fu_703_p1 : shl_ln593_1_fu_766_p2);

assign select_ln560_6_fu_1010_p3 = ((or_ln560_3_reg_2870[0:0] == 1'b1) ? select_ln560_4_fu_1000_p3 : select_ln560_5_reg_2876);

assign select_ln560_7_fu_1021_p3 = ((or_ln560_5_fu_1016_p2[0:0] == 1'b1) ? select_ln560_6_fu_1010_p3 : 19'd0);

assign select_ln560_8_fu_1551_p3 = ((icmp_ln560_2_reg_2892[0:0] == 1'b1) ? 19'd0 : add_ln377_3_reg_2963);

assign select_ln560_9_fu_1222_p3 = ((and_ln571_2_fu_1194_p2[0:0] == 1'b1) ? trunc_ln572_2_fu_1086_p1 : shl_ln593_2_fu_1149_p2);

assign select_ln560_fu_959_p3 = ((icmp_ln560_reg_2774[0:0] == 1'b1) ? 19'd0 : add_ln377_reg_2834);

assign select_ln570_1_fu_686_p3 = ((icmp_ln570_1_fu_671_p2[0:0] == 1'b1) ? add_ln570_1_fu_676_p2 : sub_ln570_1_fu_681_p2);

assign select_ln570_2_fu_1069_p3 = ((icmp_ln570_2_fu_1054_p2[0:0] == 1'b1) ? add_ln570_2_fu_1059_p2 : sub_ln570_2_fu_1064_p2);

assign select_ln570_3_fu_1269_p3 = ((icmp_ln570_3_fu_1254_p2[0:0] == 1'b1) ? add_ln570_3_fu_1259_p2 : sub_ln570_3_fu_1264_p2);

assign select_ln570_4_fu_1660_p3 = ((icmp_ln570_4_fu_1645_p2[0:0] == 1'b1) ? add_ln570_4_fu_1650_p2 : sub_ln570_4_fu_1655_p2);

assign select_ln570_5_fu_1860_p3 = ((icmp_ln570_5_fu_1845_p2[0:0] == 1'b1) ? add_ln570_5_fu_1850_p2 : sub_ln570_5_fu_1855_p2);

assign select_ln570_6_fu_2232_p3 = ((icmp_ln570_6_fu_2217_p2[0:0] == 1'b1) ? add_ln570_6_fu_2222_p2 : sub_ln570_6_fu_2227_p2);

assign select_ln570_7_fu_2432_p3 = ((icmp_ln570_7_fu_2417_p2[0:0] == 1'b1) ? add_ln570_7_fu_2422_p2 : sub_ln570_7_fu_2427_p2);

assign select_ln570_fu_486_p3 = ((icmp_ln570_fu_471_p2[0:0] == 1'b1) ? add_ln570_fu_476_p2 : sub_ln570_fu_481_p2);

assign select_ln574_1_fu_742_p3 = ((icmp_ln574_1_fu_707_p2[0:0] == 1'b1) ? trunc_ln575_1_fu_738_p1 : select_ln577_1_fu_720_p3);

assign select_ln574_2_fu_1125_p3 = ((icmp_ln574_2_fu_1090_p2[0:0] == 1'b1) ? trunc_ln575_2_fu_1121_p1 : select_ln577_2_fu_1103_p3);

assign select_ln574_3_fu_1325_p3 = ((icmp_ln574_3_fu_1290_p2[0:0] == 1'b1) ? trunc_ln575_3_fu_1321_p1 : select_ln577_3_fu_1303_p3);

assign select_ln574_4_fu_1716_p3 = ((icmp_ln574_4_fu_1681_p2[0:0] == 1'b1) ? trunc_ln575_4_fu_1712_p1 : select_ln577_4_fu_1694_p3);

assign select_ln574_5_fu_1916_p3 = ((icmp_ln574_5_fu_1881_p2[0:0] == 1'b1) ? trunc_ln575_5_fu_1912_p1 : select_ln577_5_fu_1894_p3);

assign select_ln574_6_fu_2288_p3 = ((icmp_ln574_6_fu_2253_p2[0:0] == 1'b1) ? trunc_ln575_6_fu_2284_p1 : select_ln577_6_fu_2266_p3);

assign select_ln574_7_fu_2488_p3 = ((icmp_ln574_7_fu_2453_p2[0:0] == 1'b1) ? trunc_ln575_7_fu_2484_p1 : select_ln577_7_fu_2466_p3);

assign select_ln574_fu_542_p3 = ((icmp_ln574_fu_507_p2[0:0] == 1'b1) ? trunc_ln575_fu_538_p1 : select_ln577_fu_520_p3);

assign select_ln577_1_fu_720_p3 = ((tmp_43_fu_713_p3[0:0] == 1'b1) ? 19'd524287 : 19'd0);

assign select_ln577_2_fu_1103_p3 = ((tmp_45_fu_1096_p3[0:0] == 1'b1) ? 19'd524287 : 19'd0);

assign select_ln577_3_fu_1303_p3 = ((tmp_47_fu_1296_p3[0:0] == 1'b1) ? 19'd524287 : 19'd0);

assign select_ln577_4_fu_1694_p3 = ((tmp_49_fu_1687_p3[0:0] == 1'b1) ? 19'd524287 : 19'd0);

assign select_ln577_5_fu_1894_p3 = ((tmp_51_fu_1887_p3[0:0] == 1'b1) ? 19'd524287 : 19'd0);

assign select_ln577_6_fu_2266_p3 = ((tmp_53_fu_2259_p3[0:0] == 1'b1) ? 19'd524287 : 19'd0);

assign select_ln577_7_fu_2466_p3 = ((tmp_55_fu_2459_p3[0:0] == 1'b1) ? 19'd524287 : 19'd0);

assign select_ln577_fu_520_p3 = ((tmp_41_fu_513_p3[0:0] == 1'b1) ? 19'd524287 : 19'd0);

assign select_ln580_1_fu_789_p3 = ((icmp_ln580_1_fu_750_p2[0:0] == 1'b1) ? tmp_42_reg_2791 : p_Result_3_1_fu_781_p3);

assign select_ln580_2_fu_1172_p3 = ((icmp_ln580_2_fu_1133_p2[0:0] == 1'b1) ? tmp_44_reg_2881 : p_Result_3_2_fu_1164_p3);

assign select_ln580_3_fu_1372_p3 = ((icmp_ln580_3_fu_1333_p2[0:0] == 1'b1) ? tmp_46_reg_2909 : p_Result_3_3_fu_1364_p3);

assign select_ln580_4_fu_1763_p3 = ((icmp_ln580_4_fu_1724_p2[0:0] == 1'b1) ? tmp_48_reg_3010 : p_Result_3_4_fu_1755_p3);

assign select_ln580_5_fu_1963_p3 = ((icmp_ln580_5_fu_1924_p2[0:0] == 1'b1) ? tmp_50_reg_3038 : p_Result_3_5_fu_1955_p3);

assign select_ln580_6_fu_2335_p3 = ((icmp_ln580_6_fu_2296_p2[0:0] == 1'b1) ? tmp_52_reg_3135 : p_Result_3_6_fu_2327_p3);

assign select_ln580_7_fu_2535_p3 = ((icmp_ln580_7_fu_2496_p2[0:0] == 1'b1) ? tmp_54_reg_3163 : p_Result_3_7_fu_2527_p3);

assign select_ln580_fu_589_p3 = ((icmp_ln580_fu_550_p2[0:0] == 1'b1) ? tmp_reg_2763 : p_Result_3_fu_581_p3);

assign sext_ln571_1_fu_694_p1 = select_ln570_1_fu_686_p3;

assign sext_ln571_1cast_fu_762_p1 = sext_ln571_1_fu_694_p1[18:0];

assign sext_ln571_2_fu_1077_p1 = select_ln570_2_fu_1069_p3;

assign sext_ln571_2cast_fu_1145_p1 = sext_ln571_2_fu_1077_p1[18:0];

assign sext_ln571_3_fu_1277_p1 = select_ln570_3_fu_1269_p3;

assign sext_ln571_3cast_fu_1345_p1 = sext_ln571_3_fu_1277_p1[18:0];

assign sext_ln571_4_fu_1668_p1 = select_ln570_4_fu_1660_p3;

assign sext_ln571_4cast_fu_1736_p1 = sext_ln571_4_fu_1668_p1[18:0];

assign sext_ln571_5_fu_1868_p1 = select_ln570_5_fu_1860_p3;

assign sext_ln571_5cast_fu_1936_p1 = sext_ln571_5_fu_1868_p1[18:0];

assign sext_ln571_6_fu_2240_p1 = select_ln570_6_fu_2232_p3;

assign sext_ln571_6cast_fu_2308_p1 = sext_ln571_6_fu_2240_p1[18:0];

assign sext_ln571_7_fu_2440_p1 = select_ln570_7_fu_2432_p3;

assign sext_ln571_7cast_fu_2508_p1 = sext_ln571_7_fu_2440_p1[18:0];

assign sext_ln571_fu_494_p1 = select_ln570_fu_486_p3;

assign sext_ln571cast_fu_562_p1 = sext_ln571_fu_494_p1[18:0];

assign sext_ln580_1_fu_777_p1 = $signed(add_ln580_1_fu_772_p2);

assign sext_ln580_2_fu_1160_p1 = $signed(add_ln580_2_fu_1155_p2);

assign sext_ln580_3_fu_1360_p1 = $signed(add_ln580_3_fu_1355_p2);

assign sext_ln580_4_fu_1751_p1 = $signed(add_ln580_4_fu_1746_p2);

assign sext_ln580_5_fu_1951_p1 = $signed(add_ln580_5_fu_1946_p2);

assign sext_ln580_6_fu_2323_p1 = $signed(add_ln580_6_fu_2318_p2);

assign sext_ln580_7_fu_2523_p1 = $signed(add_ln580_7_fu_2518_p2);

assign sext_ln580_fu_577_p1 = $signed(add_ln580_fu_572_p2);

assign shl_ln593_1_fu_766_p2 = trunc_ln572_1_fu_703_p1 << sext_ln571_1cast_fu_762_p1;

assign shl_ln593_2_fu_1149_p2 = trunc_ln572_2_fu_1086_p1 << sext_ln571_2cast_fu_1145_p1;

assign shl_ln593_3_fu_1349_p2 = trunc_ln572_3_fu_1286_p1 << sext_ln571_3cast_fu_1345_p1;

assign shl_ln593_4_fu_1740_p2 = trunc_ln572_4_fu_1677_p1 << sext_ln571_4cast_fu_1736_p1;

assign shl_ln593_5_fu_1940_p2 = trunc_ln572_5_fu_1877_p1 << sext_ln571_5cast_fu_1936_p1;

assign shl_ln593_6_fu_2312_p2 = trunc_ln572_6_fu_2249_p1 << sext_ln571_6cast_fu_2308_p1;

assign shl_ln593_7_fu_2512_p2 = trunc_ln572_7_fu_2449_p1 << sext_ln571_7cast_fu_2508_p1;

assign shl_ln593_fu_566_p2 = trunc_ln572_fu_503_p1 << sext_ln571cast_fu_562_p1;

assign sub_ln455_1_fu_658_p2 = (54'd0 - zext_ln558_1_fu_654_p1);

assign sub_ln455_2_fu_1041_p2 = (54'd0 - zext_ln558_2_fu_1037_p1);

assign sub_ln455_3_fu_1241_p2 = (54'd0 - zext_ln558_3_fu_1237_p1);

assign sub_ln455_4_fu_1632_p2 = (54'd0 - zext_ln558_4_fu_1628_p1);

assign sub_ln455_5_fu_1832_p2 = (54'd0 - zext_ln558_5_fu_1828_p1);

assign sub_ln455_6_fu_2204_p2 = (54'd0 - zext_ln558_6_fu_2200_p1);

assign sub_ln455_7_fu_2404_p2 = (54'd0 - zext_ln558_7_fu_2400_p1);

assign sub_ln455_fu_458_p2 = (54'd0 - zext_ln558_fu_454_p1);

assign sub_ln564_1_fu_433_p2 = (12'd1075 - zext_ln455_1_fu_419_p1);

assign sub_ln564_2_fu_887_p2 = (12'd1075 - zext_ln455_2_fu_873_p1);

assign sub_ln564_3_fu_933_p2 = (12'd1075 - zext_ln455_3_fu_919_p1);

assign sub_ln564_4_fu_1470_p2 = (12'd1075 - zext_ln455_4_fu_1456_p1);

assign sub_ln564_5_fu_1516_p2 = (12'd1075 - zext_ln455_5_fu_1502_p1);

assign sub_ln564_6_fu_2061_p2 = (12'd1075 - zext_ln455_6_fu_2047_p1);

assign sub_ln564_7_fu_2107_p2 = (12'd1075 - zext_ln455_7_fu_2093_p1);

assign sub_ln564_fu_387_p2 = (12'd1075 - zext_ln455_fu_373_p1);

assign sub_ln570_1_fu_681_p2 = (12'd6 - sub_ln564_1_reg_2810);

assign sub_ln570_2_fu_1064_p2 = (12'd6 - sub_ln564_2_reg_2900);

assign sub_ln570_3_fu_1264_p2 = (12'd6 - sub_ln564_3_reg_2928);

assign sub_ln570_4_fu_1655_p2 = (12'd6 - sub_ln564_4_reg_3029);

assign sub_ln570_5_fu_1855_p2 = (12'd6 - sub_ln564_5_reg_3057);

assign sub_ln570_6_fu_2227_p2 = (12'd6 - sub_ln564_6_reg_3154);

assign sub_ln570_7_fu_2427_p2 = (12'd6 - sub_ln564_7_reg_3182);

assign sub_ln570_fu_481_p2 = (12'd6 - sub_ln564_reg_2782);

assign tmp_41_fu_513_p3 = temp_V_reg_2701[32'd31];

assign tmp_43_fu_713_p3 = temp_V_reg_2701[32'd63];

assign tmp_45_fu_1096_p3 = temp_V_reg_2701[32'd95];

assign tmp_47_fu_1296_p3 = temp_V_reg_2701[32'd127];

assign tmp_49_fu_1687_p3 = temp_V_reg_2701_pp0_iter1_reg[32'd159];

assign tmp_51_fu_1887_p3 = temp_V_reg_2701_pp0_iter1_reg[32'd191];

assign tmp_53_fu_2259_p3 = temp_V_reg_2701_pp0_iter1_reg[32'd223];

assign tmp_55_fu_2459_p3 = temp_V_reg_2701_pp0_iter1_reg[32'd255];

assign trunc_ln546_1_fu_397_p1 = bitcast_ln724_1_fu_393_p1[62:0];

assign trunc_ln546_2_fu_851_p1 = bitcast_ln724_2_fu_847_p1[62:0];

assign trunc_ln546_3_fu_897_p1 = bitcast_ln724_3_fu_893_p1[62:0];

assign trunc_ln546_4_fu_1434_p1 = bitcast_ln724_4_fu_1430_p1[62:0];

assign trunc_ln546_5_fu_1480_p1 = bitcast_ln724_5_fu_1476_p1[62:0];

assign trunc_ln546_6_fu_2025_p1 = bitcast_ln724_6_fu_2021_p1[62:0];

assign trunc_ln546_7_fu_2071_p1 = bitcast_ln724_7_fu_2067_p1[62:0];

assign trunc_ln546_fu_351_p1 = bitcast_ln724_fu_347_p1[62:0];

assign trunc_ln554_1_fu_423_p1 = bitcast_ln724_1_fu_393_p1[51:0];

assign trunc_ln554_2_fu_877_p1 = bitcast_ln724_2_fu_847_p1[51:0];

assign trunc_ln554_3_fu_923_p1 = bitcast_ln724_3_fu_893_p1[51:0];

assign trunc_ln554_4_fu_1460_p1 = bitcast_ln724_4_fu_1430_p1[51:0];

assign trunc_ln554_5_fu_1506_p1 = bitcast_ln724_5_fu_1476_p1[51:0];

assign trunc_ln554_6_fu_2051_p1 = bitcast_ln724_6_fu_2021_p1[51:0];

assign trunc_ln554_7_fu_2097_p1 = bitcast_ln724_7_fu_2067_p1[51:0];

assign trunc_ln554_fu_377_p1 = bitcast_ln724_fu_347_p1[51:0];

assign trunc_ln572_1_fu_703_p1 = select_ln559_1_fu_664_p3[18:0];

assign trunc_ln572_2_fu_1086_p1 = select_ln559_2_fu_1047_p3[18:0];

assign trunc_ln572_3_fu_1286_p1 = select_ln559_3_fu_1247_p3[18:0];

assign trunc_ln572_4_fu_1677_p1 = select_ln559_4_fu_1638_p3[18:0];

assign trunc_ln572_5_fu_1877_p1 = select_ln559_5_fu_1838_p3[18:0];

assign trunc_ln572_6_fu_2249_p1 = select_ln559_6_fu_2210_p3[18:0];

assign trunc_ln572_7_fu_2449_p1 = select_ln559_7_fu_2410_p3[18:0];

assign trunc_ln572_fu_503_p1 = select_ln559_fu_464_p3[18:0];

assign trunc_ln575_1_fu_738_p1 = ashr_ln575_1_fu_732_p2[18:0];

assign trunc_ln575_2_fu_1121_p1 = ashr_ln575_2_fu_1115_p2[18:0];

assign trunc_ln575_3_fu_1321_p1 = ashr_ln575_3_fu_1315_p2[18:0];

assign trunc_ln575_4_fu_1712_p1 = ashr_ln575_4_fu_1706_p2[18:0];

assign trunc_ln575_5_fu_1912_p1 = ashr_ln575_5_fu_1906_p2[18:0];

assign trunc_ln575_6_fu_2284_p1 = ashr_ln575_6_fu_2278_p2[18:0];

assign trunc_ln575_7_fu_2484_p1 = ashr_ln575_7_fu_2478_p2[18:0];

assign trunc_ln575_fu_538_p1 = ashr_ln575_fu_532_p2[18:0];

assign trunc_ln668_fu_261_p1 = m_axi_gmem0_RDATA[31:0];

assign xor_ln560_1_fu_806_p2 = (icmp_ln560_1_reg_2802 ^ 1'd1);

assign xor_ln560_2_fu_1189_p2 = (icmp_ln560_2_reg_2892 ^ 1'd1);

assign xor_ln560_3_fu_1389_p2 = (icmp_ln560_3_reg_2920 ^ 1'd1);

assign xor_ln560_4_fu_1780_p2 = (icmp_ln560_4_reg_3021 ^ 1'd1);

assign xor_ln560_5_fu_1980_p2 = (icmp_ln560_5_reg_3049 ^ 1'd1);

assign xor_ln560_6_fu_2352_p2 = (icmp_ln560_6_reg_3146 ^ 1'd1);

assign xor_ln560_7_fu_2552_p2 = (icmp_ln560_7_reg_3174 ^ 1'd1);

assign xor_ln560_fu_606_p2 = (icmp_ln560_reg_2774 ^ 1'd1);

assign xor_ln571_1_fu_822_p2 = (or_ln571_1_fu_817_p2 ^ 1'd1);

assign xor_ln571_2_fu_1205_p2 = (or_ln571_2_fu_1200_p2 ^ 1'd1);

assign xor_ln571_3_fu_1405_p2 = (or_ln571_3_fu_1400_p2 ^ 1'd1);

assign xor_ln571_4_fu_1796_p2 = (or_ln571_4_fu_1791_p2 ^ 1'd1);

assign xor_ln571_5_fu_1996_p2 = (or_ln571_5_fu_1991_p2 ^ 1'd1);

assign xor_ln571_6_fu_2368_p2 = (or_ln571_6_fu_2363_p2 ^ 1'd1);

assign xor_ln571_7_fu_2568_p2 = (or_ln571_7_fu_2563_p2 ^ 1'd1);

assign xor_ln571_fu_622_p2 = (or_ln571_fu_617_p2 ^ 1'd1);

assign zext_ln377_1_fu_796_p1 = select_ln580_1_fu_789_p3;

assign zext_ln377_2_fu_1179_p1 = select_ln580_2_fu_1172_p3;

assign zext_ln377_3_fu_1379_p1 = select_ln580_3_fu_1372_p3;

assign zext_ln377_4_fu_1770_p1 = select_ln580_4_fu_1763_p3;

assign zext_ln377_5_fu_1970_p1 = select_ln580_5_fu_1963_p3;

assign zext_ln377_6_fu_2342_p1 = select_ln580_6_fu_2335_p3;

assign zext_ln377_7_fu_2542_p1 = select_ln580_7_fu_2535_p3;

assign zext_ln377_fu_596_p1 = select_ln580_fu_589_p3;

assign zext_ln455_1_fu_419_p1 = exp_tmp_s_fu_409_p4;

assign zext_ln455_2_fu_873_p1 = exp_tmp_1_fu_863_p4;

assign zext_ln455_3_fu_919_p1 = exp_tmp_2_fu_909_p4;

assign zext_ln455_4_fu_1456_p1 = exp_tmp_3_fu_1446_p4;

assign zext_ln455_5_fu_1502_p1 = exp_tmp_4_fu_1492_p4;

assign zext_ln455_6_fu_2047_p1 = exp_tmp_5_fu_2037_p4;

assign zext_ln455_7_fu_2093_p1 = exp_tmp_6_fu_2083_p4;

assign zext_ln455_fu_373_p1 = exp_tmp6_fu_363_p4;

assign zext_ln558_1_cast_fu_647_p3 = {{1'd1}, {trunc_ln554_1_reg_2797}};

assign zext_ln558_1_fu_654_p1 = zext_ln558_1_cast_fu_647_p3;

assign zext_ln558_2_cast_fu_1030_p3 = {{1'd1}, {trunc_ln554_2_reg_2887}};

assign zext_ln558_2_fu_1037_p1 = zext_ln558_2_cast_fu_1030_p3;

assign zext_ln558_3_cast_fu_1230_p3 = {{1'd1}, {trunc_ln554_3_reg_2915}};

assign zext_ln558_3_fu_1237_p1 = zext_ln558_3_cast_fu_1230_p3;

assign zext_ln558_4_cast_fu_1621_p3 = {{1'd1}, {trunc_ln554_4_reg_3016}};

assign zext_ln558_4_fu_1628_p1 = zext_ln558_4_cast_fu_1621_p3;

assign zext_ln558_5_cast_fu_1821_p3 = {{1'd1}, {trunc_ln554_5_reg_3044}};

assign zext_ln558_5_fu_1828_p1 = zext_ln558_5_cast_fu_1821_p3;

assign zext_ln558_6_cast_fu_2193_p3 = {{1'd1}, {trunc_ln554_6_reg_3141}};

assign zext_ln558_6_fu_2200_p1 = zext_ln558_6_cast_fu_2193_p3;

assign zext_ln558_7_cast_fu_2393_p3 = {{1'd1}, {trunc_ln554_7_reg_3169}};

assign zext_ln558_7_fu_2400_p1 = zext_ln558_7_cast_fu_2393_p3;

assign zext_ln558_cast_fu_447_p3 = {{1'd1}, {trunc_ln554_reg_2769}};

assign zext_ln558_fu_454_p1 = zext_ln558_cast_fu_447_p3;

assign zext_ln575_1_fu_728_p1 = $unsigned(sext_ln571_1_fu_694_p1);

assign zext_ln575_2_fu_1111_p1 = $unsigned(sext_ln571_2_fu_1077_p1);

assign zext_ln575_3_fu_1311_p1 = $unsigned(sext_ln571_3_fu_1277_p1);

assign zext_ln575_4_fu_1702_p1 = $unsigned(sext_ln571_4_fu_1668_p1);

assign zext_ln575_5_fu_1902_p1 = $unsigned(sext_ln571_5_fu_1868_p1);

assign zext_ln575_6_fu_2274_p1 = $unsigned(sext_ln571_6_fu_2240_p1);

assign zext_ln575_7_fu_2474_p1 = $unsigned(sext_ln571_7_fu_2440_p1);

assign zext_ln575_fu_528_p1 = $unsigned(sext_ln571_fu_494_p1);

assign zext_ln666_1_fu_1546_p1 = add_ln43_fu_1541_p2;

assign zext_ln666_2_fu_1586_p1 = or_ln43_1_fu_1581_p2;

assign zext_ln666_3_fu_2118_p1 = add_ln43_1_fu_2113_p2;

assign zext_ln666_4_fu_2158_p1 = add_ln43_2_fu_2153_p2;

assign zext_ln666_5_fu_2598_p1 = add_ln43_3_fu_2593_p2;

assign zext_ln666_6_fu_2638_p1 = or_ln43_2_fu_2633_p2;

assign zext_ln666_fu_995_p1 = or_ln43_fu_989_p2;

always @ (posedge ap_clk) begin
    or_ln43_reg_2953[0] <= 1'b1;
    or_ln43_1_reg_3076[1:0] <= 2'b11;
end

endmodule //kalman_filter_kalman_filter_Pipeline_VITIS_LOOP_37_1
