-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity merge_sort is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_we0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_ce1 : OUT STD_LOGIC;
    A_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of merge_sort is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "merge_sort_merge_sort,hls_ip_2022_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.348000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=899,HLS_SYN_LUT=1111,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv63_1 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal width_2_fu_127_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal width_2_reg_269 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln17_fu_121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln18_fu_133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln18_reg_275 : STD_LOGIC_VECTOR (63 downto 0);
    signal i3_fu_158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i3_reg_283 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln18_fu_147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i2_2_fu_179_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i2_2_reg_288 : STD_LOGIC_VECTOR (31 downto 0);
    signal i3_1_fu_203_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i3_1_reg_293 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln6_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln6_reg_301 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal select_ln6_fu_242_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal select_ln6_reg_305 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln18_fu_251_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal temp_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal temp_ce0 : STD_LOGIC;
    signal temp_we0 : STD_LOGIC;
    signal temp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_start : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_done : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_idle : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_ready : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_temp_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_temp_ce0 : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_ce0 : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_we0 : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_start : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_done : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_idle : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_ready : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_ce0 : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_we0 : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_ce0 : STD_LOGIC;
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_ce1 : STD_LOGIC;
    signal indvars_iv_reg_58 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state5_on_subcall_done : BOOLEAN;
    signal i1_1_reg_70 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_start_reg : STD_LOGIC := '0';
    signal width_fu_50 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_111_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1_fu_137_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal i2_fu_153_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_163_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln21_fu_173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_187_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln22_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln6_fu_224_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln18_fu_215_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal icmp_ln6_1_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln6_1_fu_227_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal or_ln6_fu_236_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component merge_sort_merge_sort_Pipeline_VITIS_LOOP_25_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        temp_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        temp_ce0 : OUT STD_LOGIC;
        temp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_we0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component merge_sort_merge_sort_Pipeline_VITIS_LOOP_6_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        indvars_iv : IN STD_LOGIC_VECTOR (63 downto 0);
        i2_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        i1_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        zext_ln6_2 : IN STD_LOGIC_VECTOR (62 downto 0);
        temp_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        temp_ce0 : OUT STD_LOGIC;
        temp_we0 : OUT STD_LOGIC;
        temp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i3_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        A_ce1 : OUT STD_LOGIC;
        A_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component merge_sort_temp_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    temp_U : component merge_sort_temp_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_address0,
        ce0 => temp_ce0,
        we0 => temp_we0,
        d0 => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_d0,
        q0 => temp_q0);

    grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82 : component merge_sort_merge_sort_Pipeline_VITIS_LOOP_25_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_start,
        ap_done => grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_done,
        ap_idle => grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_idle,
        ap_ready => grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_ready,
        temp_address0 => grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_temp_address0,
        temp_ce0 => grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_temp_ce0,
        temp_q0 => temp_q0,
        A_address0 => grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_address0,
        A_ce0 => grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_ce0,
        A_we0 => grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_we0,
        A_d0 => grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_d0);

    grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89 : component merge_sort_merge_sort_Pipeline_VITIS_LOOP_6_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_start,
        ap_done => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_done,
        ap_idle => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_idle,
        ap_ready => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_ready,
        indvars_iv => indvars_iv_reg_58,
        i2_2 => i2_2_reg_288,
        i1_1 => i1_1_reg_70,
        zext_ln6_2 => select_ln6_reg_305,
        temp_address0 => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_address0,
        temp_ce0 => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_ce0,
        temp_we0 => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_we0,
        temp_d0 => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_d0,
        i3_1 => i3_1_reg_293,
        A_address0 => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_address0,
        A_ce0 => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_ce0,
        A_q0 => A_q0,
        A_address1 => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_address1,
        A_ce1 => grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_ce1,
        A_q1 => A_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln18_fu_147_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_ready = ap_const_logic_1)) then 
                    grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln6_fu_219_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_ready = ap_const_logic_1)) then 
                    grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_1_reg_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln17_fu_121_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i1_1_reg_70 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then 
                i1_1_reg_70 <= i3_reg_283;
            end if; 
        end if;
    end process;

    indvars_iv_reg_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln17_fu_121_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvars_iv_reg_58 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then 
                indvars_iv_reg_58 <= add_ln18_fu_251_p2;
            end if; 
        end if;
    end process;

    width_fu_50_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                width_fu_50 <= ap_const_lv32_1;
            elsif (((icmp_ln18_fu_147_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                width_fu_50 <= width_2_reg_269;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln18_fu_147_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                i2_2_reg_288 <= i2_2_fu_179_p3;
                i3_1_reg_293 <= i3_1_fu_203_p3;
                i3_reg_283 <= i3_fu_158_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln6_reg_301 <= icmp_ln6_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln6_fu_219_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                select_ln6_reg_305 <= select_ln6_fu_242_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln17_fu_121_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    sext_ln18_reg_275(63 downto 1) <= sext_ln18_fu_133_p1(63 downto 1);
                    width_2_reg_269(31 downto 1) <= width_2_fu_127_p2(31 downto 1);
            end if;
        end if;
    end process;
    width_2_reg_269(0) <= '0';
    sext_ln18_reg_275(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln17_fu_121_p2, ap_CS_fsm_state3, icmp_ln18_fu_147_p2, ap_CS_fsm_state5, grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_done, ap_block_state5_on_subcall_done, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln17_fu_121_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln18_fu_147_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(icmp_ln6_reg_301, ap_CS_fsm_state5, grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_address0, grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_address0, ap_CS_fsm_state6)
    begin
        if (((icmp_ln6_reg_301 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            A_address0 <= grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_address0 <= grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_address0;
        else 
            A_address0 <= "XXXX";
        end if; 
    end process;

    A_address1 <= grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_address1;

    A_ce0_assign_proc : process(icmp_ln6_reg_301, ap_CS_fsm_state5, grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_ce0, grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_ce0, ap_CS_fsm_state6)
    begin
        if (((icmp_ln6_reg_301 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            A_ce0 <= grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_ce0 <= grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_ce1_assign_proc : process(icmp_ln6_reg_301, ap_CS_fsm_state5, grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_ce1)
    begin
        if (((icmp_ln6_reg_301 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            A_ce1 <= grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_A_ce1;
        else 
            A_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    A_d0 <= grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_d0;

    A_we0_assign_proc : process(grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_we0 <= grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_A_we0;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln18_fu_251_p2 <= std_logic_vector(signed(sext_ln18_reg_275) + signed(indvars_iv_reg_58));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(ap_block_state5_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state5_on_subcall_done)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_done)
    begin
        if ((grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state5_on_subcall_done_assign_proc : process(icmp_ln6_reg_301, grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_done)
    begin
                ap_block_state5_on_subcall_done <= ((icmp_ln6_reg_301 = ap_const_lv1_1) and (grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln17_fu_121_p2)
    begin
        if (((icmp_ln17_fu_121_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln17_fu_121_p2)
    begin
        if (((icmp_ln17_fu_121_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_start <= grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_ap_start_reg;
    grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_start <= grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_ap_start_reg;
    i2_2_fu_179_p3 <= 
        i2_fu_153_p2 when (icmp_ln21_fu_173_p2(0) = '1') else 
        ap_const_lv32_10;
    i2_fu_153_p2 <= std_logic_vector(unsigned(i1_1_reg_70) + unsigned(width_fu_50));
    i3_1_fu_203_p3 <= 
        i3_fu_158_p2 when (icmp_ln22_fu_197_p2(0) = '1') else 
        ap_const_lv32_10;
    i3_fu_158_p2 <= std_logic_vector(signed(width_2_reg_269) + signed(i1_1_reg_70));
    icmp_ln17_fu_121_p2 <= "1" when (signed(tmp_fu_111_p4) < signed(ap_const_lv28_1)) else "0";
    icmp_ln18_fu_147_p2 <= "1" when (signed(tmp_1_fu_137_p4) < signed(ap_const_lv28_1)) else "0";
    icmp_ln21_fu_173_p2 <= "1" when (signed(tmp_2_fu_163_p4) < signed(ap_const_lv28_1)) else "0";
    icmp_ln22_fu_197_p2 <= "1" when (signed(tmp_3_fu_187_p4) < signed(ap_const_lv28_1)) else "0";
    icmp_ln6_1_fu_230_p2 <= "1" when (signed(indvars_iv_reg_58) < signed(zext_ln6_fu_224_p1)) else "0";
    icmp_ln6_fu_219_p2 <= "1" when (signed(i1_1_reg_70) < signed(i3_1_reg_293)) else "0";
    or_ln6_fu_236_p2 <= (trunc_ln18_fu_215_p1 or ap_const_lv63_1);
    select_ln6_fu_242_p3 <= 
        zext_ln6_1_fu_227_p1 when (icmp_ln6_1_fu_230_p2(0) = '1') else 
        or_ln6_fu_236_p2;
        sext_ln18_fu_133_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(width_2_fu_127_p2),64));


    temp_address0_assign_proc : process(icmp_ln6_reg_301, ap_CS_fsm_state5, grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_temp_address0, grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_address0, ap_CS_fsm_state6)
    begin
        if (((icmp_ln6_reg_301 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            temp_address0 <= grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            temp_address0 <= grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_temp_address0;
        else 
            temp_address0 <= "XXXX";
        end if; 
    end process;


    temp_ce0_assign_proc : process(icmp_ln6_reg_301, ap_CS_fsm_state5, grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_temp_ce0, grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_ce0, ap_CS_fsm_state6)
    begin
        if (((icmp_ln6_reg_301 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            temp_ce0 <= grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            temp_ce0 <= grp_merge_sort_Pipeline_VITIS_LOOP_25_3_fu_82_temp_ce0;
        else 
            temp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_we0_assign_proc : process(icmp_ln6_reg_301, ap_CS_fsm_state5, grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_we0)
    begin
        if (((icmp_ln6_reg_301 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            temp_we0 <= grp_merge_sort_Pipeline_VITIS_LOOP_6_1_fu_89_temp_we0;
        else 
            temp_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_137_p4 <= i1_1_reg_70(31 downto 4);
    tmp_2_fu_163_p4 <= i2_fu_153_p2(31 downto 4);
    tmp_3_fu_187_p4 <= i3_fu_158_p2(31 downto 4);
    tmp_fu_111_p4 <= width_fu_50(31 downto 4);
    trunc_ln18_fu_215_p1 <= indvars_iv_reg_58(63 - 1 downto 0);
    width_2_fu_127_p2 <= std_logic_vector(shift_left(unsigned(width_fu_50),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    zext_ln6_1_fu_227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i3_1_reg_293),63));
    zext_ln6_fu_224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i3_1_reg_293),64));
end behav;
