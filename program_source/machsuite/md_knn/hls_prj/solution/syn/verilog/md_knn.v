// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="md_knn_md_knn,hls_ip_2022_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.598343,HLS_SYN_LAT=1310808,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4450,HLS_SYN_LUT=2985,HLS_VERSION=2022_2_2}" *)

module md_knn (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        force_x_address0,
        force_x_ce0,
        force_x_we0,
        force_x_d0,
        force_y_address0,
        force_y_ce0,
        force_y_we0,
        force_y_d0,
        force_z_address0,
        force_z_ce0,
        force_z_we0,
        force_z_d0,
        position_x_address0,
        position_x_ce0,
        position_x_q0,
        position_y_address0,
        position_y_ce0,
        position_y_q0,
        position_z_address0,
        position_z_ce0,
        position_z_q0,
        NL_address0,
        NL_ce0,
        NL_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] force_x_address0;
output   force_x_ce0;
output   force_x_we0;
output  [63:0] force_x_d0;
output  [9:0] force_y_address0;
output   force_y_ce0;
output   force_y_we0;
output  [63:0] force_y_d0;
output  [9:0] force_z_address0;
output   force_z_ce0;
output   force_z_we0;
output  [63:0] force_z_d0;
output  [9:0] position_x_address0;
output   position_x_ce0;
input  [63:0] position_x_q0;
output  [9:0] position_y_address0;
output   position_y_ce0;
input  [63:0] position_y_q0;
output  [9:0] position_z_address0;
output   position_z_ce0;
input  [63:0] position_z_q0;
output  [17:0] NL_address0;
output   NL_ce0;
input  [31:0] NL_q0;

reg ap_idle;
reg force_x_ce0;
reg force_x_we0;
reg force_y_ce0;
reg force_y_we0;
reg force_z_ce0;
reg force_z_we0;
reg[9:0] position_x_address0;
reg position_x_ce0;
reg[9:0] position_y_address0;
reg position_y_ce0;
reg[9:0] position_z_address0;
reg position_z_ce0;
reg NL_ce0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_state20_pp0_stage4_iter3;
wire    ap_block_state25_pp0_stage4_iter4;
wire    ap_block_state30_pp0_stage4_iter5;
wire    ap_block_state35_pp0_stage4_iter6;
wire    ap_block_state40_pp0_stage4_iter7;
wire    ap_block_state45_pp0_stage4_iter8;
wire    ap_block_state50_pp0_stage4_iter9;
wire    ap_block_state55_pp0_stage4_iter10;
wire    ap_block_state60_pp0_stage4_iter11;
wire    ap_block_state65_pp0_stage4_iter12;
wire    ap_block_state70_pp0_stage4_iter13;
wire    ap_block_state75_pp0_stage4_iter14;
wire    ap_block_state80_pp0_stage4_iter15;
wire    ap_block_state85_pp0_stage4_iter16;
wire    ap_block_state90_pp0_stage4_iter17;
wire    ap_block_pp0_stage4_subdone;
reg   [0:0] icmp_ln18_reg_512;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] grp_fu_217_p2;
reg   [63:0] reg_240;
wire    ap_block_pp0_stage4_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
wire    ap_block_state26_pp0_stage0_iter5;
wire    ap_block_state31_pp0_stage0_iter6;
wire    ap_block_state36_pp0_stage0_iter7;
wire    ap_block_state41_pp0_stage0_iter8;
wire    ap_block_state46_pp0_stage0_iter9;
wire    ap_block_state51_pp0_stage0_iter10;
wire    ap_block_state56_pp0_stage0_iter11;
wire    ap_block_state61_pp0_stage0_iter12;
wire    ap_block_state66_pp0_stage0_iter13;
wire    ap_block_state71_pp0_stage0_iter14;
wire    ap_block_state76_pp0_stage0_iter15;
wire    ap_block_state81_pp0_stage0_iter16;
wire    ap_block_state86_pp0_stage0_iter17;
wire    ap_block_state91_pp0_stage0_iter18;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln18_fu_277_p2;
reg   [0:0] icmp_ln18_reg_512_pp0_iter1_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter2_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter3_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter4_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter5_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter6_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter7_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter8_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter9_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter10_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter11_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter12_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter13_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter14_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter15_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter16_reg;
reg   [0:0] icmp_ln18_reg_512_pp0_iter17_reg;
wire   [0:0] icmp_ln25_fu_295_p2;
reg   [0:0] icmp_ln25_reg_516;
reg   [0:0] icmp_ln25_reg_516_pp0_iter1_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter2_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter3_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter4_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter5_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter6_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter7_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter8_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter9_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter10_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter11_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter12_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter13_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter14_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter15_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter16_reg;
reg   [0:0] icmp_ln25_reg_516_pp0_iter17_reg;
wire   [8:0] select_ln18_fu_301_p3;
reg   [8:0] select_ln18_reg_523;
wire   [63:0] zext_ln18_fu_323_p1;
reg   [63:0] zext_ln18_reg_528;
reg   [63:0] zext_ln18_reg_528_pp0_iter1_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter2_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter3_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter4_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter5_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter6_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter7_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter8_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter9_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter10_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter11_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter12_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter13_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter14_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter15_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter16_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter17_reg;
reg   [63:0] zext_ln18_reg_528_pp0_iter18_reg;
reg   [63:0] position_x_load_reg_555;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_state22_pp0_stage1_iter4;
wire    ap_block_state27_pp0_stage1_iter5;
wire    ap_block_state32_pp0_stage1_iter6;
wire    ap_block_state37_pp0_stage1_iter7;
wire    ap_block_state42_pp0_stage1_iter8;
wire    ap_block_state47_pp0_stage1_iter9;
wire    ap_block_state52_pp0_stage1_iter10;
wire    ap_block_state57_pp0_stage1_iter11;
wire    ap_block_state62_pp0_stage1_iter12;
wire    ap_block_state67_pp0_stage1_iter13;
wire    ap_block_state72_pp0_stage1_iter14;
wire    ap_block_state77_pp0_stage1_iter15;
wire    ap_block_state82_pp0_stage1_iter16;
wire    ap_block_state87_pp0_stage1_iter17;
wire    ap_block_state92_pp0_stage1_iter18;
wire    ap_block_pp0_stage1_11001;
reg   [63:0] position_y_load_reg_560;
reg   [63:0] position_z_load_reg_565;
reg   [63:0] position_x_load_1_reg_585;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_state18_pp0_stage2_iter3;
wire    ap_block_state23_pp0_stage2_iter4;
wire    ap_block_state28_pp0_stage2_iter5;
wire    ap_block_state33_pp0_stage2_iter6;
wire    ap_block_state38_pp0_stage2_iter7;
wire    ap_block_state43_pp0_stage2_iter8;
wire    ap_block_state48_pp0_stage2_iter9;
wire    ap_block_state53_pp0_stage2_iter10;
wire    ap_block_state58_pp0_stage2_iter11;
wire    ap_block_state63_pp0_stage2_iter12;
wire    ap_block_state68_pp0_stage2_iter13;
wire    ap_block_state73_pp0_stage2_iter14;
wire    ap_block_state78_pp0_stage2_iter15;
wire    ap_block_state83_pp0_stage2_iter16;
wire    ap_block_state88_pp0_stage2_iter17;
wire    ap_block_pp0_stage2_11001;
reg   [63:0] position_y_load_1_reg_590;
reg   [63:0] position_z_load_1_reg_595;
wire   [63:0] bitcast_ln18_fu_368_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_state19_pp0_stage3_iter3;
wire    ap_block_state24_pp0_stage3_iter4;
wire    ap_block_state29_pp0_stage3_iter5;
wire    ap_block_state34_pp0_stage3_iter6;
wire    ap_block_state39_pp0_stage3_iter7;
wire    ap_block_state44_pp0_stage3_iter8;
wire    ap_block_state49_pp0_stage3_iter9;
wire    ap_block_state54_pp0_stage3_iter10;
wire    ap_block_state59_pp0_stage3_iter11;
wire    ap_block_state64_pp0_stage3_iter12;
wire    ap_block_state69_pp0_stage3_iter13;
wire    ap_block_state74_pp0_stage3_iter14;
wire    ap_block_state79_pp0_stage3_iter15;
wire    ap_block_state84_pp0_stage3_iter16;
wire    ap_block_state89_pp0_stage3_iter17;
wire    ap_block_pp0_stage3_11001;
wire   [63:0] bitcast_ln18_1_fu_372_p1;
wire   [63:0] j_x_fu_376_p1;
wire   [63:0] j_y_fu_380_p1;
wire   [63:0] bitcast_ln18_2_fu_384_p1;
wire   [63:0] j_z_fu_388_p1;
wire   [0:0] ifzero_fu_397_p2;
reg   [0:0] ifzero_reg_630;
reg   [0:0] ifzero_reg_630_pp0_iter1_reg;
reg   [0:0] ifzero_reg_630_pp0_iter2_reg;
reg   [0:0] ifzero_reg_630_pp0_iter3_reg;
reg   [0:0] ifzero_reg_630_pp0_iter4_reg;
reg   [0:0] ifzero_reg_630_pp0_iter5_reg;
reg   [0:0] ifzero_reg_630_pp0_iter6_reg;
reg   [0:0] ifzero_reg_630_pp0_iter7_reg;
reg   [0:0] ifzero_reg_630_pp0_iter8_reg;
reg   [0:0] ifzero_reg_630_pp0_iter9_reg;
reg   [0:0] ifzero_reg_630_pp0_iter10_reg;
reg   [0:0] ifzero_reg_630_pp0_iter11_reg;
reg   [0:0] ifzero_reg_630_pp0_iter12_reg;
reg   [0:0] ifzero_reg_630_pp0_iter13_reg;
reg   [0:0] ifzero_reg_630_pp0_iter14_reg;
reg   [0:0] ifzero_reg_630_pp0_iter15_reg;
reg   [0:0] ifzero_reg_630_pp0_iter16_reg;
reg   [0:0] ifzero_reg_630_pp0_iter17_reg;
wire   [63:0] grp_fu_213_p2;
reg   [63:0] delx_reg_634;
reg   [63:0] delx_reg_634_pp0_iter2_reg;
reg   [63:0] delx_reg_634_pp0_iter3_reg;
reg   [63:0] delx_reg_634_pp0_iter4_reg;
reg   [63:0] delx_reg_634_pp0_iter5_reg;
reg   [63:0] delx_reg_634_pp0_iter6_reg;
reg   [63:0] delx_reg_634_pp0_iter7_reg;
reg   [63:0] delx_reg_634_pp0_iter8_reg;
reg   [63:0] delx_reg_634_pp0_iter9_reg;
reg   [63:0] delx_reg_634_pp0_iter10_reg;
reg   [63:0] delx_reg_634_pp0_iter11_reg;
reg   [63:0] delx_reg_634_pp0_iter12_reg;
reg   [63:0] delx_reg_634_pp0_iter13_reg;
reg   [63:0] delx_reg_634_pp0_iter14_reg;
reg   [63:0] delx_reg_634_pp0_iter15_reg;
reg   [63:0] dely_reg_641;
reg   [63:0] dely_reg_641_pp0_iter2_reg;
reg   [63:0] dely_reg_641_pp0_iter3_reg;
reg   [63:0] dely_reg_641_pp0_iter4_reg;
reg   [63:0] dely_reg_641_pp0_iter5_reg;
reg   [63:0] dely_reg_641_pp0_iter6_reg;
reg   [63:0] dely_reg_641_pp0_iter7_reg;
reg   [63:0] dely_reg_641_pp0_iter8_reg;
reg   [63:0] dely_reg_641_pp0_iter9_reg;
reg   [63:0] dely_reg_641_pp0_iter10_reg;
reg   [63:0] dely_reg_641_pp0_iter11_reg;
reg   [63:0] dely_reg_641_pp0_iter12_reg;
reg   [63:0] dely_reg_641_pp0_iter13_reg;
reg   [63:0] dely_reg_641_pp0_iter14_reg;
reg   [63:0] dely_reg_641_pp0_iter15_reg;
reg   [63:0] delz_reg_648;
reg   [63:0] delz_reg_648_pp0_iter2_reg;
reg   [63:0] delz_reg_648_pp0_iter3_reg;
reg   [63:0] delz_reg_648_pp0_iter4_reg;
reg   [63:0] delz_reg_648_pp0_iter5_reg;
reg   [63:0] delz_reg_648_pp0_iter6_reg;
reg   [63:0] delz_reg_648_pp0_iter7_reg;
reg   [63:0] delz_reg_648_pp0_iter8_reg;
reg   [63:0] delz_reg_648_pp0_iter9_reg;
reg   [63:0] delz_reg_648_pp0_iter10_reg;
reg   [63:0] delz_reg_648_pp0_iter11_reg;
reg   [63:0] delz_reg_648_pp0_iter12_reg;
reg   [63:0] delz_reg_648_pp0_iter13_reg;
reg   [63:0] delz_reg_648_pp0_iter14_reg;
reg   [63:0] delz_reg_648_pp0_iter15_reg;
wire   [63:0] grp_fu_222_p2;
reg   [63:0] mul_reg_655;
wire   [63:0] grp_fu_226_p2;
reg   [63:0] mul1_reg_660;
reg   [63:0] mul2_reg_665;
reg   [63:0] mul2_reg_665_pp0_iter3_reg;
reg   [63:0] add_reg_670;
reg   [63:0] add1_reg_675;
wire   [63:0] grp_fu_235_p2;
reg   [63:0] r2inv_reg_680;
reg   [63:0] r2inv_reg_680_pp0_iter10_reg;
reg   [63:0] r2inv_reg_680_pp0_iter11_reg;
reg   [63:0] r2inv_reg_680_pp0_iter12_reg;
reg   [63:0] r2inv_reg_680_pp0_iter13_reg;
reg   [63:0] r2inv_reg_680_pp0_iter14_reg;
reg   [63:0] mul3_reg_688;
reg   [63:0] r6inv_reg_693;
reg   [63:0] r6inv_reg_693_pp0_iter12_reg;
reg   [63:0] r6inv_reg_693_pp0_iter13_reg;
wire   [63:0] grp_fu_230_p2;
reg   [63:0] mul5_reg_698;
reg   [63:0] sub_reg_703;
reg   [63:0] potential_reg_708;
reg   [63:0] force_reg_713;
reg   [63:0] mul8_reg_720;
reg   [63:0] mul9_reg_725;
reg   [63:0] mul4_reg_730;
wire   [63:0] select_ln18_3_fu_411_p3;
wire   [63:0] select_ln18_1_fu_425_p3;
wire   [63:0] select_ln18_2_fu_433_p3;
reg   [63:0] fy_1_reg_750;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln27_fu_346_p1;
wire   [63:0] zext_ln29_fu_361_p1;
wire    ap_block_pp0_stage1;
reg   [63:0] fx_fu_74;
wire    ap_loop_init;
reg   [63:0] fy_fu_78;
reg   [63:0] fz_fu_82;
reg   [8:0] j_fu_86;
wire   [8:0] add_ln25_fu_392_p2;
reg   [8:0] ap_sig_allocacmp_j_load;
reg   [10:0] i_fu_90;
wire   [10:0] select_ln18_4_fu_315_p3;
reg   [10:0] ap_sig_allocacmp_i_load;
reg   [18:0] indvar_flatten_fu_94;
wire   [18:0] add_ln18_fu_283_p2;
reg   [18:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [63:0] grp_fu_213_p0;
reg   [63:0] grp_fu_213_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage2;
reg   [63:0] grp_fu_217_p0;
reg   [63:0] grp_fu_217_p1;
reg   [63:0] grp_fu_222_p0;
reg   [63:0] grp_fu_222_p1;
reg   [63:0] grp_fu_226_p0;
reg   [63:0] grp_fu_226_p1;
reg   [63:0] grp_fu_230_p0;
reg   [63:0] grp_fu_230_p1;
wire   [10:0] add_ln18_1_fu_309_p2;
wire   [9:0] trunc_ln18_fu_330_p1;
wire   [7:0] trunc_ln27_fu_334_p1;
wire   [17:0] add_ln_fu_338_p3;
reg   [1:0] grp_fu_213_opcode;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage4_00001;
reg   [1:0] grp_fu_217_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter17_stage1;
reg    ap_idle_pp0_0to16;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to18;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_657;
reg    ap_condition_444;
reg    ap_condition_983;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

md_knn_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_213_p0),
    .din1(grp_fu_213_p1),
    .opcode(grp_fu_213_opcode),
    .ce(1'b1),
    .dout(grp_fu_213_p2)
);

md_knn_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_217_p0),
    .din1(grp_fu_217_p1),
    .opcode(grp_fu_217_opcode),
    .ce(1'b1),
    .dout(grp_fu_217_p2)
);

md_knn_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_222_p0),
    .din1(grp_fu_222_p1),
    .ce(1'b1),
    .dout(grp_fu_222_p2)
);

md_knn_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_226_p0),
    .din1(grp_fu_226_p1),
    .ce(1'b1),
    .dout(grp_fu_226_p2)
);

md_knn_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_230_p0),
    .din1(grp_fu_230_p1),
    .ce(1'b1),
    .dout(grp_fu_230_p2)
);

md_knn_ddiv_64ns_64ns_64_22_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_22_no_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(add1_reg_675),
    .ce(1'b1),
    .dout(grp_fu_235_p2)
);

md_knn_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter17_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter18 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fx_fu_74 <= 64'd0;
    end else if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        fx_fu_74 <= grp_fu_217_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            fy_fu_78 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter18 == 1'b1)) begin
            fy_fu_78 <= grp_fu_213_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            fz_fu_82 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter18 == 1'b1)) begin
            fz_fu_82 <= grp_fu_217_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_657)) begin
        if ((icmp_ln18_fu_277_p2 == 1'd0)) begin
            i_fu_90 <= select_ln18_4_fu_315_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_90 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_657)) begin
        if ((icmp_ln18_fu_277_p2 == 1'd0)) begin
            indvar_flatten_fu_94 <= add_ln18_fu_283_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_94 <= 19'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_983)) begin
            j_fu_86 <= 9'd0;
        end else if ((1'b1 == ap_condition_444)) begin
            j_fu_86 <= add_ln25_fu_392_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add1_reg_675 <= grp_fu_213_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add_reg_670 <= grp_fu_217_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        delx_reg_634 <= grp_fu_213_p2;
        dely_reg_641 <= grp_fu_217_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        delx_reg_634_pp0_iter10_reg <= delx_reg_634_pp0_iter9_reg;
        delx_reg_634_pp0_iter11_reg <= delx_reg_634_pp0_iter10_reg;
        delx_reg_634_pp0_iter12_reg <= delx_reg_634_pp0_iter11_reg;
        delx_reg_634_pp0_iter13_reg <= delx_reg_634_pp0_iter12_reg;
        delx_reg_634_pp0_iter14_reg <= delx_reg_634_pp0_iter13_reg;
        delx_reg_634_pp0_iter15_reg <= delx_reg_634_pp0_iter14_reg;
        delx_reg_634_pp0_iter2_reg <= delx_reg_634;
        delx_reg_634_pp0_iter3_reg <= delx_reg_634_pp0_iter2_reg;
        delx_reg_634_pp0_iter4_reg <= delx_reg_634_pp0_iter3_reg;
        delx_reg_634_pp0_iter5_reg <= delx_reg_634_pp0_iter4_reg;
        delx_reg_634_pp0_iter6_reg <= delx_reg_634_pp0_iter5_reg;
        delx_reg_634_pp0_iter7_reg <= delx_reg_634_pp0_iter6_reg;
        delx_reg_634_pp0_iter8_reg <= delx_reg_634_pp0_iter7_reg;
        delx_reg_634_pp0_iter9_reg <= delx_reg_634_pp0_iter8_reg;
        dely_reg_641_pp0_iter10_reg <= dely_reg_641_pp0_iter9_reg;
        dely_reg_641_pp0_iter11_reg <= dely_reg_641_pp0_iter10_reg;
        dely_reg_641_pp0_iter12_reg <= dely_reg_641_pp0_iter11_reg;
        dely_reg_641_pp0_iter13_reg <= dely_reg_641_pp0_iter12_reg;
        dely_reg_641_pp0_iter14_reg <= dely_reg_641_pp0_iter13_reg;
        dely_reg_641_pp0_iter15_reg <= dely_reg_641_pp0_iter14_reg;
        dely_reg_641_pp0_iter2_reg <= dely_reg_641;
        dely_reg_641_pp0_iter3_reg <= dely_reg_641_pp0_iter2_reg;
        dely_reg_641_pp0_iter4_reg <= dely_reg_641_pp0_iter3_reg;
        dely_reg_641_pp0_iter5_reg <= dely_reg_641_pp0_iter4_reg;
        dely_reg_641_pp0_iter6_reg <= dely_reg_641_pp0_iter5_reg;
        dely_reg_641_pp0_iter7_reg <= dely_reg_641_pp0_iter6_reg;
        dely_reg_641_pp0_iter8_reg <= dely_reg_641_pp0_iter7_reg;
        dely_reg_641_pp0_iter9_reg <= dely_reg_641_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        delz_reg_648 <= grp_fu_213_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        delz_reg_648_pp0_iter10_reg <= delz_reg_648_pp0_iter9_reg;
        delz_reg_648_pp0_iter11_reg <= delz_reg_648_pp0_iter10_reg;
        delz_reg_648_pp0_iter12_reg <= delz_reg_648_pp0_iter11_reg;
        delz_reg_648_pp0_iter13_reg <= delz_reg_648_pp0_iter12_reg;
        delz_reg_648_pp0_iter14_reg <= delz_reg_648_pp0_iter13_reg;
        delz_reg_648_pp0_iter15_reg <= delz_reg_648_pp0_iter14_reg;
        delz_reg_648_pp0_iter2_reg <= delz_reg_648;
        delz_reg_648_pp0_iter3_reg <= delz_reg_648_pp0_iter2_reg;
        delz_reg_648_pp0_iter4_reg <= delz_reg_648_pp0_iter3_reg;
        delz_reg_648_pp0_iter5_reg <= delz_reg_648_pp0_iter4_reg;
        delz_reg_648_pp0_iter6_reg <= delz_reg_648_pp0_iter5_reg;
        delz_reg_648_pp0_iter7_reg <= delz_reg_648_pp0_iter6_reg;
        delz_reg_648_pp0_iter8_reg <= delz_reg_648_pp0_iter7_reg;
        delz_reg_648_pp0_iter9_reg <= delz_reg_648_pp0_iter8_reg;
        mul2_reg_665_pp0_iter3_reg <= mul2_reg_665;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        force_reg_713 <= grp_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fy_1_reg_750 <= grp_fu_213_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln18_reg_512 <= icmp_ln18_fu_277_p2;
        icmp_ln18_reg_512_pp0_iter10_reg <= icmp_ln18_reg_512_pp0_iter9_reg;
        icmp_ln18_reg_512_pp0_iter11_reg <= icmp_ln18_reg_512_pp0_iter10_reg;
        icmp_ln18_reg_512_pp0_iter12_reg <= icmp_ln18_reg_512_pp0_iter11_reg;
        icmp_ln18_reg_512_pp0_iter13_reg <= icmp_ln18_reg_512_pp0_iter12_reg;
        icmp_ln18_reg_512_pp0_iter14_reg <= icmp_ln18_reg_512_pp0_iter13_reg;
        icmp_ln18_reg_512_pp0_iter15_reg <= icmp_ln18_reg_512_pp0_iter14_reg;
        icmp_ln18_reg_512_pp0_iter16_reg <= icmp_ln18_reg_512_pp0_iter15_reg;
        icmp_ln18_reg_512_pp0_iter17_reg <= icmp_ln18_reg_512_pp0_iter16_reg;
        icmp_ln18_reg_512_pp0_iter1_reg <= icmp_ln18_reg_512;
        icmp_ln18_reg_512_pp0_iter2_reg <= icmp_ln18_reg_512_pp0_iter1_reg;
        icmp_ln18_reg_512_pp0_iter3_reg <= icmp_ln18_reg_512_pp0_iter2_reg;
        icmp_ln18_reg_512_pp0_iter4_reg <= icmp_ln18_reg_512_pp0_iter3_reg;
        icmp_ln18_reg_512_pp0_iter5_reg <= icmp_ln18_reg_512_pp0_iter4_reg;
        icmp_ln18_reg_512_pp0_iter6_reg <= icmp_ln18_reg_512_pp0_iter5_reg;
        icmp_ln18_reg_512_pp0_iter7_reg <= icmp_ln18_reg_512_pp0_iter6_reg;
        icmp_ln18_reg_512_pp0_iter8_reg <= icmp_ln18_reg_512_pp0_iter7_reg;
        icmp_ln18_reg_512_pp0_iter9_reg <= icmp_ln18_reg_512_pp0_iter8_reg;
        icmp_ln25_reg_516_pp0_iter10_reg <= icmp_ln25_reg_516_pp0_iter9_reg;
        icmp_ln25_reg_516_pp0_iter11_reg <= icmp_ln25_reg_516_pp0_iter10_reg;
        icmp_ln25_reg_516_pp0_iter12_reg <= icmp_ln25_reg_516_pp0_iter11_reg;
        icmp_ln25_reg_516_pp0_iter13_reg <= icmp_ln25_reg_516_pp0_iter12_reg;
        icmp_ln25_reg_516_pp0_iter14_reg <= icmp_ln25_reg_516_pp0_iter13_reg;
        icmp_ln25_reg_516_pp0_iter15_reg <= icmp_ln25_reg_516_pp0_iter14_reg;
        icmp_ln25_reg_516_pp0_iter16_reg <= icmp_ln25_reg_516_pp0_iter15_reg;
        icmp_ln25_reg_516_pp0_iter17_reg <= icmp_ln25_reg_516_pp0_iter16_reg;
        icmp_ln25_reg_516_pp0_iter1_reg <= icmp_ln25_reg_516;
        icmp_ln25_reg_516_pp0_iter2_reg <= icmp_ln25_reg_516_pp0_iter1_reg;
        icmp_ln25_reg_516_pp0_iter3_reg <= icmp_ln25_reg_516_pp0_iter2_reg;
        icmp_ln25_reg_516_pp0_iter4_reg <= icmp_ln25_reg_516_pp0_iter3_reg;
        icmp_ln25_reg_516_pp0_iter5_reg <= icmp_ln25_reg_516_pp0_iter4_reg;
        icmp_ln25_reg_516_pp0_iter6_reg <= icmp_ln25_reg_516_pp0_iter5_reg;
        icmp_ln25_reg_516_pp0_iter7_reg <= icmp_ln25_reg_516_pp0_iter6_reg;
        icmp_ln25_reg_516_pp0_iter8_reg <= icmp_ln25_reg_516_pp0_iter7_reg;
        icmp_ln25_reg_516_pp0_iter9_reg <= icmp_ln25_reg_516_pp0_iter8_reg;
        zext_ln18_reg_528_pp0_iter10_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter9_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter11_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter10_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter12_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter11_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter13_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter12_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter14_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter13_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter15_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter14_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter16_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter15_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter17_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter16_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter18_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter17_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter1_reg[10 : 0] <= zext_ln18_reg_528[10 : 0];
        zext_ln18_reg_528_pp0_iter2_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter1_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter3_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter2_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter4_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter3_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter5_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter4_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter6_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter5_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter7_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter6_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter8_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter7_reg[10 : 0];
        zext_ln18_reg_528_pp0_iter9_reg[10 : 0] <= zext_ln18_reg_528_pp0_iter8_reg[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_277_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln25_reg_516 <= icmp_ln25_fu_295_p2;
        select_ln18_reg_523 <= select_ln18_fu_301_p3;
        zext_ln18_reg_528[10 : 0] <= zext_ln18_fu_323_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln18_reg_512 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ifzero_reg_630 <= ifzero_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ifzero_reg_630_pp0_iter10_reg <= ifzero_reg_630_pp0_iter9_reg;
        ifzero_reg_630_pp0_iter11_reg <= ifzero_reg_630_pp0_iter10_reg;
        ifzero_reg_630_pp0_iter12_reg <= ifzero_reg_630_pp0_iter11_reg;
        ifzero_reg_630_pp0_iter13_reg <= ifzero_reg_630_pp0_iter12_reg;
        ifzero_reg_630_pp0_iter14_reg <= ifzero_reg_630_pp0_iter13_reg;
        ifzero_reg_630_pp0_iter15_reg <= ifzero_reg_630_pp0_iter14_reg;
        ifzero_reg_630_pp0_iter16_reg <= ifzero_reg_630_pp0_iter15_reg;
        ifzero_reg_630_pp0_iter17_reg <= ifzero_reg_630_pp0_iter16_reg;
        ifzero_reg_630_pp0_iter1_reg <= ifzero_reg_630;
        ifzero_reg_630_pp0_iter2_reg <= ifzero_reg_630_pp0_iter1_reg;
        ifzero_reg_630_pp0_iter3_reg <= ifzero_reg_630_pp0_iter2_reg;
        ifzero_reg_630_pp0_iter4_reg <= ifzero_reg_630_pp0_iter3_reg;
        ifzero_reg_630_pp0_iter5_reg <= ifzero_reg_630_pp0_iter4_reg;
        ifzero_reg_630_pp0_iter6_reg <= ifzero_reg_630_pp0_iter5_reg;
        ifzero_reg_630_pp0_iter7_reg <= ifzero_reg_630_pp0_iter6_reg;
        ifzero_reg_630_pp0_iter8_reg <= ifzero_reg_630_pp0_iter7_reg;
        ifzero_reg_630_pp0_iter9_reg <= ifzero_reg_630_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul1_reg_660 <= grp_fu_226_p2;
        mul_reg_655 <= grp_fu_222_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul2_reg_665 <= grp_fu_222_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul3_reg_688 <= grp_fu_222_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul4_reg_730 <= grp_fu_226_p2;
        mul9_reg_725 <= grp_fu_222_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul5_reg_698 <= grp_fu_230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul8_reg_720 <= grp_fu_230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln18_reg_512 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        position_x_load_1_reg_585 <= position_x_q0;
        position_y_load_1_reg_590 <= position_y_q0;
        position_z_load_1_reg_595 <= position_z_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln18_reg_512 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        position_x_load_reg_555 <= position_x_q0;
        position_y_load_reg_560 <= position_y_q0;
        position_z_load_reg_565 <= position_z_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        potential_reg_708 <= grp_fu_230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        r2inv_reg_680 <= grp_fu_235_p2;
        r2inv_reg_680_pp0_iter10_reg <= r2inv_reg_680;
        r2inv_reg_680_pp0_iter11_reg <= r2inv_reg_680_pp0_iter10_reg;
        r2inv_reg_680_pp0_iter12_reg <= r2inv_reg_680_pp0_iter11_reg;
        r2inv_reg_680_pp0_iter13_reg <= r2inv_reg_680_pp0_iter12_reg;
        r2inv_reg_680_pp0_iter14_reg <= r2inv_reg_680_pp0_iter13_reg;
        r6inv_reg_693_pp0_iter12_reg <= r6inv_reg_693;
        r6inv_reg_693_pp0_iter13_reg <= r6inv_reg_693_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        r6inv_reg_693 <= grp_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        reg_240 <= grp_fu_217_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sub_reg_703 <= grp_fu_213_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        NL_ce0 = 1'b1;
    end else begin
        NL_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln18_reg_512 == 1'd1) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (icmp_ln18_reg_512_pp0_iter17_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter17_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter17_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter17_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to16 = 1'b1;
    end else begin
        ap_idle_pp0_0to16 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to18 = 1'b1;
    end else begin
        ap_idle_pp0_1to18 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 11'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_90;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 19'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_94;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 9'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_86;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        force_x_ce0 = 1'b1;
    end else begin
        force_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (ifzero_reg_630_pp0_iter17_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        force_x_we0 = 1'b1;
    end else begin
        force_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        force_y_ce0 = 1'b1;
    end else begin
        force_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (ifzero_reg_630_pp0_iter17_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        force_y_we0 = 1'b1;
    end else begin
        force_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        force_z_ce0 = 1'b1;
    end else begin
        force_z_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (ifzero_reg_630_pp0_iter17_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        force_z_we0 = 1'b1;
    end else begin
        force_z_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln18_reg_512 == 1'd0) & (1'b0 == ap_block_pp0_stage4_00001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln18_reg_512 == 1'd0) & (1'b0 == ap_block_pp0_stage3_00001)))) begin
        grp_fu_213_opcode = 2'd1;
    end else if ((((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_00001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001)) | ((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001)))) begin
        grp_fu_213_opcode = 2'd0;
    end else begin
        grp_fu_213_opcode = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_213_p0 = select_ln18_2_fu_433_p3;
    end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_213_p0 = mul5_reg_698;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_213_p0 = add_reg_670;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_213_p0 = bitcast_ln18_2_fu_384_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_213_p0 = bitcast_ln18_fu_368_p1;
    end else begin
        grp_fu_213_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_213_p1 = mul9_reg_725;
    end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_213_p1 = 64'd13835058055282163712;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_213_p1 = mul2_reg_665_pp0_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_213_p1 = j_z_fu_388_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_213_p1 = j_x_fu_376_p1;
    end else begin
        grp_fu_213_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln18_reg_512 == 1'd0) & (1'b0 == ap_block_pp0_stage3_00001))) begin
        grp_fu_217_opcode = 2'd1;
    end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_00001)) | ((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001)) | ((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001)))) begin
        grp_fu_217_opcode = 2'd0;
    end else begin
        grp_fu_217_opcode = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_217_p0 = select_ln18_1_fu_425_p3;
    end else if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_217_p0 = select_ln18_3_fu_411_p3;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_217_p0 = mul_reg_655;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_217_p0 = bitcast_ln18_1_fu_372_p1;
    end else begin
        grp_fu_217_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_217_p1 = mul4_reg_730;
    end else if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_217_p1 = mul8_reg_720;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_217_p1 = mul1_reg_660;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_217_p1 = j_y_fu_380_p1;
    end else begin
        grp_fu_217_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_222_p0 = dely_reg_641_pp0_iter15_reg;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_222_p0 = r2inv_reg_680;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_222_p0 = delz_reg_648;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_222_p0 = delx_reg_634;
    end else begin
        grp_fu_222_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_222_p1 = force_reg_713;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_222_p1 = r2inv_reg_680;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_222_p1 = delz_reg_648;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_222_p1 = delx_reg_634;
    end else begin
        grp_fu_222_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_226_p0 = delz_reg_648_pp0_iter15_reg;
    end else if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_226_p0 = r2inv_reg_680_pp0_iter14_reg;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_226_p0 = mul3_reg_688;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_226_p0 = dely_reg_641;
    end else begin
        grp_fu_226_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_226_p1 = force_reg_713;
    end else if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_226_p1 = potential_reg_708;
    end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_226_p1 = r2inv_reg_680_pp0_iter10_reg;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_226_p1 = dely_reg_641;
    end else begin
        grp_fu_226_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_230_p0 = delx_reg_634_pp0_iter15_reg;
    end else if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_230_p0 = r6inv_reg_693_pp0_iter13_reg;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_230_p0 = r6inv_reg_693;
    end else begin
        grp_fu_230_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_230_p1 = force_reg_713;
    end else if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_230_p1 = sub_reg_703;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_230_p1 = 64'd4609434218613702656;
    end else begin
        grp_fu_230_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            position_x_address0 = zext_ln29_fu_361_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            position_x_address0 = zext_ln18_fu_323_p1;
        end else begin
            position_x_address0 = 'bx;
        end
    end else begin
        position_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        position_x_ce0 = 1'b1;
    end else begin
        position_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            position_y_address0 = zext_ln29_fu_361_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            position_y_address0 = zext_ln18_fu_323_p1;
        end else begin
            position_y_address0 = 'bx;
        end
    end else begin
        position_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        position_y_ce0 = 1'b1;
    end else begin
        position_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            position_z_address0 = zext_ln29_fu_361_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            position_z_address0 = zext_ln18_fu_323_p1;
        end else begin
            position_z_address0 = 'bx;
        end
    end else begin
        position_z_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        position_z_ce0 = 1'b1;
    end else begin
        position_z_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to18 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to16 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter17_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign NL_address0 = zext_ln27_fu_346_p1;

assign add_ln18_1_fu_309_p2 = (ap_sig_allocacmp_i_load + 11'd1);

assign add_ln18_fu_283_p2 = (ap_sig_allocacmp_indvar_flatten_load + 19'd1);

assign add_ln25_fu_392_p2 = (select_ln18_reg_523 + 9'd1);

assign add_ln_fu_338_p3 = {{trunc_ln18_fu_330_p1}, {trunc_ln27_fu_334_p1}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage4_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage3_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage4_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage3_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage4_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage3_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage4_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage3_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage4_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage2_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage3_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage4_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage2_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage3_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage4_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_444 = ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln18_reg_512 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001));
end

always @ (*) begin
    ap_condition_657 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_983 = ((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign bitcast_ln18_1_fu_372_p1 = position_y_load_reg_560;

assign bitcast_ln18_2_fu_384_p1 = position_z_load_reg_565;

assign bitcast_ln18_fu_368_p1 = position_x_load_reg_555;

assign force_x_address0 = zext_ln18_reg_528_pp0_iter17_reg;

assign force_x_d0 = reg_240;

assign force_y_address0 = zext_ln18_reg_528_pp0_iter18_reg;

assign force_y_d0 = fy_1_reg_750;

assign force_z_address0 = zext_ln18_reg_528_pp0_iter18_reg;

assign force_z_d0 = reg_240;

assign icmp_ln18_fu_277_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 19'd262144) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_295_p2 = ((ap_sig_allocacmp_j_load == 9'd256) ? 1'b1 : 1'b0);

assign ifzero_fu_397_p2 = ((add_ln25_fu_392_p2 == 9'd256) ? 1'b1 : 1'b0);

assign j_x_fu_376_p1 = position_x_load_1_reg_585;

assign j_y_fu_380_p1 = position_y_load_1_reg_590;

assign j_z_fu_388_p1 = position_z_load_1_reg_595;

assign select_ln18_1_fu_425_p3 = ((icmp_ln25_reg_516_pp0_iter17_reg[0:0] == 1'b1) ? 64'd0 : fz_fu_82);

assign select_ln18_2_fu_433_p3 = ((icmp_ln25_reg_516_pp0_iter17_reg[0:0] == 1'b1) ? 64'd0 : fy_fu_78);

assign select_ln18_3_fu_411_p3 = ((icmp_ln25_reg_516_pp0_iter16_reg[0:0] == 1'b1) ? 64'd0 : fx_fu_74);

assign select_ln18_4_fu_315_p3 = ((icmp_ln25_fu_295_p2[0:0] == 1'b1) ? add_ln18_1_fu_309_p2 : ap_sig_allocacmp_i_load);

assign select_ln18_fu_301_p3 = ((icmp_ln25_fu_295_p2[0:0] == 1'b1) ? 9'd0 : ap_sig_allocacmp_j_load);

assign trunc_ln18_fu_330_p1 = select_ln18_4_fu_315_p3[9:0];

assign trunc_ln27_fu_334_p1 = select_ln18_fu_301_p3[7:0];

assign zext_ln18_fu_323_p1 = select_ln18_4_fu_315_p3;

assign zext_ln27_fu_346_p1 = add_ln_fu_338_p3;

assign zext_ln29_fu_361_p1 = NL_q0;

always @ (posedge ap_clk) begin
    zext_ln18_reg_528[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter1_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter2_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter3_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter4_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter5_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter6_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter7_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter8_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter9_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter10_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter11_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter12_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter13_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter14_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter15_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter16_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter17_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln18_reg_528_pp0_iter18_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //md_knn
