// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="trisolv_trisolv,hls_ip_2022_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.330000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1446,HLS_SYN_LUT=1289,HLS_VERSION=2022_2_2}" *)

module trisolv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        L_address0,
        L_ce0,
        L_q0,
        x_address0,
        x_ce0,
        x_we0,
        x_d0,
        x_q0,
        b_address0,
        b_ce0,
        b_q0
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_state6 = 29'd32;
parameter    ap_ST_fsm_state7 = 29'd64;
parameter    ap_ST_fsm_state8 = 29'd128;
parameter    ap_ST_fsm_state9 = 29'd256;
parameter    ap_ST_fsm_state10 = 29'd512;
parameter    ap_ST_fsm_state11 = 29'd1024;
parameter    ap_ST_fsm_state12 = 29'd2048;
parameter    ap_ST_fsm_state13 = 29'd4096;
parameter    ap_ST_fsm_state14 = 29'd8192;
parameter    ap_ST_fsm_state15 = 29'd16384;
parameter    ap_ST_fsm_state16 = 29'd32768;
parameter    ap_ST_fsm_state17 = 29'd65536;
parameter    ap_ST_fsm_state18 = 29'd131072;
parameter    ap_ST_fsm_state19 = 29'd262144;
parameter    ap_ST_fsm_state20 = 29'd524288;
parameter    ap_ST_fsm_state21 = 29'd1048576;
parameter    ap_ST_fsm_state22 = 29'd2097152;
parameter    ap_ST_fsm_state23 = 29'd4194304;
parameter    ap_ST_fsm_state24 = 29'd8388608;
parameter    ap_ST_fsm_state25 = 29'd16777216;
parameter    ap_ST_fsm_state26 = 29'd33554432;
parameter    ap_ST_fsm_state27 = 29'd67108864;
parameter    ap_ST_fsm_state28 = 29'd134217728;
parameter    ap_ST_fsm_state29 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] L_address0;
output   L_ce0;
input  [63:0] L_q0;
output  [5:0] x_address0;
output   x_ce0;
output   x_we0;
output  [63:0] x_d0;
input  [63:0] x_q0;
output  [5:0] b_address0;
output   b_ce0;
input  [63:0] b_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] L_address0;
reg L_ce0;
reg[5:0] x_address0;
reg x_ce0;
reg x_we0;
reg[63:0] x_d0;
reg b_ce0;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] i_1_reg_216;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln10_fu_138_p1;
reg   [63:0] zext_ln10_reg_228;
wire   [0:0] icmp_ln10_fu_126_p2;
wire   [10:0] add_ln13_fu_169_p2;
reg   [10:0] add_ln13_reg_238;
wire    ap_CS_fsm_state3;
wire   [10:0] add_ln14_fu_176_p2;
reg   [10:0] add_ln14_reg_243;
reg   [63:0] b_load_reg_248;
wire   [63:0] bitcast_ln11_fu_182_p1;
reg   [63:0] bitcast_ln11_reg_253;
wire    ap_CS_fsm_state5;
reg   [63:0] L_load_reg_263;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire   [63:0] grp_fu_114_p2;
reg   [63:0] div_reg_276;
wire    ap_CS_fsm_state28;
wire    grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_start;
wire    grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_done;
wire    grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_idle;
wire    grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_ready;
wire   [5:0] grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_x_address0;
wire    grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_x_ce0;
wire    grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_x_we0;
wire   [63:0] grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_x_d0;
wire   [10:0] grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_L_address0;
wire    grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_L_ce0;
wire   [63:0] grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_p_out;
wire    grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_p_out_ap_vld;
reg    grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_start_reg;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln14_fu_187_p1;
wire    ap_CS_fsm_state29;
reg   [5:0] i_fu_52;
wire   [5:0] add_ln10_fu_132_p2;
wire   [63:0] bitcast_ln14_1_fu_199_p1;
wire   [63:0] grp_fu_114_p1;
wire   [8:0] tmp_1_fu_158_p3;
wire   [10:0] tmp_fu_151_p3;
wire   [10:0] zext_ln13_2_fu_165_p1;
wire   [10:0] zext_ln13_fu_148_p1;
reg   [28:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
#0 grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_start_reg = 1'b0;
end

trisolv_trisolv_Pipeline_VITIS_LOOP_12_2 grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_start),
    .ap_done(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_done),
    .ap_idle(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_idle),
    .ap_ready(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_ready),
    .b_load(b_load_reg_248),
    .bitcast_ln11(bitcast_ln11_reg_253),
    .x_address0(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_x_address0),
    .x_ce0(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_x_ce0),
    .x_we0(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_x_we0),
    .x_d0(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_x_d0),
    .x_q0(x_q0),
    .zext_ln10(i_1_reg_216),
    .i(i_1_reg_216),
    .add_ln13(add_ln13_reg_238),
    .L_address0(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_L_address0),
    .L_ce0(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_L_ce0),
    .L_q0(L_q0),
    .p_out(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_p_out),
    .p_out_ap_vld(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_p_out_ap_vld)
);

trisolv_ddiv_64ns_64ns_64_22_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_22_no_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_p_out),
    .din1(grp_fu_114_p1),
    .ce(1'b1),
    .dout(grp_fu_114_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_start_reg <= 1'b1;
        end else if ((grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_ready == 1'b1)) begin
            grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_52 <= 6'd0;
    end else if (((icmp_ln10_fu_126_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_fu_52 <= add_ln10_fu_132_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        L_load_reg_263 <= L_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln13_reg_238[10 : 3] <= add_ln13_fu_169_p2[10 : 3];
        add_ln14_reg_243 <= add_ln14_fu_176_p2;
        b_load_reg_248 <= b_q0;
        bitcast_ln11_reg_253 <= bitcast_ln11_fu_182_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        div_reg_276 <= grp_fu_114_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_216 <= i_fu_52;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_126_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln10_reg_228[5 : 0] <= zext_ln10_fu_138_p1[5 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        L_address0 = zext_ln14_fu_187_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        L_address0 = grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_L_address0;
    end else begin
        L_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        L_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        L_ce0 = grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_L_ce0;
    end else begin
        L_ce0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln10_fu_126_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln10_fu_126_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        b_ce0 = 1'b1;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        x_address0 = zext_ln10_reg_228;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x_address0 = grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_x_address0;
    end else begin
        x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        x_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x_ce0 = grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_x_ce0;
    end else begin
        x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        x_d0 = bitcast_ln14_1_fu_199_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x_d0 = grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_x_d0;
    end else begin
        x_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        x_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x_we0 = grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_x_we0;
    end else begin
        x_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln10_fu_126_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_132_p2 = (i_fu_52 + 6'd1);

assign add_ln13_fu_169_p2 = (tmp_fu_151_p3 + zext_ln13_2_fu_165_p1);

assign add_ln14_fu_176_p2 = (add_ln13_fu_169_p2 + zext_ln13_fu_148_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign b_address0 = zext_ln10_fu_138_p1;

assign bitcast_ln11_fu_182_p1 = b_q0;

assign bitcast_ln14_1_fu_199_p1 = div_reg_276;

assign grp_fu_114_p1 = L_load_reg_263;

assign grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_start = grp_trisolv_Pipeline_VITIS_LOOP_12_2_fu_99_ap_start_reg;

assign icmp_ln10_fu_126_p2 = ((i_fu_52 == 6'd40) ? 1'b1 : 1'b0);

assign tmp_1_fu_158_p3 = {{i_1_reg_216}, {3'd0}};

assign tmp_fu_151_p3 = {{i_1_reg_216}, {5'd0}};

assign zext_ln10_fu_138_p1 = i_fu_52;

assign zext_ln13_2_fu_165_p1 = tmp_1_fu_158_p3;

assign zext_ln13_fu_148_p1 = i_1_reg_216;

assign zext_ln14_fu_187_p1 = add_ln14_reg_243;

always @ (posedge ap_clk) begin
    zext_ln10_reg_228[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    add_ln13_reg_238[2:0] <= 3'b000;
end

endmodule //trisolv
