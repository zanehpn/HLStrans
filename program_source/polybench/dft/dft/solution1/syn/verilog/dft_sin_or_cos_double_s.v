// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dft_sin_or_cos_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        t_in,
        do_cos,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [63:0] t_in;
input  [0:0] do_cos;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
reg    ap_block_pp0_stage0_subdone;
wire   [3:0] ref_4oPi_table_256_V_address0;
reg    ref_4oPi_table_256_V_ce0;
wire   [255:0] ref_4oPi_table_256_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K0_V_address0;
reg    fourth_order_double_sin_cos_K0_V_ce0;
wire   [58:0] fourth_order_double_sin_cos_K0_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K1_V_address0;
reg    fourth_order_double_sin_cos_K1_V_ce0;
wire  signed [51:0] fourth_order_double_sin_cos_K1_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K2_V_address0;
reg    fourth_order_double_sin_cos_K2_V_ce0;
wire  signed [43:0] fourth_order_double_sin_cos_K2_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K3_V_address0;
reg    fourth_order_double_sin_cos_K3_V_ce0;
wire   [32:0] fourth_order_double_sin_cos_K3_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K4_V_address0;
reg    fourth_order_double_sin_cos_K4_V_ce0;
wire   [24:0] fourth_order_double_sin_cos_K4_V_q0;
reg   [0:0] do_cos_read_reg_1509;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] do_cos_read_reg_1509_pp0_iter1_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter2_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter3_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter4_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter5_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter6_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter7_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter8_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter9_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter10_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter11_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter12_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter13_reg;
reg   [0:0] do_cos_read_reg_1509_pp0_iter14_reg;
reg   [0:0] p_Result_11_reg_1517;
reg   [0:0] p_Result_11_reg_1517_pp0_iter1_reg;
reg   [0:0] p_Result_11_reg_1517_pp0_iter2_reg;
reg   [0:0] p_Result_11_reg_1517_pp0_iter3_reg;
reg   [0:0] p_Result_11_reg_1517_pp0_iter4_reg;
reg   [0:0] p_Result_11_reg_1517_pp0_iter5_reg;
reg   [0:0] p_Result_11_reg_1517_pp0_iter6_reg;
wire   [10:0] din_exp_V_fu_316_p4;
reg   [10:0] din_exp_V_reg_1523;
reg   [10:0] din_exp_V_reg_1523_pp0_iter1_reg;
reg   [10:0] din_exp_V_reg_1523_pp0_iter2_reg;
reg   [10:0] din_exp_V_reg_1523_pp0_iter3_reg;
wire   [0:0] closepath_fu_330_p2;
reg   [0:0] closepath_reg_1530;
reg   [0:0] closepath_reg_1530_pp0_iter1_reg;
reg   [0:0] closepath_reg_1530_pp0_iter2_reg;
reg   [0:0] closepath_reg_1530_pp0_iter3_reg;
wire   [51:0] p_Result_12_fu_336_p1;
reg   [51:0] p_Result_12_reg_1537;
reg   [51:0] p_Result_12_reg_1537_pp0_iter1_reg;
wire   [6:0] trunc_ln628_fu_369_p1;
reg   [6:0] trunc_ln628_reg_1547;
wire   [0:0] icmp_ln1019_1_fu_373_p2;
reg   [0:0] icmp_ln1019_1_reg_1552;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter1_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter2_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter3_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter4_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter6_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter7_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter8_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter9_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter10_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter11_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter12_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter13_reg;
reg   [0:0] icmp_ln1019_1_reg_1552_pp0_iter14_reg;
reg  signed [169:0] Med_V_reg_1558;
wire   [169:0] grp_fu_409_p2;
reg   [169:0] ret_V_5_reg_1568;
reg   [123:0] Mx_bits_V_reg_1573;
reg   [2:0] k_V_reg_1579;
wire   [2:0] k_V_1_fu_453_p3;
reg   [2:0] k_V_1_reg_1584;
reg   [2:0] k_V_1_reg_1584_pp0_iter5_reg;
reg   [2:0] k_V_1_reg_1584_pp0_iter6_reg;
reg   [62:0] Mx_V_reg_1590;
reg   [62:0] Mx_V_reg_1590_pp0_iter5_reg;
reg   [62:0] Mx_V_reg_1590_pp0_iter6_reg;
reg   [62:0] Mx_V_reg_1590_pp0_iter7_reg;
reg   [62:0] Mx_V_reg_1590_pp0_iter8_reg;
reg   [62:0] Mx_V_reg_1590_pp0_iter9_reg;
reg   [62:0] Mx_V_reg_1590_pp0_iter10_reg;
wire  signed [10:0] Ex_V_3_fu_558_p2;
reg  signed [10:0] Ex_V_3_reg_1597;
reg  signed [10:0] Ex_V_3_reg_1597_pp0_iter5_reg;
reg  signed [10:0] Ex_V_3_reg_1597_pp0_iter6_reg;
reg  signed [10:0] Ex_V_3_reg_1597_pp0_iter7_reg;
reg  signed [10:0] Ex_V_3_reg_1597_pp0_iter8_reg;
reg  signed [10:0] Ex_V_3_reg_1597_pp0_iter9_reg;
reg  signed [10:0] Ex_V_3_reg_1597_pp0_iter10_reg;
reg  signed [10:0] Ex_V_3_reg_1597_pp0_iter11_reg;
reg  signed [10:0] Ex_V_3_reg_1597_pp0_iter12_reg;
reg  signed [10:0] Ex_V_3_reg_1597_pp0_iter13_reg;
reg   [0:0] isNeg_reg_1603;
wire   [0:0] icmp_ln1019_fu_572_p2;
reg   [0:0] icmp_ln1019_reg_1609;
reg   [0:0] icmp_ln1019_reg_1609_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_reg_1609_pp0_iter6_reg;
reg   [0:0] icmp_ln1019_reg_1609_pp0_iter7_reg;
reg   [0:0] icmp_ln1019_reg_1609_pp0_iter8_reg;
reg   [0:0] icmp_ln1019_reg_1609_pp0_iter9_reg;
reg   [0:0] icmp_ln1019_reg_1609_pp0_iter10_reg;
reg   [0:0] icmp_ln1019_reg_1609_pp0_iter11_reg;
reg   [0:0] icmp_ln1019_reg_1609_pp0_iter12_reg;
reg   [0:0] icmp_ln1019_reg_1609_pp0_iter13_reg;
reg   [0:0] icmp_ln1019_reg_1609_pp0_iter14_reg;
wire   [0:0] icmp_ln1019_2_fu_577_p2;
reg   [0:0] icmp_ln1019_2_reg_1615;
reg   [0:0] icmp_ln1019_2_reg_1615_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_2_reg_1615_pp0_iter6_reg;
reg   [0:0] icmp_ln1019_2_reg_1615_pp0_iter7_reg;
reg   [0:0] icmp_ln1019_2_reg_1615_pp0_iter8_reg;
reg   [0:0] icmp_ln1019_2_reg_1615_pp0_iter9_reg;
reg   [0:0] icmp_ln1019_2_reg_1615_pp0_iter10_reg;
reg   [0:0] icmp_ln1019_2_reg_1615_pp0_iter11_reg;
reg   [0:0] icmp_ln1019_2_reg_1615_pp0_iter12_reg;
reg   [0:0] icmp_ln1019_2_reg_1615_pp0_iter13_reg;
reg   [0:0] icmp_ln1019_2_reg_1615_pp0_iter14_reg;
reg   [6:0] tmp_4_reg_1623;
reg   [6:0] tmp_4_reg_1623_pp0_iter6_reg;
wire   [55:0] B_V_fu_633_p1;
reg   [55:0] B_V_reg_1628;
reg   [55:0] B_V_reg_1628_pp0_iter6_reg;
reg   [55:0] B_V_reg_1628_pp0_iter7_reg;
reg   [48:0] B_trunc_reg_1633;
wire   [97:0] zext_ln1271_fu_647_p1;
reg   [97:0] zext_ln1271_reg_1638;
reg   [97:0] zext_ln1271_reg_1638_pp0_iter7_reg;
wire   [0:0] cos_basis_fu_683_p3;
reg   [0:0] cos_basis_reg_1645;
reg   [0:0] cos_basis_reg_1645_pp0_iter8_reg;
reg   [0:0] cos_basis_reg_1645_pp0_iter9_reg;
reg   [0:0] cos_basis_reg_1645_pp0_iter10_reg;
reg   [0:0] cos_basis_reg_1645_pp0_iter11_reg;
reg   [0:0] cos_basis_reg_1645_pp0_iter12_reg;
reg   [0:0] cos_basis_reg_1645_pp0_iter13_reg;
reg   [48:0] B_squared_V_reg_1651;
wire   [63:0] zext_ln541_fu_714_p1;
reg   [63:0] zext_ln541_reg_1657;
wire   [0:0] and_ln300_fu_810_p2;
reg   [0:0] and_ln300_reg_1674;
reg   [0:0] and_ln300_reg_1674_pp0_iter8_reg;
reg   [0:0] and_ln300_reg_1674_pp0_iter9_reg;
reg   [0:0] and_ln300_reg_1674_pp0_iter10_reg;
reg   [0:0] and_ln300_reg_1674_pp0_iter11_reg;
reg   [0:0] and_ln300_reg_1674_pp0_iter12_reg;
reg   [0:0] and_ln300_reg_1674_pp0_iter13_reg;
reg   [0:0] and_ln300_reg_1674_pp0_iter14_reg;
wire   [0:0] results_sign_V_4_fu_835_p3;
reg   [0:0] results_sign_V_4_reg_1680;
reg   [0:0] results_sign_V_4_reg_1680_pp0_iter8_reg;
reg   [0:0] results_sign_V_4_reg_1680_pp0_iter9_reg;
reg   [0:0] results_sign_V_4_reg_1680_pp0_iter10_reg;
reg   [0:0] results_sign_V_4_reg_1680_pp0_iter11_reg;
reg   [0:0] results_sign_V_4_reg_1680_pp0_iter12_reg;
reg   [0:0] results_sign_V_4_reg_1680_pp0_iter13_reg;
reg   [0:0] results_sign_V_4_reg_1680_pp0_iter14_reg;
wire   [97:0] zext_ln818_fu_843_p1;
reg   [58:0] fourth_order_double_sin_cos_K0_V_load_reg_1727;
reg   [55:0] rhs_1_reg_1732;
reg   [47:0] rhs_2_reg_1737;
reg   [41:0] trunc_ln1_reg_1742;
reg   [32:0] fourth_order_double_sin_cos_K3_V_load_reg_1747;
reg   [34:0] trunc_ln1270_1_reg_1752;
reg   [24:0] fourth_order_double_sin_cos_K4_V_load_reg_1757;
reg   [28:0] rhs_4_reg_1762;
wire   [63:0] ret_V_7_fu_980_p2;
reg   [63:0] ret_V_7_reg_1767;
reg   [36:0] trunc_ln2_reg_1772;
wire   [62:0] Mx_V_2_fu_996_p3;
reg   [62:0] Mx_V_2_reg_1777;
wire   [63:0] ret_V_fu_1013_p2;
reg  signed [63:0] ret_V_reg_1782;
reg   [62:0] result_V_reg_1797;
reg   [15:0] tmp_7_reg_1803;
reg   [15:0] tmp_7_1_reg_1808;
reg   [15:0] tmp_7_2_reg_1813;
reg   [14:0] tmp_5_reg_1818;
reg   [31:0] tmp_8_2_fu_1161_p3;
reg   [31:0] tmp_8_2_reg_1823;
reg   [31:0] tmp_8_3_fu_1179_p3;
reg   [31:0] tmp_8_3_reg_1828;
wire   [62:0] shl_ln1454_fu_1195_p2;
reg   [62:0] shl_ln1454_reg_1833;
wire   [0:0] icmp_ln453_fu_1200_p2;
reg   [0:0] icmp_ln453_reg_1838;
wire   [62:0] shl_ln1454_1_fu_1216_p2;
reg   [62:0] shl_ln1454_1_reg_1843;
wire   [0:0] and_ln453_fu_1252_p2;
reg   [0:0] and_ln453_reg_1849;
wire   [0:0] and_ln453_2_fu_1264_p2;
reg   [0:0] and_ln453_2_reg_1854;
wire   [31:0] select_ln453_2_fu_1292_p3;
reg   [31:0] select_ln453_2_reg_1859;
wire   [11:0] add_ln461_fu_1300_p2;
reg   [11:0] add_ln461_reg_1864;
wire   [0:0] icmp_ln1653_fu_1306_p2;
reg   [0:0] icmp_ln1653_reg_1869;
wire   [63:0] zext_ln668_fu_364_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] data_V_fu_304_p1;
wire   [10:0] add_ln214_fu_340_p2;
wire   [10:0] addr_fu_346_p3;
wire   [3:0] tmp_fu_354_p4;
wire   [51:0] din_sig_V_fu_326_p1;
wire   [255:0] zext_ln930_fu_379_p1;
wire   [255:0] r_V_15_fu_382_p2;
wire   [52:0] p_Result_13_fu_398_p3;
wire   [52:0] grp_fu_409_p1;
wire   [10:0] Ex_V_fu_434_p2;
wire   [0:0] tmp_6_fu_446_p3;
wire   [0:0] xor_ln1027_fu_459_p2;
wire   [0:0] p_Result_s_fu_464_p2;
wire   [123:0] Mx_bits_V_1_fu_470_p2;
wire   [123:0] Mx_bits_V_3_fu_475_p3;
wire   [60:0] tmp_1_fu_482_p4;
wire   [61:0] p_Result_14_fu_492_p3;
reg   [61:0] p_Result_2_fu_500_p4;
wire   [62:0] p_Result_15_fu_510_p3;
wire  signed [63:0] sext_ln1204_fu_518_p1;
reg   [63:0] tmp_s_fu_522_p3;
wire   [6:0] Mx_zeros_fu_530_p1;
wire   [123:0] zext_ln1454_fu_538_p1;
wire   [123:0] r_fu_542_p2;
wire   [10:0] select_ln482_fu_439_p3;
wire   [10:0] zext_ln841_fu_534_p1;
wire  signed [11:0] sext_ln1535_fu_582_p1;
wire   [11:0] sub_ln1512_fu_585_p2;
wire   [11:0] ush_fu_591_p3;
wire  signed [31:0] sext_ln1488_fu_598_p1;
wire   [62:0] zext_ln1488_fu_602_p1;
wire   [62:0] r_V_fu_606_p2;
wire   [62:0] r_V_2_fu_611_p2;
wire   [62:0] r_V_16_fu_616_p3;
wire   [48:0] grp_fu_650_p0;
wire   [48:0] grp_fu_650_p1;
wire   [0:0] tmp_3_fu_656_p10;
wire   [0:0] xor_ln271_fu_677_p2;
wire   [97:0] grp_fu_650_p2;
wire   [0:0] sin_basis_fu_700_p3;
wire   [7:0] p_Result_16_fu_707_p3;
wire   [3:0] p_Result_17_fu_720_p3;
wire   [0:0] tmp_9_fu_726_p18;
wire   [0:0] tmp_2_fu_764_p18;
wire   [0:0] xor_ln307_fu_814_p2;
wire   [0:0] results_sign_V_fu_802_p3;
wire   [0:0] xor_ln311_fu_824_p2;
wire   [0:0] results_sign_V_2_fu_819_p2;
wire   [0:0] results_sign_V_3_fu_829_p2;
wire   [48:0] grp_fu_846_p0;
wire   [48:0] grp_fu_846_p1;
wire   [48:0] grp_fu_851_p0;
wire   [48:0] grp_fu_851_p1;
wire   [55:0] grp_fu_864_p0;
wire   [48:0] grp_fu_877_p0;
wire   [107:0] grp_fu_864_p2;
wire   [92:0] grp_fu_877_p2;
wire   [97:0] grp_fu_846_p2;
wire   [97:0] grp_fu_851_p2;
wire   [41:0] r_V_11_fu_936_p0;
wire   [32:0] r_V_11_fu_936_p1;
wire   [34:0] r_V_12_fu_948_p0;
wire   [24:0] r_V_12_fu_948_p1;
wire   [59:0] r_V_12_fu_948_p2;
wire   [62:0] t1_V_fu_923_p3;
wire  signed [63:0] sext_ln813_fu_964_p1;
wire  signed [63:0] sext_ln813_1_fu_968_p1;
wire   [63:0] ret_V_6_fu_971_p2;
wire  signed [63:0] sext_ln1347_fu_977_p1;
wire   [74:0] r_V_11_fu_936_p2;
wire   [63:0] zext_ln1347_fu_1002_p1;
wire   [63:0] ret_V_8_fu_1005_p2;
wire   [63:0] zext_ln1347_1_fu_1010_p1;
wire   [62:0] grp_fu_1025_p1;
wire   [125:0] grp_fu_1025_p2;
wire   [31:0] p_Result_8_fu_1081_p3;
reg   [31:0] p_Result_s_37_fu_1115_p4;
wire   [31:0] p_Result_8_1_fu_1088_p3;
reg   [31:0] p_Result_32_1_fu_1133_p4;
wire   [31:0] p_Result_8_2_fu_1095_p3;
reg   [31:0] p_Result_32_2_fu_1151_p4;
wire   [31:0] p_Result_6_fu_1108_p3;
reg   [31:0] p_Result_32_3_fu_1169_p4;
wire   [10:0] Ex_V_4_fu_1102_p3;
reg   [31:0] tmp_8_fu_1125_p3;
wire   [62:0] zext_ln1488_1_fu_1191_p1;
reg   [31:0] tmp_8_1_fu_1143_p3;
wire   [62:0] zext_ln1488_2_fu_1212_p1;
wire   [31:0] add_ln451_fu_1206_p2;
wire   [31:0] add_ln451_1_fu_1228_p2;
wire   [0:0] icmp_ln453_1_fu_1222_p2;
wire   [0:0] xor_ln453_fu_1246_p2;
wire   [0:0] icmp_ln453_2_fu_1234_p2;
wire   [0:0] and_ln453_1_fu_1258_p2;
wire   [31:0] add_ln451_2_fu_1240_p2;
wire   [0:0] or_ln453_fu_1278_p2;
wire   [31:0] select_ln453_fu_1270_p3;
wire   [31:0] select_ln453_1_fu_1284_p3;
wire  signed [11:0] sext_ln186_fu_1187_p1;
wire   [62:0] zext_ln1488_3_fu_1311_p1;
wire   [62:0] shl_ln1454_2_fu_1314_p2;
wire   [62:0] zext_ln1488_4_fu_1319_p1;
wire  signed [31:0] sext_ln461_fu_1328_p1;
wire   [31:0] newexp_fu_1331_p2;
wire   [0:0] tmp_15_fu_1336_p3;
wire   [0:0] or_ln462_fu_1344_p2;
wire   [62:0] shl_ln1454_3_fu_1322_p2;
wire   [51:0] tmp_10_fu_1359_p4;
wire   [51:0] tmp_11_fu_1377_p4;
wire   [51:0] tmp_12_fu_1386_p4;
wire   [0:0] or_ln462_1_fu_1349_p2;
wire   [51:0] select_ln462_fu_1369_p3;
wire   [51:0] select_ln462_1_fu_1396_p3;
wire   [0:0] or_ln462_2_fu_1354_p2;
wire   [51:0] select_ln462_2_fu_1403_p3;
wire   [51:0] tmp_13_fu_1411_p4;
wire   [0:0] or_ln311_fu_1446_p2;
wire   [10:0] select_ln311_fu_1439_p3;
wire   [10:0] trunc_ln214_fu_1428_p1;
wire   [10:0] select_ln288_fu_1432_p3;
wire   [10:0] results_exp_V_1_fu_1451_p3;
wire   [0:0] and_ln300_1_fu_1466_p2;
wire   [0:0] xor_ln300_fu_1470_p2;
wire   [0:0] or_ln300_fu_1484_p2;
wire   [51:0] select_ln300_fu_1476_p3;
wire   [51:0] significand_fu_1420_p3;
wire   [10:0] results_exp_V_fu_1459_p3;
wire   [51:0] results_sig_V_fu_1488_p3;
wire   [63:0] p_Result_18_fu_1496_p4;
reg    grp_fu_409_ce;
reg    grp_fu_650_ce;
reg    grp_fu_846_ce;
reg    grp_fu_851_ce;
reg    grp_fu_864_ce;
reg    grp_fu_877_ce;
reg    grp_fu_1025_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to14;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [125:0] grp_fu_1025_p10;
wire   [169:0] grp_fu_409_p10;
wire   [107:0] grp_fu_864_p00;
wire   [92:0] grp_fu_877_p00;
wire   [74:0] r_V_11_fu_936_p00;
wire   [74:0] r_V_11_fu_936_p10;
wire   [59:0] r_V_12_fu_948_p00;
wire   [59:0] r_V_12_fu_948_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
end

dft_sin_or_cos_double_s_ref_4oPi_table_256_V_ROM_AUTO_1R #(
    .DataWidth( 256 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
ref_4oPi_table_256_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_256_V_address0),
    .ce0(ref_4oPi_table_256_V_ce0),
    .q0(ref_4oPi_table_256_V_q0)
);

dft_sin_or_cos_double_s_fourth_order_double_sin_cos_K0_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 59 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K0_V_address0),
    .ce0(fourth_order_double_sin_cos_K0_V_ce0),
    .q0(fourth_order_double_sin_cos_K0_V_q0)
);

dft_sin_or_cos_double_s_fourth_order_double_sin_cos_K1_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 52 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K1_V_address0),
    .ce0(fourth_order_double_sin_cos_K1_V_ce0),
    .q0(fourth_order_double_sin_cos_K1_V_q0)
);

dft_sin_or_cos_double_s_fourth_order_double_sin_cos_K2_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 44 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K2_V_address0),
    .ce0(fourth_order_double_sin_cos_K2_V_ce0),
    .q0(fourth_order_double_sin_cos_K2_V_q0)
);

dft_sin_or_cos_double_s_fourth_order_double_sin_cos_K3_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K3_V_address0),
    .ce0(fourth_order_double_sin_cos_K3_V_ce0),
    .q0(fourth_order_double_sin_cos_K3_V_q0)
);

dft_sin_or_cos_double_s_fourth_order_double_sin_cos_K4_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 25 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K4_V_address0),
    .ce0(fourth_order_double_sin_cos_K4_V_ce0),
    .q0(fourth_order_double_sin_cos_K4_V_q0)
);

dft_mul_170s_53ns_170_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 170 ),
    .din1_WIDTH( 53 ),
    .dout_WIDTH( 170 ))
mul_170s_53ns_170_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Med_V_reg_1558),
    .din1(grp_fu_409_p1),
    .ce(grp_fu_409_ce),
    .dout(grp_fu_409_p2)
);

dft_mul_49ns_49ns_98_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
mul_49ns_49ns_98_2_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_650_p0),
    .din1(grp_fu_650_p1),
    .ce(grp_fu_650_ce),
    .dout(grp_fu_650_p2)
);

dft_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_83_1_1_1_U3(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(k_V_1_reg_1584_pp0_iter6_reg),
    .dout(tmp_3_fu_656_p10)
);

dft_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
mux_164_1_1_1_U4(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_17_fu_720_p3),
    .dout(tmp_9_fu_726_p18)
);

dft_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
mux_164_1_1_1_U5(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_17_fu_720_p3),
    .dout(tmp_2_fu_764_p18)
);

dft_mul_49ns_49ns_98_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
mul_49ns_49ns_98_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_846_p0),
    .din1(grp_fu_846_p1),
    .ce(grp_fu_846_ce),
    .dout(grp_fu_846_p2)
);

dft_mul_49ns_49ns_98_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
mul_49ns_49ns_98_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_851_p0),
    .din1(grp_fu_851_p1),
    .ce(grp_fu_851_ce),
    .dout(grp_fu_851_p2)
);

dft_mul_56ns_52s_108_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 52 ),
    .dout_WIDTH( 108 ))
mul_56ns_52s_108_2_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_864_p0),
    .din1(fourth_order_double_sin_cos_K1_V_q0),
    .ce(grp_fu_864_ce),
    .dout(grp_fu_864_p2)
);

dft_mul_49ns_44s_93_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 93 ))
mul_49ns_44s_93_2_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_877_p0),
    .din1(fourth_order_double_sin_cos_K2_V_q0),
    .ce(grp_fu_877_ce),
    .dout(grp_fu_877_p2)
);

dft_mul_42ns_33ns_75_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 75 ))
mul_42ns_33ns_75_1_1_U10(
    .din0(r_V_11_fu_936_p0),
    .din1(r_V_11_fu_936_p1),
    .dout(r_V_11_fu_936_p2)
);

dft_mul_35ns_25ns_60_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 60 ))
mul_35ns_25ns_60_1_1_U11(
    .din0(r_V_12_fu_948_p0),
    .din1(r_V_12_fu_948_p1),
    .dout(r_V_12_fu_948_p2)
);

dft_mul_64s_63ns_126_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 63 ),
    .dout_WIDTH( 126 ))
mul_64s_63ns_126_2_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_V_reg_1782),
    .din1(grp_fu_1025_p1),
    .ce(grp_fu_1025_ce),
    .dout(grp_fu_1025_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        B_V_reg_1628 <= B_V_fu_633_p1;
        B_V_reg_1628_pp0_iter6_reg <= B_V_reg_1628;
        B_V_reg_1628_pp0_iter7_reg <= B_V_reg_1628_pp0_iter6_reg;
        B_squared_V_reg_1651 <= {{grp_fu_650_p2[97:49]}};
        B_trunc_reg_1633 <= {{r_V_16_fu_616_p3[55:7]}};
        Ex_V_3_reg_1597 <= Ex_V_3_fu_558_p2;
        Ex_V_3_reg_1597_pp0_iter10_reg <= Ex_V_3_reg_1597_pp0_iter9_reg;
        Ex_V_3_reg_1597_pp0_iter11_reg <= Ex_V_3_reg_1597_pp0_iter10_reg;
        Ex_V_3_reg_1597_pp0_iter12_reg <= Ex_V_3_reg_1597_pp0_iter11_reg;
        Ex_V_3_reg_1597_pp0_iter13_reg <= Ex_V_3_reg_1597_pp0_iter12_reg;
        Ex_V_3_reg_1597_pp0_iter5_reg <= Ex_V_3_reg_1597;
        Ex_V_3_reg_1597_pp0_iter6_reg <= Ex_V_3_reg_1597_pp0_iter5_reg;
        Ex_V_3_reg_1597_pp0_iter7_reg <= Ex_V_3_reg_1597_pp0_iter6_reg;
        Ex_V_3_reg_1597_pp0_iter8_reg <= Ex_V_3_reg_1597_pp0_iter7_reg;
        Ex_V_3_reg_1597_pp0_iter9_reg <= Ex_V_3_reg_1597_pp0_iter8_reg;
        Mx_V_2_reg_1777 <= Mx_V_2_fu_996_p3;
        Mx_V_reg_1590 <= {{r_fu_542_p2[123:61]}};
        Mx_V_reg_1590_pp0_iter10_reg <= Mx_V_reg_1590_pp0_iter9_reg;
        Mx_V_reg_1590_pp0_iter5_reg <= Mx_V_reg_1590;
        Mx_V_reg_1590_pp0_iter6_reg <= Mx_V_reg_1590_pp0_iter5_reg;
        Mx_V_reg_1590_pp0_iter7_reg <= Mx_V_reg_1590_pp0_iter6_reg;
        Mx_V_reg_1590_pp0_iter8_reg <= Mx_V_reg_1590_pp0_iter7_reg;
        Mx_V_reg_1590_pp0_iter9_reg <= Mx_V_reg_1590_pp0_iter8_reg;
        Mx_bits_V_reg_1573 <= {{grp_fu_409_p2[166:43]}};
        add_ln461_reg_1864 <= add_ln461_fu_1300_p2;
        and_ln300_reg_1674 <= and_ln300_fu_810_p2;
        and_ln300_reg_1674_pp0_iter10_reg <= and_ln300_reg_1674_pp0_iter9_reg;
        and_ln300_reg_1674_pp0_iter11_reg <= and_ln300_reg_1674_pp0_iter10_reg;
        and_ln300_reg_1674_pp0_iter12_reg <= and_ln300_reg_1674_pp0_iter11_reg;
        and_ln300_reg_1674_pp0_iter13_reg <= and_ln300_reg_1674_pp0_iter12_reg;
        and_ln300_reg_1674_pp0_iter14_reg <= and_ln300_reg_1674_pp0_iter13_reg;
        and_ln300_reg_1674_pp0_iter8_reg <= and_ln300_reg_1674;
        and_ln300_reg_1674_pp0_iter9_reg <= and_ln300_reg_1674_pp0_iter8_reg;
        and_ln453_2_reg_1854 <= and_ln453_2_fu_1264_p2;
        and_ln453_reg_1849 <= and_ln453_fu_1252_p2;
        closepath_reg_1530_pp0_iter2_reg <= closepath_reg_1530_pp0_iter1_reg;
        closepath_reg_1530_pp0_iter3_reg <= closepath_reg_1530_pp0_iter2_reg;
        cos_basis_reg_1645 <= cos_basis_fu_683_p3;
        cos_basis_reg_1645_pp0_iter10_reg <= cos_basis_reg_1645_pp0_iter9_reg;
        cos_basis_reg_1645_pp0_iter11_reg <= cos_basis_reg_1645_pp0_iter10_reg;
        cos_basis_reg_1645_pp0_iter12_reg <= cos_basis_reg_1645_pp0_iter11_reg;
        cos_basis_reg_1645_pp0_iter13_reg <= cos_basis_reg_1645_pp0_iter12_reg;
        cos_basis_reg_1645_pp0_iter8_reg <= cos_basis_reg_1645;
        cos_basis_reg_1645_pp0_iter9_reg <= cos_basis_reg_1645_pp0_iter8_reg;
        din_exp_V_reg_1523_pp0_iter2_reg <= din_exp_V_reg_1523_pp0_iter1_reg;
        din_exp_V_reg_1523_pp0_iter3_reg <= din_exp_V_reg_1523_pp0_iter2_reg;
        do_cos_read_reg_1509_pp0_iter10_reg <= do_cos_read_reg_1509_pp0_iter9_reg;
        do_cos_read_reg_1509_pp0_iter11_reg <= do_cos_read_reg_1509_pp0_iter10_reg;
        do_cos_read_reg_1509_pp0_iter12_reg <= do_cos_read_reg_1509_pp0_iter11_reg;
        do_cos_read_reg_1509_pp0_iter13_reg <= do_cos_read_reg_1509_pp0_iter12_reg;
        do_cos_read_reg_1509_pp0_iter14_reg <= do_cos_read_reg_1509_pp0_iter13_reg;
        do_cos_read_reg_1509_pp0_iter2_reg <= do_cos_read_reg_1509_pp0_iter1_reg;
        do_cos_read_reg_1509_pp0_iter3_reg <= do_cos_read_reg_1509_pp0_iter2_reg;
        do_cos_read_reg_1509_pp0_iter4_reg <= do_cos_read_reg_1509_pp0_iter3_reg;
        do_cos_read_reg_1509_pp0_iter5_reg <= do_cos_read_reg_1509_pp0_iter4_reg;
        do_cos_read_reg_1509_pp0_iter6_reg <= do_cos_read_reg_1509_pp0_iter5_reg;
        do_cos_read_reg_1509_pp0_iter7_reg <= do_cos_read_reg_1509_pp0_iter6_reg;
        do_cos_read_reg_1509_pp0_iter8_reg <= do_cos_read_reg_1509_pp0_iter7_reg;
        do_cos_read_reg_1509_pp0_iter9_reg <= do_cos_read_reg_1509_pp0_iter8_reg;
        fourth_order_double_sin_cos_K0_V_load_reg_1727 <= fourth_order_double_sin_cos_K0_V_q0;
        fourth_order_double_sin_cos_K3_V_load_reg_1747 <= fourth_order_double_sin_cos_K3_V_q0;
        fourth_order_double_sin_cos_K4_V_load_reg_1757 <= fourth_order_double_sin_cos_K4_V_q0;
        icmp_ln1019_1_reg_1552_pp0_iter10_reg <= icmp_ln1019_1_reg_1552_pp0_iter9_reg;
        icmp_ln1019_1_reg_1552_pp0_iter11_reg <= icmp_ln1019_1_reg_1552_pp0_iter10_reg;
        icmp_ln1019_1_reg_1552_pp0_iter12_reg <= icmp_ln1019_1_reg_1552_pp0_iter11_reg;
        icmp_ln1019_1_reg_1552_pp0_iter13_reg <= icmp_ln1019_1_reg_1552_pp0_iter12_reg;
        icmp_ln1019_1_reg_1552_pp0_iter14_reg <= icmp_ln1019_1_reg_1552_pp0_iter13_reg;
        icmp_ln1019_1_reg_1552_pp0_iter2_reg <= icmp_ln1019_1_reg_1552_pp0_iter1_reg;
        icmp_ln1019_1_reg_1552_pp0_iter3_reg <= icmp_ln1019_1_reg_1552_pp0_iter2_reg;
        icmp_ln1019_1_reg_1552_pp0_iter4_reg <= icmp_ln1019_1_reg_1552_pp0_iter3_reg;
        icmp_ln1019_1_reg_1552_pp0_iter5_reg <= icmp_ln1019_1_reg_1552_pp0_iter4_reg;
        icmp_ln1019_1_reg_1552_pp0_iter6_reg <= icmp_ln1019_1_reg_1552_pp0_iter5_reg;
        icmp_ln1019_1_reg_1552_pp0_iter7_reg <= icmp_ln1019_1_reg_1552_pp0_iter6_reg;
        icmp_ln1019_1_reg_1552_pp0_iter8_reg <= icmp_ln1019_1_reg_1552_pp0_iter7_reg;
        icmp_ln1019_1_reg_1552_pp0_iter9_reg <= icmp_ln1019_1_reg_1552_pp0_iter8_reg;
        icmp_ln1019_2_reg_1615 <= icmp_ln1019_2_fu_577_p2;
        icmp_ln1019_2_reg_1615_pp0_iter10_reg <= icmp_ln1019_2_reg_1615_pp0_iter9_reg;
        icmp_ln1019_2_reg_1615_pp0_iter11_reg <= icmp_ln1019_2_reg_1615_pp0_iter10_reg;
        icmp_ln1019_2_reg_1615_pp0_iter12_reg <= icmp_ln1019_2_reg_1615_pp0_iter11_reg;
        icmp_ln1019_2_reg_1615_pp0_iter13_reg <= icmp_ln1019_2_reg_1615_pp0_iter12_reg;
        icmp_ln1019_2_reg_1615_pp0_iter14_reg <= icmp_ln1019_2_reg_1615_pp0_iter13_reg;
        icmp_ln1019_2_reg_1615_pp0_iter5_reg <= icmp_ln1019_2_reg_1615;
        icmp_ln1019_2_reg_1615_pp0_iter6_reg <= icmp_ln1019_2_reg_1615_pp0_iter5_reg;
        icmp_ln1019_2_reg_1615_pp0_iter7_reg <= icmp_ln1019_2_reg_1615_pp0_iter6_reg;
        icmp_ln1019_2_reg_1615_pp0_iter8_reg <= icmp_ln1019_2_reg_1615_pp0_iter7_reg;
        icmp_ln1019_2_reg_1615_pp0_iter9_reg <= icmp_ln1019_2_reg_1615_pp0_iter8_reg;
        icmp_ln1019_reg_1609 <= icmp_ln1019_fu_572_p2;
        icmp_ln1019_reg_1609_pp0_iter10_reg <= icmp_ln1019_reg_1609_pp0_iter9_reg;
        icmp_ln1019_reg_1609_pp0_iter11_reg <= icmp_ln1019_reg_1609_pp0_iter10_reg;
        icmp_ln1019_reg_1609_pp0_iter12_reg <= icmp_ln1019_reg_1609_pp0_iter11_reg;
        icmp_ln1019_reg_1609_pp0_iter13_reg <= icmp_ln1019_reg_1609_pp0_iter12_reg;
        icmp_ln1019_reg_1609_pp0_iter14_reg <= icmp_ln1019_reg_1609_pp0_iter13_reg;
        icmp_ln1019_reg_1609_pp0_iter5_reg <= icmp_ln1019_reg_1609;
        icmp_ln1019_reg_1609_pp0_iter6_reg <= icmp_ln1019_reg_1609_pp0_iter5_reg;
        icmp_ln1019_reg_1609_pp0_iter7_reg <= icmp_ln1019_reg_1609_pp0_iter6_reg;
        icmp_ln1019_reg_1609_pp0_iter8_reg <= icmp_ln1019_reg_1609_pp0_iter7_reg;
        icmp_ln1019_reg_1609_pp0_iter9_reg <= icmp_ln1019_reg_1609_pp0_iter8_reg;
        icmp_ln1653_reg_1869 <= icmp_ln1653_fu_1306_p2;
        icmp_ln453_reg_1838 <= icmp_ln453_fu_1200_p2;
        isNeg_reg_1603 <= Ex_V_3_fu_558_p2[32'd10];
        k_V_1_reg_1584 <= k_V_1_fu_453_p3;
        k_V_1_reg_1584_pp0_iter5_reg <= k_V_1_reg_1584;
        k_V_1_reg_1584_pp0_iter6_reg <= k_V_1_reg_1584_pp0_iter5_reg;
        p_Result_11_reg_1517_pp0_iter2_reg <= p_Result_11_reg_1517_pp0_iter1_reg;
        p_Result_11_reg_1517_pp0_iter3_reg <= p_Result_11_reg_1517_pp0_iter2_reg;
        p_Result_11_reg_1517_pp0_iter4_reg <= p_Result_11_reg_1517_pp0_iter3_reg;
        p_Result_11_reg_1517_pp0_iter5_reg <= p_Result_11_reg_1517_pp0_iter4_reg;
        p_Result_11_reg_1517_pp0_iter6_reg <= p_Result_11_reg_1517_pp0_iter5_reg;
        result_V_reg_1797 <= {{grp_fu_1025_p2[125:63]}};
        results_sign_V_4_reg_1680 <= results_sign_V_4_fu_835_p3;
        results_sign_V_4_reg_1680_pp0_iter10_reg <= results_sign_V_4_reg_1680_pp0_iter9_reg;
        results_sign_V_4_reg_1680_pp0_iter11_reg <= results_sign_V_4_reg_1680_pp0_iter10_reg;
        results_sign_V_4_reg_1680_pp0_iter12_reg <= results_sign_V_4_reg_1680_pp0_iter11_reg;
        results_sign_V_4_reg_1680_pp0_iter13_reg <= results_sign_V_4_reg_1680_pp0_iter12_reg;
        results_sign_V_4_reg_1680_pp0_iter14_reg <= results_sign_V_4_reg_1680_pp0_iter13_reg;
        results_sign_V_4_reg_1680_pp0_iter8_reg <= results_sign_V_4_reg_1680;
        results_sign_V_4_reg_1680_pp0_iter9_reg <= results_sign_V_4_reg_1680_pp0_iter8_reg;
        ret_V_5_reg_1568 <= grp_fu_409_p2;
        ret_V_7_reg_1767 <= ret_V_7_fu_980_p2;
        ret_V_reg_1782 <= ret_V_fu_1013_p2;
        rhs_1_reg_1732 <= {{grp_fu_864_p2[107:52]}};
        rhs_2_reg_1737 <= {{grp_fu_877_p2[92:45]}};
        rhs_4_reg_1762 <= {{r_V_12_fu_948_p2[59:31]}};
        select_ln453_2_reg_1859 <= select_ln453_2_fu_1292_p3;
        shl_ln1454_1_reg_1843 <= shl_ln1454_1_fu_1216_p2;
        shl_ln1454_reg_1833 <= shl_ln1454_fu_1195_p2;
        tmp_4_reg_1623 <= {{r_V_16_fu_616_p3[62:56]}};
        tmp_4_reg_1623_pp0_iter6_reg <= tmp_4_reg_1623;
        tmp_5_reg_1818 <= {{grp_fu_1025_p2[77:63]}};
        tmp_7_1_reg_1808 <= {{grp_fu_1025_p2[109:94]}};
        tmp_7_2_reg_1813 <= {{grp_fu_1025_p2[93:78]}};
        tmp_7_reg_1803 <= {{grp_fu_1025_p2[125:110]}};
        tmp_8_2_reg_1823 <= tmp_8_2_fu_1161_p3;
        tmp_8_3_reg_1828 <= tmp_8_3_fu_1179_p3;
        trunc_ln1270_1_reg_1752 <= {{grp_fu_851_p2[97:63]}};
        trunc_ln1_reg_1742 <= {{grp_fu_846_p2[97:56]}};
        trunc_ln2_reg_1772 <= {{r_V_11_fu_936_p2[74:38]}};
        zext_ln1271_reg_1638[48 : 0] <= zext_ln1271_fu_647_p1[48 : 0];
        zext_ln1271_reg_1638_pp0_iter7_reg[48 : 0] <= zext_ln1271_reg_1638[48 : 0];
        zext_ln541_reg_1657[7 : 0] <= zext_ln541_fu_714_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Med_V_reg_1558 <= {{r_V_15_fu_382_p2[255:86]}};
        closepath_reg_1530 <= closepath_fu_330_p2;
        closepath_reg_1530_pp0_iter1_reg <= closepath_reg_1530;
        din_exp_V_reg_1523 <= {{data_V_fu_304_p1[62:52]}};
        din_exp_V_reg_1523_pp0_iter1_reg <= din_exp_V_reg_1523;
        do_cos_read_reg_1509 <= do_cos;
        do_cos_read_reg_1509_pp0_iter1_reg <= do_cos_read_reg_1509;
        icmp_ln1019_1_reg_1552 <= icmp_ln1019_1_fu_373_p2;
        icmp_ln1019_1_reg_1552_pp0_iter1_reg <= icmp_ln1019_1_reg_1552;
        p_Result_11_reg_1517 <= data_V_fu_304_p1[32'd63];
        p_Result_11_reg_1517_pp0_iter1_reg <= p_Result_11_reg_1517;
        p_Result_12_reg_1537 <= p_Result_12_fu_336_p1;
        p_Result_12_reg_1537_pp0_iter1_reg <= p_Result_12_reg_1537;
        trunc_ln628_reg_1547 <= trunc_ln628_fu_369_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (closepath_reg_1530_pp0_iter2_reg == 1'd0))) begin
        k_V_reg_1579 <= {{grp_fu_409_p2[169:167]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to14 = 1'b1;
    end else begin
        ap_idle_pp0_0to14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to14 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_ce))) begin
        fourth_order_double_sin_cos_K0_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_ce))) begin
        fourth_order_double_sin_cos_K1_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_ce))) begin
        fourth_order_double_sin_cos_K2_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_ce))) begin
        fourth_order_double_sin_cos_K3_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_ce))) begin
        fourth_order_double_sin_cos_K4_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1025_ce = 1'b1;
    end else begin
        grp_fu_1025_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_409_ce = 1'b1;
    end else begin
        grp_fu_409_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_650_ce = 1'b1;
    end else begin
        grp_fu_650_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_846_ce = 1'b1;
    end else begin
        grp_fu_846_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_851_ce = 1'b1;
    end else begin
        grp_fu_851_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_864_ce = 1'b1;
    end else begin
        grp_fu_864_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_877_ce = 1'b1;
    end else begin
        grp_fu_877_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ref_4oPi_table_256_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_256_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_V_fu_633_p1 = r_V_16_fu_616_p3[55:0];

assign Ex_V_3_fu_558_p2 = (select_ln482_fu_439_p3 - zext_ln841_fu_534_p1);

assign Ex_V_4_fu_1102_p3 = ((cos_basis_reg_1645_pp0_iter13_reg[0:0] == 1'b1) ? 11'd0 : Ex_V_3_reg_1597_pp0_iter13_reg);

assign Ex_V_fu_434_p2 = ($signed(din_exp_V_reg_1523_pp0_iter3_reg) + $signed(11'd1027));

assign Mx_V_2_fu_996_p3 = ((cos_basis_reg_1645_pp0_iter10_reg[0:0] == 1'b1) ? 63'd9223372036854775807 : Mx_V_reg_1590_pp0_iter10_reg);

assign Mx_bits_V_1_fu_470_p2 = (124'd0 - Mx_bits_V_reg_1573);

assign Mx_bits_V_3_fu_475_p3 = ((p_Result_s_fu_464_p2[0:0] == 1'b1) ? Mx_bits_V_1_fu_470_p2 : Mx_bits_V_reg_1573);

assign Mx_zeros_fu_530_p1 = tmp_s_fu_522_p3[6:0];

assign add_ln214_fu_340_p2 = ($signed(din_exp_V_fu_316_p4) + $signed(11'd1101));

assign add_ln451_1_fu_1228_p2 = (tmp_8_2_fu_1161_p3 + add_ln451_fu_1206_p2);

assign add_ln451_2_fu_1240_p2 = (tmp_8_3_fu_1179_p3 + add_ln451_1_fu_1228_p2);

assign add_ln451_fu_1206_p2 = (tmp_8_1_fu_1143_p3 + 32'd16);

assign add_ln461_fu_1300_p2 = ($signed(sext_ln186_fu_1187_p1) + $signed(12'd1023));

assign addr_fu_346_p3 = ((closepath_fu_330_p2[0:0] == 1'b1) ? 11'd74 : add_ln214_fu_340_p2);

assign and_ln300_1_fu_1466_p2 = (icmp_ln1019_reg_1609_pp0_iter14_reg & icmp_ln1019_1_reg_1552_pp0_iter14_reg);

assign and_ln300_fu_810_p2 = (icmp_ln1019_reg_1609_pp0_iter6_reg & icmp_ln1019_1_reg_1552_pp0_iter6_reg);

assign and_ln453_1_fu_1258_p2 = (icmp_ln453_2_fu_1234_p2 & icmp_ln453_1_fu_1222_p2);

assign and_ln453_2_fu_1264_p2 = (icmp_ln453_fu_1200_p2 & and_ln453_1_fu_1258_p2);

assign and_ln453_fu_1252_p2 = (xor_ln453_fu_1246_p2 & icmp_ln453_fu_1200_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = p_Result_18_fu_1496_p4;

assign closepath_fu_330_p2 = ((din_exp_V_fu_316_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign cos_basis_fu_683_p3 = ((do_cos_read_reg_1509_pp0_iter6_reg[0:0] == 1'b1) ? xor_ln271_fu_677_p2 : tmp_3_fu_656_p10);

assign data_V_fu_304_p1 = t_in;

assign din_exp_V_fu_316_p4 = {{data_V_fu_304_p1[62:52]}};

assign din_sig_V_fu_326_p1 = data_V_fu_304_p1[51:0];

assign fourth_order_double_sin_cos_K0_V_address0 = zext_ln541_reg_1657;

assign fourth_order_double_sin_cos_K1_V_address0 = zext_ln541_fu_714_p1;

assign fourth_order_double_sin_cos_K2_V_address0 = zext_ln541_fu_714_p1;

assign fourth_order_double_sin_cos_K3_V_address0 = zext_ln541_reg_1657;

assign fourth_order_double_sin_cos_K4_V_address0 = zext_ln541_reg_1657;

assign grp_fu_1025_p1 = grp_fu_1025_p10;

assign grp_fu_1025_p10 = Mx_V_2_reg_1777;

assign grp_fu_409_p1 = grp_fu_409_p10;

assign grp_fu_409_p10 = p_Result_13_fu_398_p3;

assign grp_fu_650_p0 = zext_ln1271_fu_647_p1;

assign grp_fu_650_p1 = zext_ln1271_fu_647_p1;

assign grp_fu_846_p0 = zext_ln818_fu_843_p1;

assign grp_fu_846_p1 = zext_ln1271_reg_1638_pp0_iter7_reg;

assign grp_fu_851_p0 = zext_ln818_fu_843_p1;

assign grp_fu_851_p1 = zext_ln818_fu_843_p1;

assign grp_fu_864_p0 = grp_fu_864_p00;

assign grp_fu_864_p00 = B_V_reg_1628_pp0_iter7_reg;

assign grp_fu_877_p0 = grp_fu_877_p00;

assign grp_fu_877_p00 = B_squared_V_reg_1651;

assign icmp_ln1019_1_fu_373_p2 = ((din_sig_V_fu_326_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1019_2_fu_577_p2 = ((din_exp_V_reg_1523_pp0_iter3_reg == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1019_fu_572_p2 = ((din_exp_V_reg_1523_pp0_iter3_reg == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln1653_fu_1306_p2 = ((result_V_reg_1797 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln453_1_fu_1222_p2 = ((tmp_8_1_fu_1143_p3 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln453_2_fu_1234_p2 = ((tmp_8_2_fu_1161_p3 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln453_fu_1200_p2 = ((tmp_8_fu_1125_p3 == 32'd16) ? 1'b1 : 1'b0);

assign k_V_1_fu_453_p3 = ((closepath_reg_1530_pp0_iter3_reg[0:0] == 1'b1) ? 3'd0 : k_V_reg_1579);

assign newexp_fu_1331_p2 = ($signed(sext_ln461_fu_1328_p1) - $signed(select_ln453_2_reg_1859));

assign or_ln300_fu_1484_p2 = (icmp_ln1019_2_reg_1615_pp0_iter14_reg | and_ln300_reg_1674_pp0_iter14_reg);

assign or_ln311_fu_1446_p2 = (or_ln462_fu_1344_p2 | icmp_ln1019_2_reg_1615_pp0_iter14_reg);

assign or_ln453_fu_1278_p2 = (and_ln453_fu_1252_p2 | and_ln453_2_fu_1264_p2);

assign or_ln462_1_fu_1349_p2 = (or_ln462_fu_1344_p2 | and_ln453_2_reg_1854);

assign or_ln462_2_fu_1354_p2 = (or_ln462_fu_1344_p2 | icmp_ln453_reg_1838);

assign or_ln462_fu_1344_p2 = (tmp_15_fu_1336_p3 | icmp_ln1653_reg_1869);

assign p_Result_12_fu_336_p1 = data_V_fu_304_p1[51:0];

assign p_Result_13_fu_398_p3 = {{1'd1}, {p_Result_12_reg_1537_pp0_iter1_reg}};

assign p_Result_14_fu_492_p3 = {{tmp_1_fu_482_p4}, {1'd1}};

assign p_Result_15_fu_510_p3 = {{1'd1}, {p_Result_2_fu_500_p4}};

assign p_Result_16_fu_707_p3 = {{sin_basis_fu_700_p3}, {tmp_4_reg_1623_pp0_iter6_reg}};

assign p_Result_17_fu_720_p3 = {{p_Result_11_reg_1517_pp0_iter6_reg}, {k_V_1_reg_1584_pp0_iter6_reg}};

assign p_Result_18_fu_1496_p4 = {{{results_sign_V_4_reg_1680_pp0_iter14_reg}, {results_exp_V_fu_1459_p3}}, {results_sig_V_fu_1488_p3}};

integer ap_tvar_int_0;

always @ (p_Result_14_fu_492_p3) begin
    for (ap_tvar_int_0 = 62 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 61 - 0) begin
            p_Result_2_fu_500_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_2_fu_500_p4[ap_tvar_int_0] = p_Result_14_fu_492_p3[61 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (p_Result_8_1_fu_1088_p3) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_32_1_fu_1133_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_32_1_fu_1133_p4[ap_tvar_int_1] = p_Result_8_1_fu_1088_p3[31 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Result_8_2_fu_1095_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_32_2_fu_1151_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_32_2_fu_1151_p4[ap_tvar_int_2] = p_Result_8_2_fu_1095_p3[31 - ap_tvar_int_2];
        end
    end
end

integer ap_tvar_int_3;

always @ (p_Result_6_fu_1108_p3) begin
    for (ap_tvar_int_3 = 32 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 31 - 0) begin
            p_Result_32_3_fu_1169_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_32_3_fu_1169_p4[ap_tvar_int_3] = p_Result_6_fu_1108_p3[31 - ap_tvar_int_3];
        end
    end
end

assign p_Result_6_fu_1108_p3 = {{tmp_5_reg_1818}, {17'd65536}};

assign p_Result_8_1_fu_1088_p3 = {{tmp_7_1_reg_1808}, {16'd32768}};

assign p_Result_8_2_fu_1095_p3 = {{tmp_7_2_reg_1813}, {16'd32768}};

assign p_Result_8_fu_1081_p3 = {{tmp_7_reg_1803}, {16'd32768}};

integer ap_tvar_int_4;

always @ (p_Result_8_fu_1081_p3) begin
    for (ap_tvar_int_4 = 32 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 31 - 0) begin
            p_Result_s_37_fu_1115_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            p_Result_s_37_fu_1115_p4[ap_tvar_int_4] = p_Result_8_fu_1081_p3[31 - ap_tvar_int_4];
        end
    end
end

assign p_Result_s_fu_464_p2 = (xor_ln1027_fu_459_p2 & tmp_6_fu_446_p3);

assign r_V_11_fu_936_p0 = r_V_11_fu_936_p00;

assign r_V_11_fu_936_p00 = trunc_ln1_reg_1742;

assign r_V_11_fu_936_p1 = r_V_11_fu_936_p10;

assign r_V_11_fu_936_p10 = fourth_order_double_sin_cos_K3_V_load_reg_1747;

assign r_V_12_fu_948_p0 = r_V_12_fu_948_p00;

assign r_V_12_fu_948_p00 = trunc_ln1270_1_reg_1752;

assign r_V_12_fu_948_p1 = r_V_12_fu_948_p10;

assign r_V_12_fu_948_p10 = fourth_order_double_sin_cos_K4_V_load_reg_1757;

assign r_V_15_fu_382_p2 = ref_4oPi_table_256_V_q0 << zext_ln930_fu_379_p1;

assign r_V_16_fu_616_p3 = ((isNeg_reg_1603[0:0] == 1'b1) ? r_V_fu_606_p2 : r_V_2_fu_611_p2);

assign r_V_2_fu_611_p2 = Mx_V_reg_1590 << zext_ln1488_fu_602_p1;

assign r_V_fu_606_p2 = Mx_V_reg_1590 >> zext_ln1488_fu_602_p1;

assign r_fu_542_p2 = Mx_bits_V_3_fu_475_p3 << zext_ln1454_fu_538_p1;

assign ref_4oPi_table_256_V_address0 = zext_ln668_fu_364_p1;

assign results_exp_V_1_fu_1451_p3 = ((or_ln311_fu_1446_p2[0:0] == 1'b1) ? select_ln311_fu_1439_p3 : trunc_ln214_fu_1428_p1);

assign results_exp_V_fu_1459_p3 = ((and_ln300_reg_1674_pp0_iter14_reg[0:0] == 1'b1) ? select_ln288_fu_1432_p3 : results_exp_V_1_fu_1451_p3);

assign results_sig_V_fu_1488_p3 = ((or_ln300_fu_1484_p2[0:0] == 1'b1) ? select_ln300_fu_1476_p3 : significand_fu_1420_p3);

assign results_sign_V_2_fu_819_p2 = (xor_ln307_fu_814_p2 & p_Result_11_reg_1517_pp0_iter6_reg);

assign results_sign_V_3_fu_829_p2 = (xor_ln311_fu_824_p2 & results_sign_V_fu_802_p3);

assign results_sign_V_4_fu_835_p3 = ((and_ln300_fu_810_p2[0:0] == 1'b1) ? results_sign_V_2_fu_819_p2 : results_sign_V_3_fu_829_p2);

assign results_sign_V_fu_802_p3 = ((cos_basis_fu_683_p3[0:0] == 1'b1) ? tmp_9_fu_726_p18 : tmp_2_fu_764_p18);

assign ret_V_6_fu_971_p2 = ($signed(sext_ln813_fu_964_p1) + $signed(sext_ln813_1_fu_968_p1));

assign ret_V_7_fu_980_p2 = ($signed(ret_V_6_fu_971_p2) + $signed(sext_ln1347_fu_977_p1));

assign ret_V_8_fu_1005_p2 = (ret_V_7_reg_1767 + zext_ln1347_fu_1002_p1);

assign ret_V_fu_1013_p2 = (ret_V_8_fu_1005_p2 + zext_ln1347_1_fu_1010_p1);

assign select_ln288_fu_1432_p3 = ((do_cos_read_reg_1509_pp0_iter14_reg[0:0] == 1'b1) ? 11'd1023 : 11'd0);

assign select_ln300_fu_1476_p3 = ((xor_ln300_fu_1470_p2[0:0] == 1'b1) ? 52'd4503599627370495 : 52'd0);

assign select_ln311_fu_1439_p3 = ((icmp_ln1019_2_reg_1615_pp0_iter14_reg[0:0] == 1'b1) ? 11'd2047 : 11'd0);

assign select_ln453_1_fu_1284_p3 = ((icmp_ln453_fu_1200_p2[0:0] == 1'b1) ? add_ln451_1_fu_1228_p2 : tmp_8_fu_1125_p3);

assign select_ln453_2_fu_1292_p3 = ((or_ln453_fu_1278_p2[0:0] == 1'b1) ? select_ln453_fu_1270_p3 : select_ln453_1_fu_1284_p3);

assign select_ln453_fu_1270_p3 = ((and_ln453_2_fu_1264_p2[0:0] == 1'b1) ? add_ln451_2_fu_1240_p2 : add_ln451_fu_1206_p2);

assign select_ln462_1_fu_1396_p3 = ((and_ln453_reg_1849[0:0] == 1'b1) ? tmp_11_fu_1377_p4 : tmp_12_fu_1386_p4);

assign select_ln462_2_fu_1403_p3 = ((or_ln462_1_fu_1349_p2[0:0] == 1'b1) ? select_ln462_fu_1369_p3 : select_ln462_1_fu_1396_p3);

assign select_ln462_fu_1369_p3 = ((or_ln462_fu_1344_p2[0:0] == 1'b1) ? 52'd0 : tmp_10_fu_1359_p4);

assign select_ln482_fu_439_p3 = ((closepath_reg_1530_pp0_iter3_reg[0:0] == 1'b1) ? Ex_V_fu_434_p2 : 11'd0);

assign sext_ln1204_fu_518_p1 = $signed(p_Result_15_fu_510_p3);

assign sext_ln1347_fu_977_p1 = $signed(rhs_2_reg_1737);

assign sext_ln1488_fu_598_p1 = $signed(ush_fu_591_p3);

assign sext_ln1535_fu_582_p1 = Ex_V_3_reg_1597;

assign sext_ln186_fu_1187_p1 = $signed(Ex_V_4_fu_1102_p3);

assign sext_ln461_fu_1328_p1 = $signed(add_ln461_reg_1864);

assign sext_ln813_1_fu_968_p1 = $signed(rhs_1_reg_1732);

assign sext_ln813_fu_964_p1 = $signed(t1_V_fu_923_p3);

assign shl_ln1454_1_fu_1216_p2 = shl_ln1454_fu_1195_p2 << zext_ln1488_2_fu_1212_p1;

assign shl_ln1454_2_fu_1314_p2 = shl_ln1454_1_reg_1843 << zext_ln1488_3_fu_1311_p1;

assign shl_ln1454_3_fu_1322_p2 = shl_ln1454_2_fu_1314_p2 << zext_ln1488_4_fu_1319_p1;

assign shl_ln1454_fu_1195_p2 = result_V_reg_1797 << zext_ln1488_1_fu_1191_p1;

assign significand_fu_1420_p3 = ((or_ln462_2_fu_1354_p2[0:0] == 1'b1) ? select_ln462_2_fu_1403_p3 : tmp_13_fu_1411_p4);

assign sin_basis_fu_700_p3 = ((do_cos_read_reg_1509_pp0_iter6_reg[0:0] == 1'b1) ? tmp_3_fu_656_p10 : xor_ln271_fu_677_p2);

assign sub_ln1512_fu_585_p2 = ($signed(12'd0) - $signed(sext_ln1535_fu_582_p1));

assign t1_V_fu_923_p3 = {{fourth_order_double_sin_cos_K0_V_load_reg_1727}, {4'd0}};

assign tmp_10_fu_1359_p4 = {{shl_ln1454_3_fu_1322_p2[61:10]}};

assign tmp_11_fu_1377_p4 = {{shl_ln1454_1_reg_1843[61:10]}};

assign tmp_12_fu_1386_p4 = {{shl_ln1454_2_fu_1314_p2[61:10]}};

assign tmp_13_fu_1411_p4 = {{shl_ln1454_reg_1833[61:10]}};

assign tmp_15_fu_1336_p3 = newexp_fu_1331_p2[32'd31];

assign tmp_1_fu_482_p4 = {{Mx_bits_V_3_fu_475_p3[123:63]}};

assign tmp_6_fu_446_p3 = ret_V_5_reg_1568[32'd167];


always @ (p_Result_32_1_fu_1133_p4) begin
    if (p_Result_32_1_fu_1133_p4[0] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd0;
    end else if (p_Result_32_1_fu_1133_p4[1] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd1;
    end else if (p_Result_32_1_fu_1133_p4[2] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd2;
    end else if (p_Result_32_1_fu_1133_p4[3] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd3;
    end else if (p_Result_32_1_fu_1133_p4[4] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd4;
    end else if (p_Result_32_1_fu_1133_p4[5] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd5;
    end else if (p_Result_32_1_fu_1133_p4[6] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd6;
    end else if (p_Result_32_1_fu_1133_p4[7] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd7;
    end else if (p_Result_32_1_fu_1133_p4[8] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd8;
    end else if (p_Result_32_1_fu_1133_p4[9] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd9;
    end else if (p_Result_32_1_fu_1133_p4[10] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd10;
    end else if (p_Result_32_1_fu_1133_p4[11] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd11;
    end else if (p_Result_32_1_fu_1133_p4[12] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd12;
    end else if (p_Result_32_1_fu_1133_p4[13] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd13;
    end else if (p_Result_32_1_fu_1133_p4[14] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd14;
    end else if (p_Result_32_1_fu_1133_p4[15] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd15;
    end else if (p_Result_32_1_fu_1133_p4[16] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd16;
    end else if (p_Result_32_1_fu_1133_p4[17] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd17;
    end else if (p_Result_32_1_fu_1133_p4[18] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd18;
    end else if (p_Result_32_1_fu_1133_p4[19] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd19;
    end else if (p_Result_32_1_fu_1133_p4[20] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd20;
    end else if (p_Result_32_1_fu_1133_p4[21] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd21;
    end else if (p_Result_32_1_fu_1133_p4[22] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd22;
    end else if (p_Result_32_1_fu_1133_p4[23] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd23;
    end else if (p_Result_32_1_fu_1133_p4[24] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd24;
    end else if (p_Result_32_1_fu_1133_p4[25] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd25;
    end else if (p_Result_32_1_fu_1133_p4[26] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd26;
    end else if (p_Result_32_1_fu_1133_p4[27] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd27;
    end else if (p_Result_32_1_fu_1133_p4[28] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd28;
    end else if (p_Result_32_1_fu_1133_p4[29] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd29;
    end else if (p_Result_32_1_fu_1133_p4[30] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd30;
    end else if (p_Result_32_1_fu_1133_p4[31] == 1'b1) begin
        tmp_8_1_fu_1143_p3 = 32'd31;
    end else begin
        tmp_8_1_fu_1143_p3 = 32'd32;
    end
end


always @ (p_Result_32_2_fu_1151_p4) begin
    if (p_Result_32_2_fu_1151_p4[0] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd0;
    end else if (p_Result_32_2_fu_1151_p4[1] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd1;
    end else if (p_Result_32_2_fu_1151_p4[2] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd2;
    end else if (p_Result_32_2_fu_1151_p4[3] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd3;
    end else if (p_Result_32_2_fu_1151_p4[4] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd4;
    end else if (p_Result_32_2_fu_1151_p4[5] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd5;
    end else if (p_Result_32_2_fu_1151_p4[6] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd6;
    end else if (p_Result_32_2_fu_1151_p4[7] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd7;
    end else if (p_Result_32_2_fu_1151_p4[8] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd8;
    end else if (p_Result_32_2_fu_1151_p4[9] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd9;
    end else if (p_Result_32_2_fu_1151_p4[10] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd10;
    end else if (p_Result_32_2_fu_1151_p4[11] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd11;
    end else if (p_Result_32_2_fu_1151_p4[12] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd12;
    end else if (p_Result_32_2_fu_1151_p4[13] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd13;
    end else if (p_Result_32_2_fu_1151_p4[14] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd14;
    end else if (p_Result_32_2_fu_1151_p4[15] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd15;
    end else if (p_Result_32_2_fu_1151_p4[16] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd16;
    end else if (p_Result_32_2_fu_1151_p4[17] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd17;
    end else if (p_Result_32_2_fu_1151_p4[18] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd18;
    end else if (p_Result_32_2_fu_1151_p4[19] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd19;
    end else if (p_Result_32_2_fu_1151_p4[20] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd20;
    end else if (p_Result_32_2_fu_1151_p4[21] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd21;
    end else if (p_Result_32_2_fu_1151_p4[22] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd22;
    end else if (p_Result_32_2_fu_1151_p4[23] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd23;
    end else if (p_Result_32_2_fu_1151_p4[24] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd24;
    end else if (p_Result_32_2_fu_1151_p4[25] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd25;
    end else if (p_Result_32_2_fu_1151_p4[26] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd26;
    end else if (p_Result_32_2_fu_1151_p4[27] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd27;
    end else if (p_Result_32_2_fu_1151_p4[28] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd28;
    end else if (p_Result_32_2_fu_1151_p4[29] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd29;
    end else if (p_Result_32_2_fu_1151_p4[30] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd30;
    end else if (p_Result_32_2_fu_1151_p4[31] == 1'b1) begin
        tmp_8_2_fu_1161_p3 = 32'd31;
    end else begin
        tmp_8_2_fu_1161_p3 = 32'd32;
    end
end


always @ (p_Result_32_3_fu_1169_p4) begin
    if (p_Result_32_3_fu_1169_p4[0] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd0;
    end else if (p_Result_32_3_fu_1169_p4[1] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd1;
    end else if (p_Result_32_3_fu_1169_p4[2] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd2;
    end else if (p_Result_32_3_fu_1169_p4[3] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd3;
    end else if (p_Result_32_3_fu_1169_p4[4] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd4;
    end else if (p_Result_32_3_fu_1169_p4[5] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd5;
    end else if (p_Result_32_3_fu_1169_p4[6] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd6;
    end else if (p_Result_32_3_fu_1169_p4[7] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd7;
    end else if (p_Result_32_3_fu_1169_p4[8] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd8;
    end else if (p_Result_32_3_fu_1169_p4[9] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd9;
    end else if (p_Result_32_3_fu_1169_p4[10] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd10;
    end else if (p_Result_32_3_fu_1169_p4[11] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd11;
    end else if (p_Result_32_3_fu_1169_p4[12] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd12;
    end else if (p_Result_32_3_fu_1169_p4[13] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd13;
    end else if (p_Result_32_3_fu_1169_p4[14] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd14;
    end else if (p_Result_32_3_fu_1169_p4[15] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd15;
    end else if (p_Result_32_3_fu_1169_p4[16] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd16;
    end else if (p_Result_32_3_fu_1169_p4[17] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd17;
    end else if (p_Result_32_3_fu_1169_p4[18] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd18;
    end else if (p_Result_32_3_fu_1169_p4[19] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd19;
    end else if (p_Result_32_3_fu_1169_p4[20] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd20;
    end else if (p_Result_32_3_fu_1169_p4[21] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd21;
    end else if (p_Result_32_3_fu_1169_p4[22] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd22;
    end else if (p_Result_32_3_fu_1169_p4[23] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd23;
    end else if (p_Result_32_3_fu_1169_p4[24] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd24;
    end else if (p_Result_32_3_fu_1169_p4[25] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd25;
    end else if (p_Result_32_3_fu_1169_p4[26] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd26;
    end else if (p_Result_32_3_fu_1169_p4[27] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd27;
    end else if (p_Result_32_3_fu_1169_p4[28] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd28;
    end else if (p_Result_32_3_fu_1169_p4[29] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd29;
    end else if (p_Result_32_3_fu_1169_p4[30] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd30;
    end else if (p_Result_32_3_fu_1169_p4[31] == 1'b1) begin
        tmp_8_3_fu_1179_p3 = 32'd31;
    end else begin
        tmp_8_3_fu_1179_p3 = 32'd32;
    end
end


always @ (p_Result_s_37_fu_1115_p4) begin
    if (p_Result_s_37_fu_1115_p4[0] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd0;
    end else if (p_Result_s_37_fu_1115_p4[1] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd1;
    end else if (p_Result_s_37_fu_1115_p4[2] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd2;
    end else if (p_Result_s_37_fu_1115_p4[3] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd3;
    end else if (p_Result_s_37_fu_1115_p4[4] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd4;
    end else if (p_Result_s_37_fu_1115_p4[5] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd5;
    end else if (p_Result_s_37_fu_1115_p4[6] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd6;
    end else if (p_Result_s_37_fu_1115_p4[7] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd7;
    end else if (p_Result_s_37_fu_1115_p4[8] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd8;
    end else if (p_Result_s_37_fu_1115_p4[9] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd9;
    end else if (p_Result_s_37_fu_1115_p4[10] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd10;
    end else if (p_Result_s_37_fu_1115_p4[11] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd11;
    end else if (p_Result_s_37_fu_1115_p4[12] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd12;
    end else if (p_Result_s_37_fu_1115_p4[13] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd13;
    end else if (p_Result_s_37_fu_1115_p4[14] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd14;
    end else if (p_Result_s_37_fu_1115_p4[15] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd15;
    end else if (p_Result_s_37_fu_1115_p4[16] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd16;
    end else if (p_Result_s_37_fu_1115_p4[17] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd17;
    end else if (p_Result_s_37_fu_1115_p4[18] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd18;
    end else if (p_Result_s_37_fu_1115_p4[19] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd19;
    end else if (p_Result_s_37_fu_1115_p4[20] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd20;
    end else if (p_Result_s_37_fu_1115_p4[21] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd21;
    end else if (p_Result_s_37_fu_1115_p4[22] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd22;
    end else if (p_Result_s_37_fu_1115_p4[23] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd23;
    end else if (p_Result_s_37_fu_1115_p4[24] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd24;
    end else if (p_Result_s_37_fu_1115_p4[25] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd25;
    end else if (p_Result_s_37_fu_1115_p4[26] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd26;
    end else if (p_Result_s_37_fu_1115_p4[27] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd27;
    end else if (p_Result_s_37_fu_1115_p4[28] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd28;
    end else if (p_Result_s_37_fu_1115_p4[29] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd29;
    end else if (p_Result_s_37_fu_1115_p4[30] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd30;
    end else if (p_Result_s_37_fu_1115_p4[31] == 1'b1) begin
        tmp_8_fu_1125_p3 = 32'd31;
    end else begin
        tmp_8_fu_1125_p3 = 32'd32;
    end
end

assign tmp_fu_354_p4 = {{addr_fu_346_p3[10:7]}};


always @ (sext_ln1204_fu_518_p1) begin
    if (sext_ln1204_fu_518_p1[0] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd0;
    end else if (sext_ln1204_fu_518_p1[1] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd1;
    end else if (sext_ln1204_fu_518_p1[2] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd2;
    end else if (sext_ln1204_fu_518_p1[3] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd3;
    end else if (sext_ln1204_fu_518_p1[4] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd4;
    end else if (sext_ln1204_fu_518_p1[5] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd5;
    end else if (sext_ln1204_fu_518_p1[6] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd6;
    end else if (sext_ln1204_fu_518_p1[7] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd7;
    end else if (sext_ln1204_fu_518_p1[8] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd8;
    end else if (sext_ln1204_fu_518_p1[9] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd9;
    end else if (sext_ln1204_fu_518_p1[10] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd10;
    end else if (sext_ln1204_fu_518_p1[11] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd11;
    end else if (sext_ln1204_fu_518_p1[12] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd12;
    end else if (sext_ln1204_fu_518_p1[13] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd13;
    end else if (sext_ln1204_fu_518_p1[14] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd14;
    end else if (sext_ln1204_fu_518_p1[15] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd15;
    end else if (sext_ln1204_fu_518_p1[16] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd16;
    end else if (sext_ln1204_fu_518_p1[17] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd17;
    end else if (sext_ln1204_fu_518_p1[18] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd18;
    end else if (sext_ln1204_fu_518_p1[19] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd19;
    end else if (sext_ln1204_fu_518_p1[20] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd20;
    end else if (sext_ln1204_fu_518_p1[21] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd21;
    end else if (sext_ln1204_fu_518_p1[22] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd22;
    end else if (sext_ln1204_fu_518_p1[23] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd23;
    end else if (sext_ln1204_fu_518_p1[24] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd24;
    end else if (sext_ln1204_fu_518_p1[25] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd25;
    end else if (sext_ln1204_fu_518_p1[26] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd26;
    end else if (sext_ln1204_fu_518_p1[27] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd27;
    end else if (sext_ln1204_fu_518_p1[28] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd28;
    end else if (sext_ln1204_fu_518_p1[29] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd29;
    end else if (sext_ln1204_fu_518_p1[30] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd30;
    end else if (sext_ln1204_fu_518_p1[31] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd31;
    end else if (sext_ln1204_fu_518_p1[32] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd32;
    end else if (sext_ln1204_fu_518_p1[33] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd33;
    end else if (sext_ln1204_fu_518_p1[34] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd34;
    end else if (sext_ln1204_fu_518_p1[35] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd35;
    end else if (sext_ln1204_fu_518_p1[36] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd36;
    end else if (sext_ln1204_fu_518_p1[37] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd37;
    end else if (sext_ln1204_fu_518_p1[38] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd38;
    end else if (sext_ln1204_fu_518_p1[39] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd39;
    end else if (sext_ln1204_fu_518_p1[40] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd40;
    end else if (sext_ln1204_fu_518_p1[41] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd41;
    end else if (sext_ln1204_fu_518_p1[42] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd42;
    end else if (sext_ln1204_fu_518_p1[43] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd43;
    end else if (sext_ln1204_fu_518_p1[44] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd44;
    end else if (sext_ln1204_fu_518_p1[45] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd45;
    end else if (sext_ln1204_fu_518_p1[46] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd46;
    end else if (sext_ln1204_fu_518_p1[47] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd47;
    end else if (sext_ln1204_fu_518_p1[48] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd48;
    end else if (sext_ln1204_fu_518_p1[49] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd49;
    end else if (sext_ln1204_fu_518_p1[50] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd50;
    end else if (sext_ln1204_fu_518_p1[51] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd51;
    end else if (sext_ln1204_fu_518_p1[52] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd52;
    end else if (sext_ln1204_fu_518_p1[53] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd53;
    end else if (sext_ln1204_fu_518_p1[54] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd54;
    end else if (sext_ln1204_fu_518_p1[55] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd55;
    end else if (sext_ln1204_fu_518_p1[56] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd56;
    end else if (sext_ln1204_fu_518_p1[57] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd57;
    end else if (sext_ln1204_fu_518_p1[58] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd58;
    end else if (sext_ln1204_fu_518_p1[59] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd59;
    end else if (sext_ln1204_fu_518_p1[60] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd60;
    end else if (sext_ln1204_fu_518_p1[61] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd61;
    end else if (sext_ln1204_fu_518_p1[62] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd62;
    end else if (sext_ln1204_fu_518_p1[63] == 1'b1) begin
        tmp_s_fu_522_p3 = 64'd63;
    end else begin
        tmp_s_fu_522_p3 = 64'd64;
    end
end

assign trunc_ln214_fu_1428_p1 = newexp_fu_1331_p2[10:0];

assign trunc_ln628_fu_369_p1 = addr_fu_346_p3[6:0];

assign ush_fu_591_p3 = ((isNeg_reg_1603[0:0] == 1'b1) ? sub_ln1512_fu_585_p2 : sext_ln1535_fu_582_p1);

assign xor_ln1027_fu_459_p2 = (closepath_reg_1530_pp0_iter3_reg ^ 1'd1);

assign xor_ln271_fu_677_p2 = (tmp_3_fu_656_p10 ^ 1'd1);

assign xor_ln300_fu_1470_p2 = (1'd1 ^ and_ln300_1_fu_1466_p2);

assign xor_ln307_fu_814_p2 = (do_cos_read_reg_1509_pp0_iter6_reg ^ 1'd1);

assign xor_ln311_fu_824_p2 = (icmp_ln1019_2_reg_1615_pp0_iter6_reg ^ 1'd1);

assign xor_ln453_fu_1246_p2 = (icmp_ln453_1_fu_1222_p2 ^ 1'd1);

assign zext_ln1271_fu_647_p1 = B_trunc_reg_1633;

assign zext_ln1347_1_fu_1010_p1 = rhs_4_reg_1762;

assign zext_ln1347_fu_1002_p1 = trunc_ln2_reg_1772;

assign zext_ln1454_fu_538_p1 = Mx_zeros_fu_530_p1;

assign zext_ln1488_1_fu_1191_p1 = tmp_8_fu_1125_p3;

assign zext_ln1488_2_fu_1212_p1 = tmp_8_1_fu_1143_p3;

assign zext_ln1488_3_fu_1311_p1 = tmp_8_2_reg_1823;

assign zext_ln1488_4_fu_1319_p1 = tmp_8_3_reg_1828;

assign zext_ln1488_fu_602_p1 = $unsigned(sext_ln1488_fu_598_p1);

assign zext_ln541_fu_714_p1 = p_Result_16_fu_707_p3;

assign zext_ln668_fu_364_p1 = tmp_fu_354_p4;

assign zext_ln818_fu_843_p1 = B_squared_V_reg_1651;

assign zext_ln841_fu_534_p1 = Mx_zeros_fu_530_p1;

assign zext_ln930_fu_379_p1 = trunc_ln628_reg_1547;

always @ (posedge ap_clk) begin
    zext_ln1271_reg_1638[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln1271_reg_1638_pp0_iter7_reg[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln541_reg_1657[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //dft_sin_or_cos_double_s
