// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lu_lu,hls_ip_2022_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.330000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2977,HLS_SYN_LUT=3040,HLS_VERSION=2022_2_2}" *)

module lu (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_we0,
        A_d0,
        A_q0,
        A_address1,
        A_ce1,
        A_q1
);

parameter    ap_ST_fsm_state1 = 30'd1;
parameter    ap_ST_fsm_state2 = 30'd2;
parameter    ap_ST_fsm_state3 = 30'd4;
parameter    ap_ST_fsm_state4 = 30'd8;
parameter    ap_ST_fsm_state5 = 30'd16;
parameter    ap_ST_fsm_state6 = 30'd32;
parameter    ap_ST_fsm_state7 = 30'd64;
parameter    ap_ST_fsm_state8 = 30'd128;
parameter    ap_ST_fsm_state9 = 30'd256;
parameter    ap_ST_fsm_state10 = 30'd512;
parameter    ap_ST_fsm_state11 = 30'd1024;
parameter    ap_ST_fsm_state12 = 30'd2048;
parameter    ap_ST_fsm_state13 = 30'd4096;
parameter    ap_ST_fsm_state14 = 30'd8192;
parameter    ap_ST_fsm_state15 = 30'd16384;
parameter    ap_ST_fsm_state16 = 30'd32768;
parameter    ap_ST_fsm_state17 = 30'd65536;
parameter    ap_ST_fsm_state18 = 30'd131072;
parameter    ap_ST_fsm_state19 = 30'd262144;
parameter    ap_ST_fsm_state20 = 30'd524288;
parameter    ap_ST_fsm_state21 = 30'd1048576;
parameter    ap_ST_fsm_state22 = 30'd2097152;
parameter    ap_ST_fsm_state23 = 30'd4194304;
parameter    ap_ST_fsm_state24 = 30'd8388608;
parameter    ap_ST_fsm_state25 = 30'd16777216;
parameter    ap_ST_fsm_state26 = 30'd33554432;
parameter    ap_ST_fsm_state27 = 30'd67108864;
parameter    ap_ST_fsm_state28 = 30'd134217728;
parameter    ap_ST_fsm_state29 = 30'd268435456;
parameter    ap_ST_fsm_state30 = 30'd536870912;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] A_address0;
output   A_ce0;
output   A_we0;
output  [63:0] A_d0;
input  [63:0] A_q0;
output  [10:0] A_address1;
output   A_ce1;
input  [63:0] A_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] A_address0;
reg A_ce0;
reg A_we0;
reg[63:0] A_d0;
reg[10:0] A_address1;
reg A_ce1;

(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] j_2_reg_284;
wire    ap_CS_fsm_state2;
wire   [5:0] add_ln10_fu_159_p2;
reg   [5:0] add_ln10_reg_293;
wire   [10:0] add_ln15_fu_185_p2;
reg   [10:0] add_ln15_reg_298;
wire   [0:0] icmp_ln10_fu_153_p2;
wire   [63:0] zext_ln11_fu_191_p1;
reg   [63:0] zext_ln11_reg_305;
wire    ap_CS_fsm_state3;
wire   [11:0] add_ln11_1_fu_195_p2;
reg   [11:0] add_ln11_1_reg_310;
wire   [5:0] add_ln11_fu_206_p2;
reg   [5:0] add_ln11_reg_318;
wire   [10:0] add_ln15_1_fu_216_p2;
reg   [10:0] add_ln15_1_reg_323;
wire   [0:0] icmp_ln11_fu_201_p2;
wire   [10:0] mul_ln17_fu_232_p2;
reg   [10:0] mul_ln17_reg_329;
reg   [10:0] A_addr_reg_334;
wire    ap_CS_fsm_state5;
reg   [63:0] A_load_reg_344;
wire    ap_CS_fsm_state6;
reg   [63:0] A_load_1_reg_349;
wire    ap_CS_fsm_state7;
wire   [63:0] grp_fu_136_p2;
reg   [63:0] div_reg_364;
wire    ap_CS_fsm_state28;
wire    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start;
wire    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_done;
wire    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_idle;
wire    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_ready;
wire   [10:0] grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address0;
wire    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce0;
wire    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_we0;
wire   [63:0] grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_d0;
wire   [10:0] grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address1;
wire    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce1;
wire    grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start;
wire    grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_done;
wire    grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_idle;
wire    grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_ready;
wire   [10:0] grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_address0;
wire    grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_ce0;
wire    grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_we0;
wire   [63:0] grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_d0;
reg   [5:0] j_reg_91;
wire    ap_CS_fsm_state29;
reg   [11:0] phi_mul_reg_103;
reg    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start_reg;
wire    ap_CS_fsm_state4;
reg    grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start_reg;
wire    ap_CS_fsm_state30;
wire   [63:0] zext_ln15_2_fu_254_p1;
reg   [5:0] i_fu_58;
reg   [5:0] indvars_iv3_fu_62;
wire   [5:0] add_ln10_1_fu_239_p2;
wire   [63:0] bitcast_ln15_2_fu_266_p1;
wire   [63:0] grp_fu_136_p0;
wire   [63:0] grp_fu_136_p1;
wire   [8:0] tmp_1_fu_173_p3;
wire   [10:0] tmp_fu_165_p3;
wire   [10:0] zext_ln15_fu_181_p1;
wire   [10:0] zext_ln15_1_fu_212_p1;
wire   [5:0] mul_ln17_fu_232_p0;
wire   [5:0] mul_ln17_fu_232_p1;
reg   [29:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
reg    ap_ST_fsm_state30_blk;
wire   [10:0] mul_ln17_fu_232_p00;
wire   [10:0] mul_ln17_fu_232_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 30'd1;
#0 grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start_reg = 1'b0;
#0 grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start_reg = 1'b0;
end

lu_lu_Pipeline_VITIS_LOOP_12_3 grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start),
    .ap_done(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_done),
    .ap_idle(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_idle),
    .ap_ready(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_ready),
    .A_address0(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address0),
    .A_ce0(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce0),
    .A_we0(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_we0),
    .A_d0(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_d0),
    .A_q0(A_q0),
    .A_address1(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address1),
    .A_ce1(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce1),
    .A_q1(A_q1),
    .add_ln15_1(add_ln15_1_reg_323),
    .j(j_reg_91),
    .add_ln15(add_ln15_reg_298),
    .zext_ln11(j_reg_91)
);

lu_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5 grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start),
    .ap_done(grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_done),
    .ap_idle(grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_idle),
    .ap_ready(grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_ready),
    .zext_ln8(j_2_reg_284),
    .mul_ln17(mul_ln17_reg_329),
    .j_3(j_2_reg_284),
    .add_ln15(add_ln15_reg_298),
    .A_address0(grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_address0),
    .A_ce0(grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_ce0),
    .A_we0(grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_we0),
    .A_d0(grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_d0),
    .A_q0(A_q0)
);

lu_ddiv_64ns_64ns_64_22_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_22_no_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_136_p0),
    .din1(grp_fu_136_p1),
    .ce(1'b1),
    .dout(grp_fu_136_p2)
);

lu_mul_6ns_6ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 11 ))
mul_6ns_6ns_11_1_1_U18(
    .din0(mul_ln17_fu_232_p0),
    .din1(mul_ln17_fu_232_p1),
    .dout(mul_ln17_fu_232_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln11_fu_201_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start_reg <= 1'b1;
        end else if ((grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_ready == 1'b1)) begin
            grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln11_fu_201_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start_reg <= 1'b1;
        end else if ((grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_ready == 1'b1)) begin
            grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_58 <= 6'd0;
    end else if (((icmp_ln11_fu_201_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_fu_58 <= add_ln10_reg_293;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv3_fu_62 <= 6'd40;
    end else if (((icmp_ln11_fu_201_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvars_iv3_fu_62 <= add_ln10_1_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_153_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_91 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        j_reg_91 <= add_ln11_reg_318;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_153_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_103 <= 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        phi_mul_reg_103 <= add_ln11_1_reg_310;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        A_addr_reg_334 <= zext_ln15_2_fu_254_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        A_load_1_reg_349 <= A_q0;
        A_load_reg_344 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln10_reg_293 <= add_ln10_fu_159_p2;
        j_2_reg_284 <= i_fu_58;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln11_1_reg_310 <= add_ln11_1_fu_195_p2;
        add_ln11_reg_318 <= add_ln11_fu_206_p2;
        zext_ln11_reg_305[11 : 0] <= zext_ln11_fu_191_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_201_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln15_1_reg_323 <= add_ln15_1_fu_216_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_153_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln15_reg_298[10 : 3] <= add_ln15_fu_185_p2[10 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        div_reg_364 <= grp_fu_136_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_201_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        mul_ln17_reg_329 <= mul_ln17_fu_232_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        A_address0 = A_addr_reg_334;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        A_address0 = zext_ln15_2_fu_254_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        A_address0 = grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_address0 = grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address0;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        A_address1 = zext_ln11_reg_305;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_address1 = grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address1;
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state5))) begin
        A_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        A_ce0 = grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_ce0 = grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce0;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        A_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_ce1 = grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        A_d0 = bitcast_ln15_2_fu_266_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        A_d0 = grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_d0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_d0 = grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_d0;
    end else begin
        A_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        A_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        A_we0 = grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_we0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_we0 = grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_we0;
    end else begin
        A_we0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_done == 1'b0)) begin
        ap_ST_fsm_state30_blk = 1'b1;
    end else begin
        ap_ST_fsm_state30_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln10_fu_153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln10_fu_153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln10_fu_153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln11_fu_201_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_1_fu_239_p2 = ($signed(indvars_iv3_fu_62) + $signed(6'd63));

assign add_ln10_fu_159_p2 = (i_fu_58 + 6'd1);

assign add_ln11_1_fu_195_p2 = (phi_mul_reg_103 + 12'd41);

assign add_ln11_fu_206_p2 = (j_reg_91 + 6'd1);

assign add_ln15_1_fu_216_p2 = (add_ln15_reg_298 + zext_ln15_1_fu_212_p1);

assign add_ln15_fu_185_p2 = (tmp_fu_165_p3 + zext_ln15_fu_181_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign bitcast_ln15_2_fu_266_p1 = div_reg_364;

assign grp_fu_136_p0 = A_load_1_reg_349;

assign grp_fu_136_p1 = A_load_reg_344;

assign grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start = grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start_reg;

assign grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start = grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start_reg;

assign icmp_ln10_fu_153_p2 = ((i_fu_58 == 6'd40) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_201_p2 = ((j_reg_91 == i_fu_58) ? 1'b1 : 1'b0);

assign mul_ln17_fu_232_p0 = mul_ln17_fu_232_p00;

assign mul_ln17_fu_232_p00 = indvars_iv3_fu_62;

assign mul_ln17_fu_232_p1 = mul_ln17_fu_232_p10;

assign mul_ln17_fu_232_p10 = i_fu_58;

assign tmp_1_fu_173_p3 = {{i_fu_58}, {3'd0}};

assign tmp_fu_165_p3 = {{i_fu_58}, {5'd0}};

assign zext_ln11_fu_191_p1 = phi_mul_reg_103;

assign zext_ln15_1_fu_212_p1 = j_reg_91;

assign zext_ln15_2_fu_254_p1 = add_ln15_1_reg_323;

assign zext_ln15_fu_181_p1 = tmp_1_fu_173_p3;

always @ (posedge ap_clk) begin
    add_ln15_reg_298[2:0] <= 3'b000;
    zext_ln11_reg_305[63:12] <= 52'b0000000000000000000000000000000000000000000000000000;
end

endmodule //lu
