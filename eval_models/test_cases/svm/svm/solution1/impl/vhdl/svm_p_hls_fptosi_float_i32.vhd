-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity svm_p_hls_fptosi_float_i32 is
port (
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of svm_p_hls_fptosi_float_i32 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal data_V_fu_44_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_1_fu_66_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_fu_70_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal xs_exp_V_fu_56_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_fu_84_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_fu_88_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_fu_102_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_94_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_fu_108_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_fu_112_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_fu_120_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_80_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_fu_124_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_fu_128_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_fu_140_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_134_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_fu_148_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_152_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_fu_162_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_48_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_2_fu_170_p2 : STD_LOGIC_VECTOR (31 downto 0);


begin



    add_ln346_fu_88_p2 <= std_logic_vector(unsigned(zext_ln346_fu_84_p1) + unsigned(ap_const_lv9_181));
    ap_ready <= ap_const_logic_1;
    ap_return <= 
        result_V_2_fu_170_p2 when (p_Result_s_fu_48_p3(0) = '1') else 
        val_fu_162_p3;
    data_V_fu_44_p1 <= x;
    isNeg_fu_94_p3 <= add_ln346_fu_88_p2(8 downto 8);
    mantissa_fu_70_p4 <= ((ap_const_lv1_1 & p_Result_1_fu_66_p1) & ap_const_lv1_0);
    p_Result_1_fu_66_p1 <= data_V_fu_44_p1(23 - 1 downto 0);
    p_Result_s_fu_48_p3 <= data_V_fu_44_p1(31 downto 31);
    r_V_1_fu_134_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_80_p1),to_integer(unsigned('0' & zext_ln1488_fu_124_p1(31-1 downto 0)))));
    r_V_fu_128_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_80_p1),to_integer(unsigned('0' & zext_ln1488_fu_124_p1(31-1 downto 0)))));
    result_V_2_fu_170_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_fu_162_p3));
        sext_ln1488_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_112_p3),32));

        sext_ln1512_fu_108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_fu_102_p2),9));

    sub_ln1512_fu_102_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_fu_56_p4));
    tmp_1_fu_152_p4 <= r_V_1_fu_134_p2(55 downto 24);
    tmp_fu_140_p3 <= r_V_fu_128_p2(24 downto 24);
    ush_fu_112_p3 <= 
        sext_ln1512_fu_108_p1 when (isNeg_fu_94_p3(0) = '1') else 
        add_ln346_fu_88_p2;
    val_fu_162_p3 <= 
        zext_ln818_fu_148_p1 when (isNeg_fu_94_p3(0) = '1') else 
        tmp_1_fu_152_p4;
    xs_exp_V_fu_56_p4 <= data_V_fu_44_p1(30 downto 23);
    zext_ln1488_fu_124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_fu_120_p1),79));
    zext_ln15_fu_80_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_70_p4),79));
    zext_ln346_fu_84_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_fu_56_p4),9));
    zext_ln818_fu_148_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_140_p3),32));
end behav;
