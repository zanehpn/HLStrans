// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module latnrm_latnrm_Pipeline_VITIS_LOOP_57_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        internal_state_1,
        internal_state_1_ap_vld,
        internal_state_2,
        internal_state_2_ap_vld,
        internal_state_3,
        internal_state_3_ap_vld,
        int_state_V_address0,
        int_state_V_ce0,
        int_state_V_q0,
        int_state_V_address1,
        int_state_V_ce1,
        int_state_V_q1,
        internal_state_0,
        internal_state_0_ap_vld,
        internal_state_4,
        internal_state_4_ap_vld,
        internal_state_8,
        internal_state_8_ap_vld,
        internal_state_12,
        internal_state_12_ap_vld,
        internal_state_16,
        internal_state_16_ap_vld,
        internal_state_20,
        internal_state_20_ap_vld,
        internal_state_24,
        internal_state_24_ap_vld,
        internal_state_28,
        internal_state_28_ap_vld,
        internal_state_32,
        internal_state_32_ap_vld,
        internal_state_5,
        internal_state_5_ap_vld,
        internal_state_6,
        internal_state_6_ap_vld,
        internal_state_7,
        internal_state_7_ap_vld,
        internal_state_9,
        internal_state_9_ap_vld,
        internal_state_10,
        internal_state_10_ap_vld,
        internal_state_11,
        internal_state_11_ap_vld,
        internal_state_13,
        internal_state_13_ap_vld,
        internal_state_14,
        internal_state_14_ap_vld,
        internal_state_15,
        internal_state_15_ap_vld,
        internal_state_17,
        internal_state_17_ap_vld,
        internal_state_18,
        internal_state_18_ap_vld,
        internal_state_19,
        internal_state_19_ap_vld,
        internal_state_21,
        internal_state_21_ap_vld,
        internal_state_22,
        internal_state_22_ap_vld,
        internal_state_23,
        internal_state_23_ap_vld,
        internal_state_25,
        internal_state_25_ap_vld,
        internal_state_26,
        internal_state_26_ap_vld,
        internal_state_27,
        internal_state_27_ap_vld,
        internal_state_29,
        internal_state_29_ap_vld,
        internal_state_30,
        internal_state_30_ap_vld,
        internal_state_31,
        internal_state_31_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] internal_state_1;
output   internal_state_1_ap_vld;
output  [31:0] internal_state_2;
output   internal_state_2_ap_vld;
output  [31:0] internal_state_3;
output   internal_state_3_ap_vld;
output  [5:0] int_state_V_address0;
output   int_state_V_ce0;
input  [31:0] int_state_V_q0;
output  [5:0] int_state_V_address1;
output   int_state_V_ce1;
input  [31:0] int_state_V_q1;
output  [31:0] internal_state_0;
output   internal_state_0_ap_vld;
output  [31:0] internal_state_4;
output   internal_state_4_ap_vld;
output  [31:0] internal_state_8;
output   internal_state_8_ap_vld;
output  [31:0] internal_state_12;
output   internal_state_12_ap_vld;
output  [31:0] internal_state_16;
output   internal_state_16_ap_vld;
output  [31:0] internal_state_20;
output   internal_state_20_ap_vld;
output  [31:0] internal_state_24;
output   internal_state_24_ap_vld;
output  [31:0] internal_state_28;
output   internal_state_28_ap_vld;
output  [31:0] internal_state_32;
output   internal_state_32_ap_vld;
output  [31:0] internal_state_5;
output   internal_state_5_ap_vld;
output  [31:0] internal_state_6;
output   internal_state_6_ap_vld;
output  [31:0] internal_state_7;
output   internal_state_7_ap_vld;
output  [31:0] internal_state_9;
output   internal_state_9_ap_vld;
output  [31:0] internal_state_10;
output   internal_state_10_ap_vld;
output  [31:0] internal_state_11;
output   internal_state_11_ap_vld;
output  [31:0] internal_state_13;
output   internal_state_13_ap_vld;
output  [31:0] internal_state_14;
output   internal_state_14_ap_vld;
output  [31:0] internal_state_15;
output   internal_state_15_ap_vld;
output  [31:0] internal_state_17;
output   internal_state_17_ap_vld;
output  [31:0] internal_state_18;
output   internal_state_18_ap_vld;
output  [31:0] internal_state_19;
output   internal_state_19_ap_vld;
output  [31:0] internal_state_21;
output   internal_state_21_ap_vld;
output  [31:0] internal_state_22;
output   internal_state_22_ap_vld;
output  [31:0] internal_state_23;
output   internal_state_23_ap_vld;
output  [31:0] internal_state_25;
output   internal_state_25_ap_vld;
output  [31:0] internal_state_26;
output   internal_state_26_ap_vld;
output  [31:0] internal_state_27;
output   internal_state_27_ap_vld;
output  [31:0] internal_state_29;
output   internal_state_29_ap_vld;
output  [31:0] internal_state_30;
output   internal_state_30_ap_vld;
output  [31:0] internal_state_31;
output   internal_state_31_ap_vld;

reg ap_idle;
reg internal_state_1_ap_vld;
reg internal_state_2_ap_vld;
reg internal_state_3_ap_vld;
reg[5:0] int_state_V_address0;
reg int_state_V_ce0;
reg[5:0] int_state_V_address1;
reg int_state_V_ce1;
reg internal_state_0_ap_vld;
reg internal_state_4_ap_vld;
reg internal_state_8_ap_vld;
reg internal_state_12_ap_vld;
reg internal_state_16_ap_vld;
reg internal_state_20_ap_vld;
reg internal_state_24_ap_vld;
reg internal_state_28_ap_vld;
reg internal_state_32_ap_vld;
reg internal_state_5_ap_vld;
reg internal_state_6_ap_vld;
reg internal_state_7_ap_vld;
reg internal_state_9_ap_vld;
reg internal_state_10_ap_vld;
reg internal_state_11_ap_vld;
reg internal_state_13_ap_vld;
reg internal_state_14_ap_vld;
reg internal_state_15_ap_vld;
reg internal_state_17_ap_vld;
reg internal_state_18_ap_vld;
reg internal_state_19_ap_vld;
reg internal_state_21_ap_vld;
reg internal_state_22_ap_vld;
reg internal_state_23_ap_vld;
reg internal_state_25_ap_vld;
reg internal_state_26_ap_vld;
reg internal_state_27_ap_vld;
reg internal_state_29_ap_vld;
reg internal_state_30_ap_vld;
reg internal_state_31_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln57_1_reg_1590;
reg   [0:0] icmp_ln57_reg_1581;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [31:0] grp_fu_460_p3;
reg   [31:0] reg_544;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_486_p2;
reg   [31:0] reg_548;
wire   [31:0] grp_fu_512_p3;
reg   [31:0] reg_552;
wire   [31:0] grp_fu_538_p2;
reg   [31:0] reg_556;
reg   [5:0] j_1_reg_1574;
reg   [5:0] j_1_reg_1574_pp0_iter1_reg;
wire   [0:0] icmp_ln57_fu_592_p2;
reg   [0:0] icmp_ln57_reg_1581_pp0_iter1_reg;
wire   [0:0] icmp_ln57_1_fu_614_p2;
reg   [0:0] icmp_ln57_1_reg_1590_pp0_iter1_reg;
wire   [0:0] grp_fu_440_p2;
reg   [0:0] icmp_ln1090_reg_1599;
wire   [0:0] grp_fu_446_p3;
reg   [0:0] p_Result_31_reg_1604;
wire   [4:0] trunc_ln1102_fu_620_p1;
reg   [4:0] trunc_ln1102_reg_1609;
wire   [7:0] trunc_ln1098_fu_624_p1;
reg   [7:0] trunc_ln1098_reg_1614;
wire   [0:0] grp_fu_492_p2;
reg   [0:0] icmp_ln1090_1_reg_1619;
wire   [0:0] grp_fu_498_p3;
reg   [0:0] p_Result_22_reg_1624;
wire   [4:0] trunc_ln1102_1_fu_628_p1;
reg   [4:0] trunc_ln1102_1_reg_1629;
wire   [7:0] trunc_ln1098_1_fu_632_p1;
reg   [7:0] trunc_ln1098_1_reg_1634;
reg   [62:0] m_23_reg_1649;
reg   [0:0] p_Result_2_reg_1654;
reg   [62:0] m_20_reg_1659;
reg   [0:0] p_Result_8_reg_1664;
reg   [0:0] icmp_ln1090_2_reg_1669;
reg   [0:0] p_Result_25_reg_1674;
wire   [31:0] lsb_index_2_fu_992_p2;
reg   [31:0] lsb_index_2_reg_1679;
reg   [30:0] tmp_8_reg_1686;
wire   [4:0] sub_ln1102_2_fu_1012_p2;
reg   [4:0] sub_ln1102_2_reg_1691;
wire   [7:0] trunc_ln1098_2_fu_1018_p1;
reg   [7:0] trunc_ln1098_2_reg_1696;
reg   [0:0] icmp_ln1090_3_reg_1701;
reg   [0:0] p_Result_28_reg_1706;
wire   [31:0] lsb_index_3_fu_1022_p2;
reg   [31:0] lsb_index_3_reg_1711;
reg   [30:0] tmp_12_reg_1718;
wire   [4:0] sub_ln1102_3_fu_1042_p2;
reg   [4:0] sub_ln1102_3_reg_1723;
wire   [7:0] trunc_ln1098_3_fu_1048_p1;
reg   [7:0] trunc_ln1098_3_reg_1728;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] trunc_ln59_cast_fu_598_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln57_fu_609_p1;
wire   [63:0] zext_ln1090_fu_641_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1090_1_fu_651_p1;
reg   [5:0] j_fu_164;
wire   [5:0] add_ln57_fu_656_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_j_1;
wire   [31:0] select_ln59_fu_1096_p3;
wire    ap_block_pp0_stage1_01001;
wire   [31:0] select_ln59_1_fu_1156_p3;
wire   [31:0] select_ln59_2_fu_1354_p3;
wire   [31:0] select_ln59_3_fu_1552_p3;
wire   [31:0] grp_fu_454_p2;
reg   [31:0] grp_fu_468_p4;
reg   [31:0] grp_fu_478_p3;
wire   [31:0] grp_fu_506_p2;
reg   [31:0] grp_fu_520_p4;
reg   [31:0] grp_fu_530_p3;
wire   [5:0] or_ln57_fu_603_p2;
wire   [5:0] or_ln57_1_fu_636_p2;
wire   [5:0] or_ln57_2_fu_646_p2;
wire   [31:0] lsb_index_fu_666_p2;
wire   [30:0] tmp_fu_672_p4;
wire   [4:0] sub_ln1102_fu_688_p2;
wire   [31:0] zext_ln1102_fu_693_p1;
wire   [31:0] lshr_ln1102_fu_697_p2;
wire   [31:0] p_Result_s_fu_703_p2;
wire   [0:0] icmp_ln1101_fu_682_p2;
wire   [0:0] icmp_ln1102_fu_709_p2;
wire   [0:0] tmp_1_fu_721_p3;
wire   [0:0] p_Result_1_fu_735_p3;
wire   [0:0] xor_ln1104_fu_729_p2;
wire   [0:0] and_ln1104_fu_743_p2;
wire   [0:0] a_fu_715_p2;
wire   [0:0] or_ln1104_2_fu_749_p2;
wire   [31:0] grp_fu_560_p2;
wire   [63:0] zext_ln1112_fu_763_p1;
wire   [63:0] zext_ln1113_fu_773_p1;
wire   [31:0] grp_fu_566_p2;
wire   [63:0] zext_ln1114_fu_783_p1;
wire   [0:0] icmp_ln1113_fu_767_p2;
wire   [63:0] lshr_ln1113_fu_777_p2;
wire   [63:0] shl_ln1114_fu_787_p2;
wire   [1:0] or_ln_fu_755_p3;
wire   [63:0] m_2_fu_793_p3;
wire   [63:0] zext_ln1116_fu_801_p1;
wire   [63:0] m_3_fu_805_p2;
wire   [31:0] lsb_index_1_fu_829_p2;
wire   [30:0] tmp_4_fu_835_p4;
wire   [4:0] sub_ln1102_1_fu_851_p2;
wire   [31:0] zext_ln1102_1_fu_856_p1;
wire   [31:0] lshr_ln1102_1_fu_860_p2;
wire   [31:0] p_Result_6_fu_866_p2;
wire   [0:0] icmp_ln1101_1_fu_845_p2;
wire   [0:0] icmp_ln1102_1_fu_872_p2;
wire   [0:0] tmp_5_fu_884_p3;
wire   [0:0] p_Result_7_fu_898_p3;
wire   [0:0] xor_ln1104_1_fu_892_p2;
wire   [0:0] and_ln1104_1_fu_906_p2;
wire   [0:0] a_1_fu_878_p2;
wire   [0:0] or_ln1104_fu_912_p2;
wire   [31:0] grp_fu_572_p2;
wire   [63:0] zext_ln1112_1_fu_926_p1;
wire   [63:0] zext_ln1113_1_fu_936_p1;
wire   [31:0] grp_fu_578_p2;
wire   [63:0] zext_ln1114_1_fu_946_p1;
wire   [0:0] icmp_ln1113_1_fu_930_p2;
wire   [63:0] lshr_ln1113_1_fu_940_p2;
wire   [63:0] shl_ln1114_1_fu_950_p2;
wire   [1:0] or_ln1104_1_fu_918_p3;
wire   [63:0] m_6_fu_956_p3;
wire   [63:0] zext_ln1116_1_fu_964_p1;
wire   [63:0] m_7_fu_968_p2;
wire   [4:0] trunc_ln1102_2_fu_1008_p1;
wire   [4:0] trunc_ln1102_3_fu_1038_p1;
wire   [7:0] sub_ln1119_fu_1062_p2;
wire   [7:0] select_ln1098_fu_1055_p3;
wire   [7:0] add_ln1124_fu_1067_p2;
wire   [63:0] zext_ln1117_fu_1052_p1;
wire   [8:0] tmp_s_fu_1073_p3;
wire   [63:0] p_Result_33_fu_1080_p5;
wire   [31:0] LD_fu_1092_p1;
wire   [7:0] sub_ln1119_1_fu_1122_p2;
wire   [7:0] select_ln1098_1_fu_1115_p3;
wire   [7:0] add_ln1124_1_fu_1127_p2;
wire   [63:0] zext_ln1117_1_fu_1112_p1;
wire   [8:0] tmp_2_fu_1133_p3;
wire   [63:0] p_Result_24_fu_1140_p5;
wire   [31:0] LD_1_fu_1152_p1;
wire   [31:0] zext_ln1102_2_fu_1176_p1;
wire   [31:0] lshr_ln1102_2_fu_1179_p2;
wire   [31:0] p_Result_12_fu_1185_p2;
wire   [0:0] icmp_ln1101_2_fu_1171_p2;
wire   [0:0] icmp_ln1102_2_fu_1191_p2;
wire   [0:0] tmp_9_fu_1203_p3;
wire   [0:0] p_Result_13_fu_1216_p3;
wire   [0:0] xor_ln1104_2_fu_1210_p2;
wire   [0:0] and_ln1104_2_fu_1223_p2;
wire   [0:0] a_2_fu_1197_p2;
wire   [0:0] or_ln1104_5_fu_1229_p2;
wire   [63:0] zext_ln1112_2_fu_1243_p1;
wire   [63:0] zext_ln1113_2_fu_1252_p1;
wire   [63:0] zext_ln1114_2_fu_1262_p1;
wire   [0:0] icmp_ln1113_2_fu_1247_p2;
wire   [63:0] lshr_ln1113_2_fu_1256_p2;
wire   [63:0] shl_ln1114_2_fu_1266_p2;
wire   [1:0] or_ln1104_3_fu_1235_p3;
wire   [63:0] m_11_fu_1272_p3;
wire   [63:0] zext_ln1116_2_fu_1280_p1;
wire   [63:0] m_12_fu_1284_p2;
wire   [62:0] m_21_fu_1290_p4;
wire   [0:0] p_Result_14_fu_1304_p3;
wire   [7:0] sub_ln1119_2_fu_1320_p2;
wire   [7:0] select_ln1098_2_fu_1312_p3;
wire   [7:0] add_ln1124_2_fu_1325_p2;
wire   [63:0] zext_ln1117_2_fu_1300_p1;
wire   [8:0] tmp_3_fu_1331_p3;
wire   [63:0] p_Result_27_fu_1338_p5;
wire   [31:0] LD_2_fu_1350_p1;
wire   [31:0] zext_ln1102_3_fu_1374_p1;
wire   [31:0] lshr_ln1102_3_fu_1377_p2;
wire   [31:0] p_Result_18_fu_1383_p2;
wire   [0:0] icmp_ln1101_3_fu_1369_p2;
wire   [0:0] icmp_ln1102_3_fu_1389_p2;
wire   [0:0] tmp_13_fu_1401_p3;
wire   [0:0] p_Result_19_fu_1414_p3;
wire   [0:0] xor_ln1104_3_fu_1408_p2;
wire   [0:0] and_ln1104_3_fu_1421_p2;
wire   [0:0] a_3_fu_1395_p2;
wire   [0:0] or_ln1104_6_fu_1427_p2;
wire   [63:0] zext_ln1112_3_fu_1441_p1;
wire   [63:0] zext_ln1113_3_fu_1450_p1;
wire   [63:0] zext_ln1114_3_fu_1460_p1;
wire   [0:0] icmp_ln1113_3_fu_1445_p2;
wire   [63:0] lshr_ln1113_3_fu_1454_p2;
wire   [63:0] shl_ln1114_3_fu_1464_p2;
wire   [1:0] or_ln1104_4_fu_1433_p3;
wire   [63:0] m_16_fu_1470_p3;
wire   [63:0] zext_ln1116_3_fu_1478_p1;
wire   [63:0] m_17_fu_1482_p2;
wire   [62:0] m_22_fu_1488_p4;
wire   [0:0] p_Result_20_fu_1502_p3;
wire   [7:0] sub_ln1119_3_fu_1518_p2;
wire   [7:0] select_ln1098_3_fu_1510_p3;
wire   [7:0] add_ln1124_3_fu_1523_p2;
wire   [63:0] zext_ln1117_3_fu_1498_p1;
wire   [8:0] tmp_6_fu_1529_p3;
wire   [63:0] p_Result_30_fu_1536_p5;
wire   [31:0] LD_3_fu_1548_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [1:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

latnrm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
        if (((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage1_11001)) begin
            ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_164 <= 6'd0;
    end else if (((icmp_ln57_reg_1581 == 1'd1) & (icmp_ln57_1_reg_1590 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_fu_164 <= add_ln57_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_1581 == 1'd1) & (icmp_ln57_1_reg_1590 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1090_1_reg_1619 <= grp_fu_492_p2;
        p_Result_22_reg_1624 <= int_state_V_q0[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_1581 == 1'd1) & (icmp_ln57_1_reg_1590 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1090_2_reg_1669 <= grp_fu_440_p2;
        icmp_ln1090_3_reg_1701 <= grp_fu_492_p2;
        p_Result_25_reg_1674 <= int_state_V_q1[32'd31];
        p_Result_28_reg_1706 <= int_state_V_q0[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_1581 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln1090_reg_1599 <= grp_fu_440_p2;
        p_Result_31_reg_1604 <= int_state_V_q1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln57_fu_592_p2 == 1'd1))) begin
        icmp_ln57_1_reg_1590 <= icmp_ln57_1_fu_614_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln57_1_reg_1590_pp0_iter1_reg <= icmp_ln57_1_reg_1590;
        icmp_ln57_reg_1581 <= icmp_ln57_fu_592_p2;
        icmp_ln57_reg_1581_pp0_iter1_reg <= icmp_ln57_reg_1581;
        j_1_reg_1574 <= ap_sig_allocacmp_j_1;
        j_1_reg_1574_pp0_iter1_reg <= j_1_reg_1574;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_1581 == 1'd1) & (icmp_ln57_1_reg_1590 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lsb_index_2_reg_1679 <= lsb_index_2_fu_992_p2;
        lsb_index_3_reg_1711 <= lsb_index_3_fu_1022_p2;
        sub_ln1102_2_reg_1691 <= sub_ln1102_2_fu_1012_p2;
        sub_ln1102_3_reg_1723 <= sub_ln1102_3_fu_1042_p2;
        tmp_12_reg_1718 <= {{lsb_index_3_fu_1022_p2[31:1]}};
        tmp_8_reg_1686 <= {{lsb_index_2_fu_992_p2[31:1]}};
        trunc_ln1098_2_reg_1696 <= trunc_ln1098_2_fu_1018_p1;
        trunc_ln1098_3_reg_1728 <= trunc_ln1098_3_fu_1048_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_1581 == 1'd1) & (icmp_ln57_1_reg_1590 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1090_1_reg_1619 == 1'd0))) begin
        m_20_reg_1659 <= {{m_7_fu_968_p2[63:1]}};
        p_Result_8_reg_1664 <= m_7_fu_968_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_1581 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1090_reg_1599 == 1'd0))) begin
        m_23_reg_1649 <= {{m_3_fu_805_p2[63:1]}};
        p_Result_2_reg_1654 <= m_3_fu_805_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln57_reg_1581 == 1'd1) & (icmp_ln57_1_reg_1590 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln57_reg_1581 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_544 <= grp_fu_460_p3;
        reg_548 <= grp_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln57_reg_1581 == 1'd1) & (icmp_ln57_1_reg_1590 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln57_reg_1581 == 1'd1) & (icmp_ln57_1_reg_1590 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_552 <= grp_fu_512_p3;
        reg_556 <= grp_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_1581 == 1'd1) & (icmp_ln57_1_reg_1590 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln1098_1_reg_1634 <= trunc_ln1098_1_fu_632_p1;
        trunc_ln1102_1_reg_1629 <= trunc_ln1102_1_fu_628_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_reg_1581 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln1098_reg_1614 <= trunc_ln1098_fu_624_p1;
        trunc_ln1102_reg_1609 <= trunc_ln1102_fu_620_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & ((icmp_ln57_reg_1581 == 1'd0) | (icmp_ln57_1_reg_1590 == 1'd0)))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_1 = 6'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_164;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            int_state_V_address0 = zext_ln1090_1_fu_651_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            int_state_V_address0 = zext_ln57_fu_609_p1;
        end else begin
            int_state_V_address0 = 'bx;
        end
    end else begin
        int_state_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            int_state_V_address1 = zext_ln1090_fu_641_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            int_state_V_address1 = trunc_ln59_cast_fu_598_p1;
        end else begin
            int_state_V_address1 = 'bx;
        end
    end else begin
        int_state_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        int_state_V_ce0 = 1'b1;
    end else begin
        int_state_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        int_state_V_ce1 = 1'b1;
    end else begin
        int_state_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd0))) begin
        internal_state_0_ap_vld = 1'b1;
    end else begin
        internal_state_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd8))) begin
        internal_state_10_ap_vld = 1'b1;
    end else begin
        internal_state_10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd8))) begin
        internal_state_11_ap_vld = 1'b1;
    end else begin
        internal_state_11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd12))) begin
        internal_state_12_ap_vld = 1'b1;
    end else begin
        internal_state_12_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd12))) begin
        internal_state_13_ap_vld = 1'b1;
    end else begin
        internal_state_13_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd12))) begin
        internal_state_14_ap_vld = 1'b1;
    end else begin
        internal_state_14_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd12))) begin
        internal_state_15_ap_vld = 1'b1;
    end else begin
        internal_state_15_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd16))) begin
        internal_state_16_ap_vld = 1'b1;
    end else begin
        internal_state_16_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd16))) begin
        internal_state_17_ap_vld = 1'b1;
    end else begin
        internal_state_17_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd16))) begin
        internal_state_18_ap_vld = 1'b1;
    end else begin
        internal_state_18_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd16))) begin
        internal_state_19_ap_vld = 1'b1;
    end else begin
        internal_state_19_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd0))) begin
        internal_state_1_ap_vld = 1'b1;
    end else begin
        internal_state_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd20))) begin
        internal_state_20_ap_vld = 1'b1;
    end else begin
        internal_state_20_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd20))) begin
        internal_state_21_ap_vld = 1'b1;
    end else begin
        internal_state_21_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd20))) begin
        internal_state_22_ap_vld = 1'b1;
    end else begin
        internal_state_22_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd20))) begin
        internal_state_23_ap_vld = 1'b1;
    end else begin
        internal_state_23_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd24))) begin
        internal_state_24_ap_vld = 1'b1;
    end else begin
        internal_state_24_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd24))) begin
        internal_state_25_ap_vld = 1'b1;
    end else begin
        internal_state_25_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd24))) begin
        internal_state_26_ap_vld = 1'b1;
    end else begin
        internal_state_26_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd24))) begin
        internal_state_27_ap_vld = 1'b1;
    end else begin
        internal_state_27_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd28))) begin
        internal_state_28_ap_vld = 1'b1;
    end else begin
        internal_state_28_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~(j_1_reg_1574_pp0_iter1_reg == 6'd0) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd4) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd8) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd12) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd16) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd20) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd24) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1))) begin
        internal_state_29_ap_vld = 1'b1;
    end else begin
        internal_state_29_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd0))) begin
        internal_state_2_ap_vld = 1'b1;
    end else begin
        internal_state_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~(j_1_reg_1574_pp0_iter1_reg == 6'd0) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd4) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd8) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd12) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd16) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd20) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd24) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1))) begin
        internal_state_30_ap_vld = 1'b1;
    end else begin
        internal_state_30_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~(j_1_reg_1574_pp0_iter1_reg == 6'd0) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd4) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd8) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd12) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd16) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd20) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd24) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1))) begin
        internal_state_31_ap_vld = 1'b1;
    end else begin
        internal_state_31_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~(j_1_reg_1574_pp0_iter1_reg == 6'd0) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd4) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd8) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd12) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd16) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd20) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd24) & ~(j_1_reg_1574_pp0_iter1_reg == 6'd28) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1))) begin
        internal_state_32_ap_vld = 1'b1;
    end else begin
        internal_state_32_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd0))) begin
        internal_state_3_ap_vld = 1'b1;
    end else begin
        internal_state_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd4))) begin
        internal_state_4_ap_vld = 1'b1;
    end else begin
        internal_state_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd4))) begin
        internal_state_5_ap_vld = 1'b1;
    end else begin
        internal_state_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd4))) begin
        internal_state_6_ap_vld = 1'b1;
    end else begin
        internal_state_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd4))) begin
        internal_state_7_ap_vld = 1'b1;
    end else begin
        internal_state_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd8))) begin
        internal_state_8_ap_vld = 1'b1;
    end else begin
        internal_state_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln57_1_reg_1590_pp0_iter1_reg == 1'd1) & (icmp_ln57_reg_1581_pp0_iter1_reg == 1'd1) & (j_1_reg_1574_pp0_iter1_reg == 6'd8))) begin
        internal_state_9_ap_vld = 1'b1;
    end else begin
        internal_state_9_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_1_fu_1152_p1 = p_Result_24_fu_1140_p5[31:0];

assign LD_2_fu_1350_p1 = p_Result_27_fu_1338_p5[31:0];

assign LD_3_fu_1548_p1 = p_Result_30_fu_1536_p5[31:0];

assign LD_fu_1092_p1 = p_Result_33_fu_1080_p5[31:0];

assign a_1_fu_878_p2 = (icmp_ln1102_1_fu_872_p2 & icmp_ln1101_1_fu_845_p2);

assign a_2_fu_1197_p2 = (icmp_ln1102_2_fu_1191_p2 & icmp_ln1101_2_fu_1171_p2);

assign a_3_fu_1395_p2 = (icmp_ln1102_3_fu_1389_p2 & icmp_ln1101_3_fu_1369_p2);

assign a_fu_715_p2 = (icmp_ln1102_fu_709_p2 & icmp_ln1101_fu_682_p2);

assign add_ln1124_1_fu_1127_p2 = (sub_ln1119_1_fu_1122_p2 + select_ln1098_1_fu_1115_p3);

assign add_ln1124_2_fu_1325_p2 = (sub_ln1119_2_fu_1320_p2 + select_ln1098_2_fu_1312_p3);

assign add_ln1124_3_fu_1523_p2 = (sub_ln1119_3_fu_1518_p2 + select_ln1098_3_fu_1510_p3);

assign add_ln1124_fu_1067_p2 = (sub_ln1119_fu_1062_p2 + select_ln1098_fu_1055_p3);

assign add_ln57_fu_656_p2 = (j_1_reg_1574 + 6'd4);

assign and_ln1104_1_fu_906_p2 = (xor_ln1104_1_fu_892_p2 & p_Result_7_fu_898_p3);

assign and_ln1104_2_fu_1223_p2 = (xor_ln1104_2_fu_1210_p2 & p_Result_13_fu_1216_p3);

assign and_ln1104_3_fu_1421_p2 = (xor_ln1104_3_fu_1408_p2 & p_Result_19_fu_1414_p3);

assign and_ln1104_fu_743_p2 = (xor_ln1104_fu_729_p2 & p_Result_1_fu_735_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign grp_fu_440_p2 = ((int_state_V_q1 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_446_p3 = int_state_V_q1[32'd31];

assign grp_fu_454_p2 = (32'd0 - int_state_V_q1);

assign grp_fu_460_p3 = ((grp_fu_446_p3[0:0] == 1'b1) ? grp_fu_454_p2 : int_state_V_q1);

integer ap_tvar_int_0;

always @ (grp_fu_460_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            grp_fu_468_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            grp_fu_468_p4[ap_tvar_int_0] = grp_fu_460_p3[31 - ap_tvar_int_0];
        end
    end
end


always @ (grp_fu_468_p4) begin
    if (grp_fu_468_p4[0] == 1'b1) begin
        grp_fu_478_p3 = 32'd0;
    end else if (grp_fu_468_p4[1] == 1'b1) begin
        grp_fu_478_p3 = 32'd1;
    end else if (grp_fu_468_p4[2] == 1'b1) begin
        grp_fu_478_p3 = 32'd2;
    end else if (grp_fu_468_p4[3] == 1'b1) begin
        grp_fu_478_p3 = 32'd3;
    end else if (grp_fu_468_p4[4] == 1'b1) begin
        grp_fu_478_p3 = 32'd4;
    end else if (grp_fu_468_p4[5] == 1'b1) begin
        grp_fu_478_p3 = 32'd5;
    end else if (grp_fu_468_p4[6] == 1'b1) begin
        grp_fu_478_p3 = 32'd6;
    end else if (grp_fu_468_p4[7] == 1'b1) begin
        grp_fu_478_p3 = 32'd7;
    end else if (grp_fu_468_p4[8] == 1'b1) begin
        grp_fu_478_p3 = 32'd8;
    end else if (grp_fu_468_p4[9] == 1'b1) begin
        grp_fu_478_p3 = 32'd9;
    end else if (grp_fu_468_p4[10] == 1'b1) begin
        grp_fu_478_p3 = 32'd10;
    end else if (grp_fu_468_p4[11] == 1'b1) begin
        grp_fu_478_p3 = 32'd11;
    end else if (grp_fu_468_p4[12] == 1'b1) begin
        grp_fu_478_p3 = 32'd12;
    end else if (grp_fu_468_p4[13] == 1'b1) begin
        grp_fu_478_p3 = 32'd13;
    end else if (grp_fu_468_p4[14] == 1'b1) begin
        grp_fu_478_p3 = 32'd14;
    end else if (grp_fu_468_p4[15] == 1'b1) begin
        grp_fu_478_p3 = 32'd15;
    end else if (grp_fu_468_p4[16] == 1'b1) begin
        grp_fu_478_p3 = 32'd16;
    end else if (grp_fu_468_p4[17] == 1'b1) begin
        grp_fu_478_p3 = 32'd17;
    end else if (grp_fu_468_p4[18] == 1'b1) begin
        grp_fu_478_p3 = 32'd18;
    end else if (grp_fu_468_p4[19] == 1'b1) begin
        grp_fu_478_p3 = 32'd19;
    end else if (grp_fu_468_p4[20] == 1'b1) begin
        grp_fu_478_p3 = 32'd20;
    end else if (grp_fu_468_p4[21] == 1'b1) begin
        grp_fu_478_p3 = 32'd21;
    end else if (grp_fu_468_p4[22] == 1'b1) begin
        grp_fu_478_p3 = 32'd22;
    end else if (grp_fu_468_p4[23] == 1'b1) begin
        grp_fu_478_p3 = 32'd23;
    end else if (grp_fu_468_p4[24] == 1'b1) begin
        grp_fu_478_p3 = 32'd24;
    end else if (grp_fu_468_p4[25] == 1'b1) begin
        grp_fu_478_p3 = 32'd25;
    end else if (grp_fu_468_p4[26] == 1'b1) begin
        grp_fu_478_p3 = 32'd26;
    end else if (grp_fu_468_p4[27] == 1'b1) begin
        grp_fu_478_p3 = 32'd27;
    end else if (grp_fu_468_p4[28] == 1'b1) begin
        grp_fu_478_p3 = 32'd28;
    end else if (grp_fu_468_p4[29] == 1'b1) begin
        grp_fu_478_p3 = 32'd29;
    end else if (grp_fu_468_p4[30] == 1'b1) begin
        grp_fu_478_p3 = 32'd30;
    end else if (grp_fu_468_p4[31] == 1'b1) begin
        grp_fu_478_p3 = 32'd31;
    end else begin
        grp_fu_478_p3 = 32'd32;
    end
end

assign grp_fu_486_p2 = (32'd32 - grp_fu_478_p3);

assign grp_fu_492_p2 = ((int_state_V_q0 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_498_p3 = int_state_V_q0[32'd31];

assign grp_fu_506_p2 = (32'd0 - int_state_V_q0);

assign grp_fu_512_p3 = ((grp_fu_498_p3[0:0] == 1'b1) ? grp_fu_506_p2 : int_state_V_q0);

integer ap_tvar_int_1;

always @ (grp_fu_512_p3) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            grp_fu_520_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            grp_fu_520_p4[ap_tvar_int_1] = grp_fu_512_p3[31 - ap_tvar_int_1];
        end
    end
end


always @ (grp_fu_520_p4) begin
    if (grp_fu_520_p4[0] == 1'b1) begin
        grp_fu_530_p3 = 32'd0;
    end else if (grp_fu_520_p4[1] == 1'b1) begin
        grp_fu_530_p3 = 32'd1;
    end else if (grp_fu_520_p4[2] == 1'b1) begin
        grp_fu_530_p3 = 32'd2;
    end else if (grp_fu_520_p4[3] == 1'b1) begin
        grp_fu_530_p3 = 32'd3;
    end else if (grp_fu_520_p4[4] == 1'b1) begin
        grp_fu_530_p3 = 32'd4;
    end else if (grp_fu_520_p4[5] == 1'b1) begin
        grp_fu_530_p3 = 32'd5;
    end else if (grp_fu_520_p4[6] == 1'b1) begin
        grp_fu_530_p3 = 32'd6;
    end else if (grp_fu_520_p4[7] == 1'b1) begin
        grp_fu_530_p3 = 32'd7;
    end else if (grp_fu_520_p4[8] == 1'b1) begin
        grp_fu_530_p3 = 32'd8;
    end else if (grp_fu_520_p4[9] == 1'b1) begin
        grp_fu_530_p3 = 32'd9;
    end else if (grp_fu_520_p4[10] == 1'b1) begin
        grp_fu_530_p3 = 32'd10;
    end else if (grp_fu_520_p4[11] == 1'b1) begin
        grp_fu_530_p3 = 32'd11;
    end else if (grp_fu_520_p4[12] == 1'b1) begin
        grp_fu_530_p3 = 32'd12;
    end else if (grp_fu_520_p4[13] == 1'b1) begin
        grp_fu_530_p3 = 32'd13;
    end else if (grp_fu_520_p4[14] == 1'b1) begin
        grp_fu_530_p3 = 32'd14;
    end else if (grp_fu_520_p4[15] == 1'b1) begin
        grp_fu_530_p3 = 32'd15;
    end else if (grp_fu_520_p4[16] == 1'b1) begin
        grp_fu_530_p3 = 32'd16;
    end else if (grp_fu_520_p4[17] == 1'b1) begin
        grp_fu_530_p3 = 32'd17;
    end else if (grp_fu_520_p4[18] == 1'b1) begin
        grp_fu_530_p3 = 32'd18;
    end else if (grp_fu_520_p4[19] == 1'b1) begin
        grp_fu_530_p3 = 32'd19;
    end else if (grp_fu_520_p4[20] == 1'b1) begin
        grp_fu_530_p3 = 32'd20;
    end else if (grp_fu_520_p4[21] == 1'b1) begin
        grp_fu_530_p3 = 32'd21;
    end else if (grp_fu_520_p4[22] == 1'b1) begin
        grp_fu_530_p3 = 32'd22;
    end else if (grp_fu_520_p4[23] == 1'b1) begin
        grp_fu_530_p3 = 32'd23;
    end else if (grp_fu_520_p4[24] == 1'b1) begin
        grp_fu_530_p3 = 32'd24;
    end else if (grp_fu_520_p4[25] == 1'b1) begin
        grp_fu_530_p3 = 32'd25;
    end else if (grp_fu_520_p4[26] == 1'b1) begin
        grp_fu_530_p3 = 32'd26;
    end else if (grp_fu_520_p4[27] == 1'b1) begin
        grp_fu_530_p3 = 32'd27;
    end else if (grp_fu_520_p4[28] == 1'b1) begin
        grp_fu_530_p3 = 32'd28;
    end else if (grp_fu_520_p4[29] == 1'b1) begin
        grp_fu_530_p3 = 32'd29;
    end else if (grp_fu_520_p4[30] == 1'b1) begin
        grp_fu_530_p3 = 32'd30;
    end else if (grp_fu_520_p4[31] == 1'b1) begin
        grp_fu_530_p3 = 32'd31;
    end else begin
        grp_fu_530_p3 = 32'd32;
    end
end

assign grp_fu_538_p2 = (32'd32 - grp_fu_530_p3);

assign grp_fu_560_p2 = ($signed(reg_548) + $signed(32'd4294967271));

assign grp_fu_566_p2 = (32'd25 - reg_548);

assign grp_fu_572_p2 = ($signed(reg_556) + $signed(32'd4294967271));

assign grp_fu_578_p2 = (32'd25 - reg_556);

assign icmp_ln1101_1_fu_845_p2 = (($signed(tmp_4_fu_835_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1101_2_fu_1171_p2 = (($signed(tmp_8_reg_1686) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1101_3_fu_1369_p2 = (($signed(tmp_12_reg_1718) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1101_fu_682_p2 = (($signed(tmp_fu_672_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1102_1_fu_872_p2 = ((p_Result_6_fu_866_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1102_2_fu_1191_p2 = ((p_Result_12_fu_1185_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1102_3_fu_1389_p2 = ((p_Result_18_fu_1383_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1102_fu_709_p2 = ((p_Result_s_fu_703_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1113_1_fu_930_p2 = (($signed(lsb_index_1_fu_829_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1113_2_fu_1247_p2 = (($signed(lsb_index_2_reg_1679) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1113_3_fu_1445_p2 = (($signed(lsb_index_3_reg_1711) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1113_fu_767_p2 = (($signed(lsb_index_fu_666_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln57_1_fu_614_p2 = ((or_ln57_fu_603_p2 < 6'd33) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_592_p2 = ((ap_sig_allocacmp_j_1 < 6'd33) ? 1'b1 : 1'b0);

assign internal_state_0 = select_ln59_fu_1096_p3;

assign internal_state_1 = select_ln59_1_fu_1156_p3;

assign internal_state_10 = select_ln59_2_fu_1354_p3;

assign internal_state_11 = select_ln59_3_fu_1552_p3;

assign internal_state_12 = select_ln59_fu_1096_p3;

assign internal_state_13 = select_ln59_1_fu_1156_p3;

assign internal_state_14 = select_ln59_2_fu_1354_p3;

assign internal_state_15 = select_ln59_3_fu_1552_p3;

assign internal_state_16 = select_ln59_fu_1096_p3;

assign internal_state_17 = select_ln59_1_fu_1156_p3;

assign internal_state_18 = select_ln59_2_fu_1354_p3;

assign internal_state_19 = select_ln59_3_fu_1552_p3;

assign internal_state_2 = select_ln59_2_fu_1354_p3;

assign internal_state_20 = select_ln59_fu_1096_p3;

assign internal_state_21 = select_ln59_1_fu_1156_p3;

assign internal_state_22 = select_ln59_2_fu_1354_p3;

assign internal_state_23 = select_ln59_3_fu_1552_p3;

assign internal_state_24 = select_ln59_fu_1096_p3;

assign internal_state_25 = select_ln59_1_fu_1156_p3;

assign internal_state_26 = select_ln59_2_fu_1354_p3;

assign internal_state_27 = select_ln59_3_fu_1552_p3;

assign internal_state_28 = select_ln59_fu_1096_p3;

assign internal_state_29 = select_ln59_1_fu_1156_p3;

assign internal_state_3 = select_ln59_3_fu_1552_p3;

assign internal_state_30 = select_ln59_2_fu_1354_p3;

assign internal_state_31 = select_ln59_3_fu_1552_p3;

assign internal_state_32 = select_ln59_fu_1096_p3;

assign internal_state_4 = select_ln59_fu_1096_p3;

assign internal_state_5 = select_ln59_1_fu_1156_p3;

assign internal_state_6 = select_ln59_2_fu_1354_p3;

assign internal_state_7 = select_ln59_3_fu_1552_p3;

assign internal_state_8 = select_ln59_fu_1096_p3;

assign internal_state_9 = select_ln59_1_fu_1156_p3;

assign lsb_index_1_fu_829_p2 = ($signed(reg_556) + $signed(32'd4294967272));

assign lsb_index_2_fu_992_p2 = ($signed(grp_fu_486_p2) + $signed(32'd4294967272));

assign lsb_index_3_fu_1022_p2 = ($signed(grp_fu_538_p2) + $signed(32'd4294967272));

assign lsb_index_fu_666_p2 = ($signed(reg_548) + $signed(32'd4294967272));

assign lshr_ln1102_1_fu_860_p2 = 32'd4294967295 >> zext_ln1102_1_fu_856_p1;

assign lshr_ln1102_2_fu_1179_p2 = 32'd4294967295 >> zext_ln1102_2_fu_1176_p1;

assign lshr_ln1102_3_fu_1377_p2 = 32'd4294967295 >> zext_ln1102_3_fu_1374_p1;

assign lshr_ln1102_fu_697_p2 = 32'd4294967295 >> zext_ln1102_fu_693_p1;

assign lshr_ln1113_1_fu_940_p2 = zext_ln1112_1_fu_926_p1 >> zext_ln1113_1_fu_936_p1;

assign lshr_ln1113_2_fu_1256_p2 = zext_ln1112_2_fu_1243_p1 >> zext_ln1113_2_fu_1252_p1;

assign lshr_ln1113_3_fu_1454_p2 = zext_ln1112_3_fu_1441_p1 >> zext_ln1113_3_fu_1450_p1;

assign lshr_ln1113_fu_777_p2 = zext_ln1112_fu_763_p1 >> zext_ln1113_fu_773_p1;

assign m_11_fu_1272_p3 = ((icmp_ln1113_2_fu_1247_p2[0:0] == 1'b1) ? lshr_ln1113_2_fu_1256_p2 : shl_ln1114_2_fu_1266_p2);

assign m_12_fu_1284_p2 = (m_11_fu_1272_p3 + zext_ln1116_2_fu_1280_p1);

assign m_16_fu_1470_p3 = ((icmp_ln1113_3_fu_1445_p2[0:0] == 1'b1) ? lshr_ln1113_3_fu_1454_p2 : shl_ln1114_3_fu_1464_p2);

assign m_17_fu_1482_p2 = (m_16_fu_1470_p3 + zext_ln1116_3_fu_1478_p1);

assign m_21_fu_1290_p4 = {{m_12_fu_1284_p2[63:1]}};

assign m_22_fu_1488_p4 = {{m_17_fu_1482_p2[63:1]}};

assign m_2_fu_793_p3 = ((icmp_ln1113_fu_767_p2[0:0] == 1'b1) ? lshr_ln1113_fu_777_p2 : shl_ln1114_fu_787_p2);

assign m_3_fu_805_p2 = (m_2_fu_793_p3 + zext_ln1116_fu_801_p1);

assign m_6_fu_956_p3 = ((icmp_ln1113_1_fu_930_p2[0:0] == 1'b1) ? lshr_ln1113_1_fu_940_p2 : shl_ln1114_1_fu_950_p2);

assign m_7_fu_968_p2 = (m_6_fu_956_p3 + zext_ln1116_1_fu_964_p1);

assign or_ln1104_1_fu_918_p3 = {{1'd0}, {or_ln1104_fu_912_p2}};

assign or_ln1104_2_fu_749_p2 = (and_ln1104_fu_743_p2 | a_fu_715_p2);

assign or_ln1104_3_fu_1235_p3 = {{1'd0}, {or_ln1104_5_fu_1229_p2}};

assign or_ln1104_4_fu_1433_p3 = {{1'd0}, {or_ln1104_6_fu_1427_p2}};

assign or_ln1104_5_fu_1229_p2 = (and_ln1104_2_fu_1223_p2 | a_2_fu_1197_p2);

assign or_ln1104_6_fu_1427_p2 = (and_ln1104_3_fu_1421_p2 | a_3_fu_1395_p2);

assign or_ln1104_fu_912_p2 = (and_ln1104_1_fu_906_p2 | a_1_fu_878_p2);

assign or_ln57_1_fu_636_p2 = (j_1_reg_1574 | 6'd2);

assign or_ln57_2_fu_646_p2 = (j_1_reg_1574 | 6'd3);

assign or_ln57_fu_603_p2 = (ap_sig_allocacmp_j_1 | 6'd1);

assign or_ln_fu_755_p3 = {{1'd0}, {or_ln1104_2_fu_749_p2}};

assign p_Result_12_fu_1185_p2 = (reg_544 & lshr_ln1102_2_fu_1179_p2);

assign p_Result_13_fu_1216_p3 = reg_544[lsb_index_2_reg_1679];

assign p_Result_14_fu_1304_p3 = m_12_fu_1284_p2[32'd25];

assign p_Result_18_fu_1383_p2 = (reg_552 & lshr_ln1102_3_fu_1377_p2);

assign p_Result_19_fu_1414_p3 = reg_552[lsb_index_3_reg_1711];

assign p_Result_1_fu_735_p3 = reg_544[lsb_index_fu_666_p2];

assign p_Result_20_fu_1502_p3 = m_17_fu_1482_p2[32'd25];

assign p_Result_24_fu_1140_p5 = {{zext_ln1117_1_fu_1112_p1[63:32]}, {tmp_2_fu_1133_p3}, {zext_ln1117_1_fu_1112_p1[22:0]}};

assign p_Result_27_fu_1338_p5 = {{zext_ln1117_2_fu_1300_p1[63:32]}, {tmp_3_fu_1331_p3}, {zext_ln1117_2_fu_1300_p1[22:0]}};

assign p_Result_30_fu_1536_p5 = {{zext_ln1117_3_fu_1498_p1[63:32]}, {tmp_6_fu_1529_p3}, {zext_ln1117_3_fu_1498_p1[22:0]}};

assign p_Result_33_fu_1080_p5 = {{zext_ln1117_fu_1052_p1[63:32]}, {tmp_s_fu_1073_p3}, {zext_ln1117_fu_1052_p1[22:0]}};

assign p_Result_6_fu_866_p2 = (reg_552 & lshr_ln1102_1_fu_860_p2);

assign p_Result_7_fu_898_p3 = reg_552[lsb_index_1_fu_829_p2];

assign p_Result_s_fu_703_p2 = (reg_544 & lshr_ln1102_fu_697_p2);

assign select_ln1098_1_fu_1115_p3 = ((p_Result_8_reg_1664[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln1098_2_fu_1312_p3 = ((p_Result_14_fu_1304_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln1098_3_fu_1510_p3 = ((p_Result_20_fu_1502_p3[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln1098_fu_1055_p3 = ((p_Result_2_reg_1654[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln59_1_fu_1156_p3 = ((icmp_ln1090_1_reg_1619[0:0] == 1'b1) ? 32'd0 : LD_1_fu_1152_p1);

assign select_ln59_2_fu_1354_p3 = ((icmp_ln1090_2_reg_1669[0:0] == 1'b1) ? 32'd0 : LD_2_fu_1350_p1);

assign select_ln59_3_fu_1552_p3 = ((icmp_ln1090_3_reg_1701[0:0] == 1'b1) ? 32'd0 : LD_3_fu_1548_p1);

assign select_ln59_fu_1096_p3 = ((icmp_ln1090_reg_1599[0:0] == 1'b1) ? 32'd0 : LD_fu_1092_p1);

assign shl_ln1114_1_fu_950_p2 = zext_ln1112_1_fu_926_p1 << zext_ln1114_1_fu_946_p1;

assign shl_ln1114_2_fu_1266_p2 = zext_ln1112_2_fu_1243_p1 << zext_ln1114_2_fu_1262_p1;

assign shl_ln1114_3_fu_1464_p2 = zext_ln1112_3_fu_1441_p1 << zext_ln1114_3_fu_1460_p1;

assign shl_ln1114_fu_787_p2 = zext_ln1112_fu_763_p1 << zext_ln1114_fu_783_p1;

assign sub_ln1102_1_fu_851_p2 = ($signed(5'd25) - $signed(trunc_ln1102_1_reg_1629));

assign sub_ln1102_2_fu_1012_p2 = ($signed(5'd25) - $signed(trunc_ln1102_2_fu_1008_p1));

assign sub_ln1102_3_fu_1042_p2 = ($signed(5'd25) - $signed(trunc_ln1102_3_fu_1038_p1));

assign sub_ln1102_fu_688_p2 = ($signed(5'd25) - $signed(trunc_ln1102_reg_1609));

assign sub_ln1119_1_fu_1122_p2 = (8'd16 - trunc_ln1098_1_reg_1634);

assign sub_ln1119_2_fu_1320_p2 = (8'd16 - trunc_ln1098_2_reg_1696);

assign sub_ln1119_3_fu_1518_p2 = (8'd16 - trunc_ln1098_3_reg_1728);

assign sub_ln1119_fu_1062_p2 = (8'd16 - trunc_ln1098_reg_1614);

assign tmp_13_fu_1401_p3 = lsb_index_3_reg_1711[32'd31];

assign tmp_1_fu_721_p3 = lsb_index_fu_666_p2[32'd31];

assign tmp_2_fu_1133_p3 = {{p_Result_22_reg_1624}, {add_ln1124_1_fu_1127_p2}};

assign tmp_3_fu_1331_p3 = {{p_Result_25_reg_1674}, {add_ln1124_2_fu_1325_p2}};

assign tmp_4_fu_835_p4 = {{lsb_index_1_fu_829_p2[31:1]}};

assign tmp_5_fu_884_p3 = lsb_index_1_fu_829_p2[32'd31];

assign tmp_6_fu_1529_p3 = {{p_Result_28_reg_1706}, {add_ln1124_3_fu_1523_p2}};

assign tmp_9_fu_1203_p3 = lsb_index_2_reg_1679[32'd31];

assign tmp_fu_672_p4 = {{lsb_index_fu_666_p2[31:1]}};

assign tmp_s_fu_1073_p3 = {{p_Result_31_reg_1604}, {add_ln1124_fu_1067_p2}};

assign trunc_ln1098_1_fu_632_p1 = grp_fu_530_p3[7:0];

assign trunc_ln1098_2_fu_1018_p1 = grp_fu_478_p3[7:0];

assign trunc_ln1098_3_fu_1048_p1 = grp_fu_530_p3[7:0];

assign trunc_ln1098_fu_624_p1 = grp_fu_478_p3[7:0];

assign trunc_ln1102_1_fu_628_p1 = grp_fu_538_p2[4:0];

assign trunc_ln1102_2_fu_1008_p1 = grp_fu_486_p2[4:0];

assign trunc_ln1102_3_fu_1038_p1 = grp_fu_538_p2[4:0];

assign trunc_ln1102_fu_620_p1 = grp_fu_486_p2[4:0];

assign trunc_ln59_cast_fu_598_p1 = ap_sig_allocacmp_j_1;

assign xor_ln1104_1_fu_892_p2 = (tmp_5_fu_884_p3 ^ 1'd1);

assign xor_ln1104_2_fu_1210_p2 = (tmp_9_fu_1203_p3 ^ 1'd1);

assign xor_ln1104_3_fu_1408_p2 = (tmp_13_fu_1401_p3 ^ 1'd1);

assign xor_ln1104_fu_729_p2 = (tmp_1_fu_721_p3 ^ 1'd1);

assign zext_ln1090_1_fu_651_p1 = or_ln57_2_fu_646_p2;

assign zext_ln1090_fu_641_p1 = or_ln57_1_fu_636_p2;

assign zext_ln1102_1_fu_856_p1 = sub_ln1102_1_fu_851_p2;

assign zext_ln1102_2_fu_1176_p1 = sub_ln1102_2_reg_1691;

assign zext_ln1102_3_fu_1374_p1 = sub_ln1102_3_reg_1723;

assign zext_ln1102_fu_693_p1 = sub_ln1102_fu_688_p2;

assign zext_ln1112_1_fu_926_p1 = reg_552;

assign zext_ln1112_2_fu_1243_p1 = reg_544;

assign zext_ln1112_3_fu_1441_p1 = reg_552;

assign zext_ln1112_fu_763_p1 = reg_544;

assign zext_ln1113_1_fu_936_p1 = grp_fu_572_p2;

assign zext_ln1113_2_fu_1252_p1 = grp_fu_560_p2;

assign zext_ln1113_3_fu_1450_p1 = grp_fu_572_p2;

assign zext_ln1113_fu_773_p1 = grp_fu_560_p2;

assign zext_ln1114_1_fu_946_p1 = grp_fu_578_p2;

assign zext_ln1114_2_fu_1262_p1 = grp_fu_566_p2;

assign zext_ln1114_3_fu_1460_p1 = grp_fu_578_p2;

assign zext_ln1114_fu_783_p1 = grp_fu_566_p2;

assign zext_ln1116_1_fu_964_p1 = or_ln1104_1_fu_918_p3;

assign zext_ln1116_2_fu_1280_p1 = or_ln1104_3_fu_1235_p3;

assign zext_ln1116_3_fu_1478_p1 = or_ln1104_4_fu_1433_p3;

assign zext_ln1116_fu_801_p1 = or_ln_fu_755_p3;

assign zext_ln1117_1_fu_1112_p1 = m_20_reg_1659;

assign zext_ln1117_2_fu_1300_p1 = m_21_fu_1290_p4;

assign zext_ln1117_3_fu_1498_p1 = m_22_fu_1488_p4;

assign zext_ln1117_fu_1052_p1 = m_23_reg_1649;

assign zext_ln57_fu_609_p1 = or_ln57_fu_603_p2;

endmodule //latnrm_latnrm_Pipeline_VITIS_LOOP_57_6
