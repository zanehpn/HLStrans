// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_neighbor_tables_compute_neighbor_tables_Pipeline_VITIS_LOOP_17_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        num_nodes,
        neightbor_table_offsets_temp_3_address0,
        neightbor_table_offsets_temp_3_ce0,
        neightbor_table_offsets_temp_3_we0,
        neightbor_table_offsets_temp_3_d0,
        neightbor_table_offsets_temp_2_address0,
        neightbor_table_offsets_temp_2_ce0,
        neightbor_table_offsets_temp_2_we0,
        neightbor_table_offsets_temp_2_d0,
        neightbor_table_offsets_temp_1_address0,
        neightbor_table_offsets_temp_1_ce0,
        neightbor_table_offsets_temp_1_we0,
        neightbor_table_offsets_temp_1_d0,
        neightbor_table_offsets_temp_address0,
        neightbor_table_offsets_temp_ce0,
        neightbor_table_offsets_temp_we0,
        neightbor_table_offsets_temp_d0,
        in_degree_table_address0,
        in_degree_table_ce0,
        in_degree_table_q0,
        neighbor_table_offsets_address0,
        neighbor_table_offsets_ce0,
        neighbor_table_offsets_we0,
        neighbor_table_offsets_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] num_nodes;
output  [4:0] neightbor_table_offsets_temp_3_address0;
output   neightbor_table_offsets_temp_3_ce0;
output   neightbor_table_offsets_temp_3_we0;
output  [31:0] neightbor_table_offsets_temp_3_d0;
output  [4:0] neightbor_table_offsets_temp_2_address0;
output   neightbor_table_offsets_temp_2_ce0;
output   neightbor_table_offsets_temp_2_we0;
output  [31:0] neightbor_table_offsets_temp_2_d0;
output  [4:0] neightbor_table_offsets_temp_1_address0;
output   neightbor_table_offsets_temp_1_ce0;
output   neightbor_table_offsets_temp_1_we0;
output  [31:0] neightbor_table_offsets_temp_1_d0;
output  [4:0] neightbor_table_offsets_temp_address0;
output   neightbor_table_offsets_temp_ce0;
output   neightbor_table_offsets_temp_we0;
output  [31:0] neightbor_table_offsets_temp_d0;
output  [6:0] in_degree_table_address0;
output   in_degree_table_ce0;
input  [31:0] in_degree_table_q0;
output  [6:0] neighbor_table_offsets_address0;
output   neighbor_table_offsets_ce0;
output   neighbor_table_offsets_we0;
output  [31:0] neighbor_table_offsets_d0;

reg ap_idle;
reg neightbor_table_offsets_temp_3_ce0;
reg neightbor_table_offsets_temp_3_we0;
reg neightbor_table_offsets_temp_2_ce0;
reg neightbor_table_offsets_temp_2_we0;
reg neightbor_table_offsets_temp_1_ce0;
reg neightbor_table_offsets_temp_1_we0;
reg neightbor_table_offsets_temp_ce0;
reg neightbor_table_offsets_temp_we0;
reg in_degree_table_ce0;
reg neighbor_table_offsets_ce0;
reg neighbor_table_offsets_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln17_fu_173_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [30:0] i_2_reg_290;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] trunc_ln_reg_305;
reg   [1:0] trunc_ln_reg_305_pp0_iter1_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter2_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter3_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter4_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter5_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter6_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter7_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter8_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter9_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter10_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter11_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter12_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter13_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter14_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter15_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter16_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter17_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter18_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter19_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter20_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter21_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter22_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter23_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter24_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter25_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter26_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter27_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter28_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter29_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter30_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter31_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter32_reg;
reg   [1:0] trunc_ln_reg_305_pp0_iter33_reg;
wire   [31:0] csum_fu_256_p2;
reg   [31:0] csum_reg_309;
reg   [31:0] csum_reg_309_pp0_iter2_reg;
reg   [31:0] csum_reg_309_pp0_iter3_reg;
reg   [31:0] csum_reg_309_pp0_iter4_reg;
reg   [31:0] csum_reg_309_pp0_iter5_reg;
reg   [31:0] csum_reg_309_pp0_iter6_reg;
reg   [31:0] csum_reg_309_pp0_iter7_reg;
reg   [31:0] csum_reg_309_pp0_iter8_reg;
reg   [31:0] csum_reg_309_pp0_iter9_reg;
reg   [31:0] csum_reg_309_pp0_iter10_reg;
reg   [31:0] csum_reg_309_pp0_iter11_reg;
reg   [31:0] csum_reg_309_pp0_iter12_reg;
reg   [31:0] csum_reg_309_pp0_iter13_reg;
reg   [31:0] csum_reg_309_pp0_iter14_reg;
reg   [31:0] csum_reg_309_pp0_iter15_reg;
reg   [31:0] csum_reg_309_pp0_iter16_reg;
reg   [31:0] csum_reg_309_pp0_iter17_reg;
reg   [31:0] csum_reg_309_pp0_iter18_reg;
reg   [31:0] csum_reg_309_pp0_iter19_reg;
reg   [31:0] csum_reg_309_pp0_iter20_reg;
reg   [31:0] csum_reg_309_pp0_iter21_reg;
reg   [31:0] csum_reg_309_pp0_iter22_reg;
reg   [31:0] csum_reg_309_pp0_iter23_reg;
reg   [31:0] csum_reg_309_pp0_iter24_reg;
reg   [31:0] csum_reg_309_pp0_iter25_reg;
reg   [31:0] csum_reg_309_pp0_iter26_reg;
reg   [31:0] csum_reg_309_pp0_iter27_reg;
reg   [31:0] csum_reg_309_pp0_iter28_reg;
reg   [31:0] csum_reg_309_pp0_iter29_reg;
reg   [31:0] csum_reg_309_pp0_iter30_reg;
reg   [31:0] csum_reg_309_pp0_iter31_reg;
reg   [31:0] csum_reg_309_pp0_iter32_reg;
reg   [31:0] csum_reg_309_pp0_iter33_reg;
wire   [63:0] zext_ln19_fu_207_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln17_fu_252_p1;
wire   [63:0] zext_ln21_fu_268_p1;
reg   [30:0] i_fu_64;
wire   [30:0] add_ln17_fu_238_p2;
wire    ap_loop_init;
reg   [30:0] ap_sig_allocacmp_i_2;
reg   [31:0] csum_1_fu_68;
wire   [31:0] zext_ln17_1_fu_169_p1;
wire   [6:0] trunc_ln19_fu_179_p1;
wire   [8:0] shl_ln_fu_183_p3;
wire   [8:0] add_ln19_fu_191_p2;
wire   [6:0] lshr_ln_fu_197_p4;
wire   [30:0] mul_ln21_fu_216_p0;
wire   [32:0] mul_ln21_fu_216_p1;
wire   [5:0] grp_fu_222_p1;
wire   [37:0] mul_ln21_fu_216_p2;
wire   [30:0] grp_fu_222_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [37:0] mul_ln21_fu_216_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_done_reg = 1'b0;
end

compute_neighbor_tables_mul_31ns_33ns_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 38 ))
mul_31ns_33ns_38_1_1_U1(
    .din0(mul_ln21_fu_216_p0),
    .din1(mul_ln21_fu_216_p1),
    .dout(mul_ln21_fu_216_p2)
);

compute_neighbor_tables_urem_31ns_6ns_31_35_1 #(
    .ID( 1 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 31 ))
urem_31ns_6ns_31_35_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_i_2),
    .din1(grp_fu_222_p1),
    .ce(1'b1),
    .dout(grp_fu_222_p2)
);

compute_neighbor_tables_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter33_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            csum_1_fu_68 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            csum_1_fu_68 <= csum_fu_256_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln17_fu_173_p2 == 1'd1))) begin
            i_fu_64 <= add_ln17_fu_238_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_64 <= 31'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        csum_reg_309_pp0_iter10_reg <= csum_reg_309_pp0_iter9_reg;
        csum_reg_309_pp0_iter11_reg <= csum_reg_309_pp0_iter10_reg;
        csum_reg_309_pp0_iter12_reg <= csum_reg_309_pp0_iter11_reg;
        csum_reg_309_pp0_iter13_reg <= csum_reg_309_pp0_iter12_reg;
        csum_reg_309_pp0_iter14_reg <= csum_reg_309_pp0_iter13_reg;
        csum_reg_309_pp0_iter15_reg <= csum_reg_309_pp0_iter14_reg;
        csum_reg_309_pp0_iter16_reg <= csum_reg_309_pp0_iter15_reg;
        csum_reg_309_pp0_iter17_reg <= csum_reg_309_pp0_iter16_reg;
        csum_reg_309_pp0_iter18_reg <= csum_reg_309_pp0_iter17_reg;
        csum_reg_309_pp0_iter19_reg <= csum_reg_309_pp0_iter18_reg;
        csum_reg_309_pp0_iter20_reg <= csum_reg_309_pp0_iter19_reg;
        csum_reg_309_pp0_iter21_reg <= csum_reg_309_pp0_iter20_reg;
        csum_reg_309_pp0_iter22_reg <= csum_reg_309_pp0_iter21_reg;
        csum_reg_309_pp0_iter23_reg <= csum_reg_309_pp0_iter22_reg;
        csum_reg_309_pp0_iter24_reg <= csum_reg_309_pp0_iter23_reg;
        csum_reg_309_pp0_iter25_reg <= csum_reg_309_pp0_iter24_reg;
        csum_reg_309_pp0_iter26_reg <= csum_reg_309_pp0_iter25_reg;
        csum_reg_309_pp0_iter27_reg <= csum_reg_309_pp0_iter26_reg;
        csum_reg_309_pp0_iter28_reg <= csum_reg_309_pp0_iter27_reg;
        csum_reg_309_pp0_iter29_reg <= csum_reg_309_pp0_iter28_reg;
        csum_reg_309_pp0_iter2_reg <= csum_reg_309;
        csum_reg_309_pp0_iter30_reg <= csum_reg_309_pp0_iter29_reg;
        csum_reg_309_pp0_iter31_reg <= csum_reg_309_pp0_iter30_reg;
        csum_reg_309_pp0_iter32_reg <= csum_reg_309_pp0_iter31_reg;
        csum_reg_309_pp0_iter33_reg <= csum_reg_309_pp0_iter32_reg;
        csum_reg_309_pp0_iter3_reg <= csum_reg_309_pp0_iter2_reg;
        csum_reg_309_pp0_iter4_reg <= csum_reg_309_pp0_iter3_reg;
        csum_reg_309_pp0_iter5_reg <= csum_reg_309_pp0_iter4_reg;
        csum_reg_309_pp0_iter6_reg <= csum_reg_309_pp0_iter5_reg;
        csum_reg_309_pp0_iter7_reg <= csum_reg_309_pp0_iter6_reg;
        csum_reg_309_pp0_iter8_reg <= csum_reg_309_pp0_iter7_reg;
        csum_reg_309_pp0_iter9_reg <= csum_reg_309_pp0_iter8_reg;
        trunc_ln_reg_305_pp0_iter10_reg <= trunc_ln_reg_305_pp0_iter9_reg;
        trunc_ln_reg_305_pp0_iter11_reg <= trunc_ln_reg_305_pp0_iter10_reg;
        trunc_ln_reg_305_pp0_iter12_reg <= trunc_ln_reg_305_pp0_iter11_reg;
        trunc_ln_reg_305_pp0_iter13_reg <= trunc_ln_reg_305_pp0_iter12_reg;
        trunc_ln_reg_305_pp0_iter14_reg <= trunc_ln_reg_305_pp0_iter13_reg;
        trunc_ln_reg_305_pp0_iter15_reg <= trunc_ln_reg_305_pp0_iter14_reg;
        trunc_ln_reg_305_pp0_iter16_reg <= trunc_ln_reg_305_pp0_iter15_reg;
        trunc_ln_reg_305_pp0_iter17_reg <= trunc_ln_reg_305_pp0_iter16_reg;
        trunc_ln_reg_305_pp0_iter18_reg <= trunc_ln_reg_305_pp0_iter17_reg;
        trunc_ln_reg_305_pp0_iter19_reg <= trunc_ln_reg_305_pp0_iter18_reg;
        trunc_ln_reg_305_pp0_iter20_reg <= trunc_ln_reg_305_pp0_iter19_reg;
        trunc_ln_reg_305_pp0_iter21_reg <= trunc_ln_reg_305_pp0_iter20_reg;
        trunc_ln_reg_305_pp0_iter22_reg <= trunc_ln_reg_305_pp0_iter21_reg;
        trunc_ln_reg_305_pp0_iter23_reg <= trunc_ln_reg_305_pp0_iter22_reg;
        trunc_ln_reg_305_pp0_iter24_reg <= trunc_ln_reg_305_pp0_iter23_reg;
        trunc_ln_reg_305_pp0_iter25_reg <= trunc_ln_reg_305_pp0_iter24_reg;
        trunc_ln_reg_305_pp0_iter26_reg <= trunc_ln_reg_305_pp0_iter25_reg;
        trunc_ln_reg_305_pp0_iter27_reg <= trunc_ln_reg_305_pp0_iter26_reg;
        trunc_ln_reg_305_pp0_iter28_reg <= trunc_ln_reg_305_pp0_iter27_reg;
        trunc_ln_reg_305_pp0_iter29_reg <= trunc_ln_reg_305_pp0_iter28_reg;
        trunc_ln_reg_305_pp0_iter2_reg <= trunc_ln_reg_305_pp0_iter1_reg;
        trunc_ln_reg_305_pp0_iter30_reg <= trunc_ln_reg_305_pp0_iter29_reg;
        trunc_ln_reg_305_pp0_iter31_reg <= trunc_ln_reg_305_pp0_iter30_reg;
        trunc_ln_reg_305_pp0_iter32_reg <= trunc_ln_reg_305_pp0_iter31_reg;
        trunc_ln_reg_305_pp0_iter33_reg <= trunc_ln_reg_305_pp0_iter32_reg;
        trunc_ln_reg_305_pp0_iter3_reg <= trunc_ln_reg_305_pp0_iter2_reg;
        trunc_ln_reg_305_pp0_iter4_reg <= trunc_ln_reg_305_pp0_iter3_reg;
        trunc_ln_reg_305_pp0_iter5_reg <= trunc_ln_reg_305_pp0_iter4_reg;
        trunc_ln_reg_305_pp0_iter6_reg <= trunc_ln_reg_305_pp0_iter5_reg;
        trunc_ln_reg_305_pp0_iter7_reg <= trunc_ln_reg_305_pp0_iter6_reg;
        trunc_ln_reg_305_pp0_iter8_reg <= trunc_ln_reg_305_pp0_iter7_reg;
        trunc_ln_reg_305_pp0_iter9_reg <= trunc_ln_reg_305_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        csum_reg_309 <= csum_fu_256_p2;
        i_2_reg_290 <= ap_sig_allocacmp_i_2;
        trunc_ln_reg_305_pp0_iter1_reg <= trunc_ln_reg_305;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_fu_173_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln_reg_305 <= {{mul_ln21_fu_216_p2[37:36]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_fu_173_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter33_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 31'd1;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_64;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_degree_table_ce0 = 1'b1;
    end else begin
        in_degree_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_table_offsets_ce0 = 1'b1;
    end else begin
        neighbor_table_offsets_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        neighbor_table_offsets_we0 = 1'b1;
    end else begin
        neighbor_table_offsets_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        neightbor_table_offsets_temp_1_ce0 = 1'b1;
    end else begin
        neightbor_table_offsets_temp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln_reg_305_pp0_iter33_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        neightbor_table_offsets_temp_1_we0 = 1'b1;
    end else begin
        neightbor_table_offsets_temp_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        neightbor_table_offsets_temp_2_ce0 = 1'b1;
    end else begin
        neightbor_table_offsets_temp_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln_reg_305_pp0_iter33_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        neightbor_table_offsets_temp_2_we0 = 1'b1;
    end else begin
        neightbor_table_offsets_temp_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        neightbor_table_offsets_temp_3_ce0 = 1'b1;
    end else begin
        neightbor_table_offsets_temp_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln_reg_305_pp0_iter33_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        neightbor_table_offsets_temp_3_we0 = 1'b1;
    end else begin
        neightbor_table_offsets_temp_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        neightbor_table_offsets_temp_ce0 = 1'b1;
    end else begin
        neightbor_table_offsets_temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln_reg_305_pp0_iter33_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        neightbor_table_offsets_temp_we0 = 1'b1;
    end else begin
        neightbor_table_offsets_temp_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln17_fu_238_p2 = (ap_sig_allocacmp_i_2 + 31'd1);

assign add_ln19_fu_191_p2 = ($signed(shl_ln_fu_183_p3) + $signed(9'd508));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign csum_fu_256_p2 = (in_degree_table_q0 + csum_1_fu_68);

assign grp_fu_222_p1 = 31'd25;

assign icmp_ln17_fu_173_p2 = (($signed(zext_ln17_1_fu_169_p1) < $signed(num_nodes)) ? 1'b1 : 1'b0);

assign in_degree_table_address0 = zext_ln19_fu_207_p1;

assign lshr_ln_fu_197_p4 = {{add_ln19_fu_191_p2[8:2]}};

assign mul_ln21_fu_216_p0 = mul_ln21_fu_216_p00;

assign mul_ln21_fu_216_p00 = ap_sig_allocacmp_i_2;

assign mul_ln21_fu_216_p1 = 38'd2748779070;

assign neighbor_table_offsets_address0 = zext_ln17_fu_252_p1;

assign neighbor_table_offsets_d0 = (in_degree_table_q0 + csum_1_fu_68);

assign neightbor_table_offsets_temp_1_address0 = zext_ln21_fu_268_p1;

assign neightbor_table_offsets_temp_1_d0 = csum_reg_309_pp0_iter33_reg;

assign neightbor_table_offsets_temp_2_address0 = zext_ln21_fu_268_p1;

assign neightbor_table_offsets_temp_2_d0 = csum_reg_309_pp0_iter33_reg;

assign neightbor_table_offsets_temp_3_address0 = zext_ln21_fu_268_p1;

assign neightbor_table_offsets_temp_3_d0 = csum_reg_309_pp0_iter33_reg;

assign neightbor_table_offsets_temp_address0 = zext_ln21_fu_268_p1;

assign neightbor_table_offsets_temp_d0 = csum_reg_309_pp0_iter33_reg;

assign shl_ln_fu_183_p3 = {{trunc_ln19_fu_179_p1}, {2'd0}};

assign trunc_ln19_fu_179_p1 = ap_sig_allocacmp_i_2[6:0];

assign zext_ln17_1_fu_169_p1 = ap_sig_allocacmp_i_2;

assign zext_ln17_fu_252_p1 = i_2_reg_290;

assign zext_ln19_fu_207_p1 = lshr_ln_fu_197_p4;

assign zext_ln21_fu_268_p1 = grp_fu_222_p2;

endmodule //compute_neighbor_tables_compute_neighbor_tables_Pipeline_VITIS_LOOP_17_1
