-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bbgemm is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    m1_ce0 : OUT STD_LOGIC;
    m1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    m2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    m2_ce0 : OUT STD_LOGIC;
    m2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    m2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    m2_ce1 : OUT STD_LOGIC;
    m2_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    prod_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    prod_ce0 : OUT STD_LOGIC;
    prod_we0 : OUT STD_LOGIC;
    prod_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    prod_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    prod_ce1 : OUT STD_LOGIC;
    prod_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of bbgemm is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "bbgemm_bbgemm,hls_ip_2022_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.619000,HLS_SYN_LAT=262158,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2188,HLS_SYN_LUT=1850,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv14_1000 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv12_6 : STD_LOGIC_VECTOR (11 downto 0) := "000000000110";
    constant ap_const_lv12_7 : STD_LOGIC_VECTOR (11 downto 0) := "000000000111";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal icmp_ln15_reg_1035 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage7 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_301 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal reg_305 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal reg_310 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal grp_fu_293_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_314 : STD_LOGIC_VECTOR (63 downto 0);
    signal jj_1_reg_1025 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln23_fu_359_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln23_reg_1030 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln15_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_reg_1035_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_load_reg_1039 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_flatten61_load_reg_1044 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln16_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln16_reg_1049 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln15_1_fu_401_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln15_1_reg_1057 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln23_1_fu_407_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln23_1_reg_1062 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln11_1_fu_411_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln11_1_reg_1067 : STD_LOGIC_VECTOR (5 downto 0);
    signal and_ln11_1_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln11_1_reg_1073 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln11_2_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln11_2_reg_1079 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln20_fu_501_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln20_reg_1085 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_505_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_reg_1090 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln23_1_fu_515_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln23_1_reg_1095 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln11_6_fu_641_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln11_6_reg_1115 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln11_6_reg_1115_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal m1_load_reg_1142 : STD_LOGIC_VECTOR (63 downto 0);
    signal m2_load_2_reg_1147 : STD_LOGIC_VECTOR (63 downto 0);
    signal m2_load_3_reg_1152 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_x_fu_735_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_x_reg_1167 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_fu_739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m2_load_5_reg_1177 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_1_fu_764_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m2_load_7_reg_1197 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_2_fu_769_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_reg_1207 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln23_3_fu_777_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_297_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_reg_1218 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_1_reg_1223 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln23_4_fu_796_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_fu_833_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_1_reg_1239 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_2_reg_1244 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln23_5_fu_838_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_8_fu_852_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_2_reg_1260 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_3_reg_1265 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln23_6_fu_857_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_2_fu_872_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_3_reg_1281 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_4_reg_1286 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln23_7_fu_877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_3_fu_891_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_4_reg_1302 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_5_reg_1307 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln24_4_fu_906_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_5_reg_1318 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_6_reg_1323 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln24_5_fu_926_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_6_reg_1334 : STD_LOGIC_VECTOR (63 downto 0);
    signal prod_addr_7_reg_1339 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln24_6_fu_936_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_7_reg_1350 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_7_fu_946_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal zext_ln23_fu_525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln23_1_fu_536_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln21_fu_667_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln23_2_fu_677_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_3_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_4_fu_720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln23_5_fu_730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_6_fu_749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln23_7_fu_759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln11_fu_773_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln11_1_fu_791_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln11_2_fu_828_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln11_3_fu_847_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln11_4_fu_867_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln11_5_fu_886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln11_6_fu_901_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln11_7_fu_916_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal k_fu_106 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln18_fu_541_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_k_load : STD_LOGIC_VECTOR (3 downto 0);
    signal i_fu_110 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln17_fu_648_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten_fu_114 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln17_1_fu_697_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (10 downto 0);
    signal kk_fu_118 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln16_fu_473_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_kk_load : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten61_fu_122 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln16_1_fu_806_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_sig_allocacmp_indvar_flatten61_load : STD_LOGIC_VECTOR (13 downto 0);
    signal jj_fu_126 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln15_fu_781_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_jj_1 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten115_fu_130 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln15_fu_369_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_indvar_flatten115_load : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln24_1_fu_921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_9_fu_931_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_10_fu_941_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_11_fu_951_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_12_fu_956_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_13_fu_961_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_14_fu_966_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_15_fu_971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_293_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_293_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_297_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_297_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln18_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln11_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln17_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln11_fu_393_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln11_1_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln11_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln11_1_fu_461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln16_fu_449_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln11_2_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln11_10_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln11_5_fu_493_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln23_fu_530_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_fu_565_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln_mid_fu_576_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln11_8_fu_583_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln_fu_569_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln11_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln_mid2_fu_606_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln11_9_fu_613_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln11_2_fu_587_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln11_3_fu_598_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln17_fu_624_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_9_fu_630_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln_mid1_fu_634_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln11_4_fu_617_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln21_fu_655_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln21_1_fu_659_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln23_1_fu_672_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln23_2_fu_682_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln17_1_fu_692_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln23_3_fu_715_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln23_4_fu_725_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln23_5_fu_744_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln23_6_fu_754_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln11_3_fu_786_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln16_1_fu_801_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln11_4_fu_823_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln11_5_fu_842_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln11_6_fu_862_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln11_7_fu_881_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln11_8_fu_896_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln11_9_fu_911_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter1_stage4 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_257 : BOOLEAN;
    signal ap_condition_969 : BOOLEAN;
    signal ap_condition_430 : BOOLEAN;
    signal ap_condition_311 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component bbgemm_dadd_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component bbgemm_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component bbgemm_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    dadd_64ns_64ns_64_5_full_dsp_1_U1 : component bbgemm_dadd_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_293_p0,
        din1 => grp_fu_293_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_293_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U2 : component bbgemm_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_297_p0,
        din1 => grp_fu_297_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_297_p2);

    flow_control_loop_pipe_U : component bbgemm_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage7,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_const_logic_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage7)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage4))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    i_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_969)) then 
                    i_fu_110 <= ap_const_lv7_0;
                elsif ((ap_const_boolean_1 = ap_condition_257)) then 
                    i_fu_110 <= select_ln17_fu_648_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten115_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_430)) then
                if ((icmp_ln15_fu_363_p2 = ap_const_lv1_0)) then 
                    indvar_flatten115_fu_130 <= add_ln15_fu_369_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten115_fu_130 <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten61_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_969)) then 
                    indvar_flatten61_fu_122 <= ap_const_lv14_0;
                elsif ((ap_const_boolean_1 = ap_condition_311)) then 
                    indvar_flatten61_fu_122 <= select_ln16_1_fu_806_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_969)) then 
                    indvar_flatten_fu_114 <= ap_const_lv11_0;
                elsif ((ap_const_boolean_1 = ap_condition_257)) then 
                    indvar_flatten_fu_114 <= select_ln17_1_fu_697_p3;
                end if;
            end if; 
        end if;
    end process;

    jj_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_969)) then 
                    jj_fu_126 <= ap_const_lv7_0;
                elsif ((ap_const_boolean_1 = ap_condition_311)) then 
                    jj_fu_126 <= select_ln15_fu_781_p3;
                end if;
            end if; 
        end if;
    end process;

    k_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_430)) then
                if ((icmp_ln15_fu_363_p2 = ap_const_lv1_0)) then 
                    k_fu_106 <= add_ln18_fu_541_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    k_fu_106 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    kk_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_430)) then
                if ((icmp_ln15_fu_363_p2 = ap_const_lv1_0)) then 
                    kk_fu_118 <= select_ln16_fu_473_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    kk_fu_118 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    reg_305 <= m2_q1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    reg_305 <= m2_q0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln15_fu_363_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln15_1_reg_1057 <= add_ln15_1_fu_401_p2;
                add_ln23_1_reg_1095 <= add_ln23_1_fu_515_p4;
                and_ln11_1_reg_1073 <= and_ln11_1_fu_443_p2;
                and_ln11_2_reg_1079 <= and_ln11_2_fu_467_p2;
                icmp_ln16_reg_1049 <= icmp_ln16_fu_387_p2;
                indvar_flatten61_load_reg_1044 <= ap_sig_allocacmp_indvar_flatten61_load;
                indvar_flatten_load_reg_1039 <= ap_sig_allocacmp_indvar_flatten_load;
                select_ln11_1_reg_1067 <= select_ln11_1_fu_411_p3;
                tmp_reg_1090 <= select_ln16_fu_473_p3(5 downto 3);
                trunc_ln20_reg_1085 <= trunc_ln20_fu_501_p1;
                trunc_ln23_1_reg_1062 <= trunc_ln23_1_fu_407_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln15_reg_1035 <= icmp_ln15_fu_363_p2;
                icmp_ln15_reg_1035_pp0_iter1_reg <= icmp_ln15_reg_1035;
                jj_1_reg_1025 <= ap_sig_allocacmp_jj_1;
                    prod_addr_2_reg_1244(0) <= zext_ln11_2_fu_828_p1(12 - 1 downto 0)(0);    prod_addr_2_reg_1244(11 downto 2) <= zext_ln11_2_fu_828_p1(12 - 1 downto 0)(11 downto 2);
                trunc_ln23_reg_1030 <= trunc_ln23_fu_359_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                m1_load_reg_1142 <= m1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                m2_load_2_reg_1147 <= m2_q1;
                m2_load_3_reg_1152 <= m2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                m2_load_5_reg_1177 <= m2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                m2_load_7_reg_1197 <= m2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_1_reg_1239 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul_2_reg_1260 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_3_reg_1281 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_4_reg_1302 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul_5_reg_1318 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul_6_reg_1334 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_7_reg_1350 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul_reg_1218 <= grp_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                    prod_addr_1_reg_1223(11 downto 1) <= zext_ln11_1_fu_791_p1(12 - 1 downto 0)(11 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    prod_addr_3_reg_1265(11 downto 2) <= zext_ln11_3_fu_847_p1(12 - 1 downto 0)(11 downto 2);
                select_ln11_6_reg_1115_pp0_iter1_reg <= select_ln11_6_reg_1115;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    prod_addr_4_reg_1286(1 downto 0) <= zext_ln11_4_fu_867_p1(12 - 1 downto 0)(1 downto 0);    prod_addr_4_reg_1286(11 downto 3) <= zext_ln11_4_fu_867_p1(12 - 1 downto 0)(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                    prod_addr_5_reg_1307(1) <= zext_ln11_5_fu_886_p1(12 - 1 downto 0)(1);    prod_addr_5_reg_1307(11 downto 3) <= zext_ln11_5_fu_886_p1(12 - 1 downto 0)(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                    prod_addr_6_reg_1323(0) <= zext_ln11_6_fu_901_p1(12 - 1 downto 0)(0);    prod_addr_6_reg_1323(11 downto 3) <= zext_ln11_6_fu_901_p1(12 - 1 downto 0)(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                    prod_addr_7_reg_1339(11 downto 3) <= zext_ln11_7_fu_916_p1(12 - 1 downto 0)(11 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                prod_addr_reg_1207 <= zext_ln11_fu_773_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_301 <= m2_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_310 <= prod_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_314 <= grp_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                select_ln11_6_reg_1115 <= select_ln11_6_fu_641_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                temp_x_reg_1167 <= temp_x_fu_735_p1;
            end if;
        end if;
    end process;
    prod_addr_1_reg_1223(0) <= '1';
    prod_addr_2_reg_1244(1) <= '1';
    prod_addr_3_reg_1265(1 downto 0) <= "11";
    prod_addr_4_reg_1286(2) <= '1';
    prod_addr_5_reg_1307(0) <= '1';
    prod_addr_5_reg_1307(2) <= '1';
    prod_addr_6_reg_1323(2 downto 1) <= "11";
    prod_addr_7_reg_1339(2 downto 0) <= "111";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage4_subdone, ap_condition_exit_pp0_iter1_stage4, ap_idle_pp0_0to0, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage4))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln15_1_fu_401_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_jj_1) + unsigned(ap_const_lv7_8));
    add_ln15_fu_369_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten115_load) + unsigned(ap_const_lv16_1));
    add_ln16_1_fu_801_p2 <= std_logic_vector(unsigned(indvar_flatten61_load_reg_1044) + unsigned(ap_const_lv14_1));
    add_ln16_fu_449_p2 <= std_logic_vector(unsigned(select_ln11_fu_393_p3) + unsigned(ap_const_lv7_8));
    add_ln17_1_fu_692_p2 <= std_logic_vector(unsigned(indvar_flatten_load_reg_1039) + unsigned(ap_const_lv11_1));
    add_ln17_fu_624_p2 <= std_logic_vector(unsigned(select_ln11_3_fu_598_p3) + unsigned(ap_const_lv7_1));
    add_ln18_fu_541_p2 <= std_logic_vector(unsigned(select_ln11_5_fu_493_p3) + unsigned(ap_const_lv4_1));
    add_ln21_1_fu_659_p4 <= ((trunc_ln21_fu_655_p1 & tmp_reg_1090) & trunc_ln20_reg_1085);
    add_ln23_1_fu_515_p4 <= ((tmp_fu_505_p4 & trunc_ln20_fu_501_p1) & select_ln11_1_fu_411_p3);
    add_ln_fu_569_p3 <= (empty_fu_565_p1 & trunc_ln23_reg_1030);
    add_ln_mid1_fu_634_p3 <= (empty_9_fu_630_p1 & select_ln11_1_reg_1067);
    add_ln_mid2_fu_606_p3 <= (ap_const_lv1_0 & select_ln11_1_reg_1067);
    add_ln_mid_fu_576_p3 <= (ap_const_lv1_0 & trunc_ln23_1_reg_1062);
    and_ln11_1_fu_443_p2 <= (xor_ln11_fu_419_p2 and icmp_ln17_fu_437_p2);
    and_ln11_2_fu_467_p2 <= (or_ln11_1_fu_461_p2 and and_ln11_fu_431_p2);
    and_ln11_fu_431_p2 <= (xor_ln11_fu_419_p2 and icmp_ln18_fu_425_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_257_assign_proc : process(icmp_ln15_reg_1035, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
                ap_condition_257 <= ((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_311_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln15_reg_1035, ap_block_pp0_stage7_11001)
    begin
                ap_condition_311 <= ((icmp_ln15_reg_1035 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7));
    end process;


    ap_condition_430_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_430 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_969_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
                ap_condition_969 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, icmp_ln15_reg_1035)
    begin
        if (((icmp_ln15_reg_1035 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage4_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, icmp_ln15_reg_1035_pp0_iter1_reg, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln15_reg_1035_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_condition_exit_pp0_iter1_stage4 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage7;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten115_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten115_fu_130)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten115_load <= ap_const_lv16_0;
        else 
            ap_sig_allocacmp_indvar_flatten115_load <= indvar_flatten115_fu_130;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten61_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten61_fu_122)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten61_load <= ap_const_lv14_0;
        else 
            ap_sig_allocacmp_indvar_flatten61_load <= indvar_flatten61_fu_122;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_114)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_114;
        end if; 
    end process;


    ap_sig_allocacmp_jj_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_loop_init, jj_fu_126)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_jj_1 <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_jj_1 <= jj_fu_126;
        end if; 
    end process;


    ap_sig_allocacmp_k_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, k_fu_106, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_k_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_k_load <= k_fu_106;
        end if; 
    end process;


    ap_sig_allocacmp_kk_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_loop_init, kk_fu_118)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_kk_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_kk_load <= kk_fu_118;
        end if; 
    end process;

    bitcast_ln23_1_fu_764_p1 <= reg_305;
    bitcast_ln23_2_fu_769_p1 <= m2_load_2_reg_1147;
    bitcast_ln23_3_fu_777_p1 <= m2_load_3_reg_1152;
    bitcast_ln23_4_fu_796_p1 <= reg_301;
    bitcast_ln23_5_fu_838_p1 <= m2_load_5_reg_1177;
    bitcast_ln23_6_fu_857_p1 <= reg_305;
    bitcast_ln23_7_fu_877_p1 <= m2_load_7_reg_1197;
    bitcast_ln23_fu_739_p1 <= reg_301;
    bitcast_ln24_10_fu_941_p1 <= reg_314;
    bitcast_ln24_11_fu_951_p1 <= reg_314;
    bitcast_ln24_12_fu_956_p1 <= reg_314;
    bitcast_ln24_13_fu_961_p1 <= reg_314;
    bitcast_ln24_14_fu_966_p1 <= reg_314;
    bitcast_ln24_15_fu_971_p1 <= reg_314;
    bitcast_ln24_1_fu_921_p1 <= reg_314;
    bitcast_ln24_2_fu_872_p1 <= reg_310;
    bitcast_ln24_3_fu_891_p1 <= reg_310;
    bitcast_ln24_4_fu_906_p1 <= reg_310;
    bitcast_ln24_5_fu_926_p1 <= reg_310;
    bitcast_ln24_6_fu_936_p1 <= reg_310;
    bitcast_ln24_7_fu_946_p1 <= reg_310;
    bitcast_ln24_8_fu_852_p1 <= reg_310;
    bitcast_ln24_9_fu_931_p1 <= reg_314;
    bitcast_ln24_fu_833_p1 <= reg_310;
    empty_9_fu_630_p1 <= add_ln17_fu_624_p2(6 - 1 downto 0);
    empty_fu_565_p1 <= i_fu_110(6 - 1 downto 0);

    grp_fu_293_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, bitcast_ln24_fu_833_p1, bitcast_ln24_8_fu_852_p1, bitcast_ln24_2_fu_872_p1, bitcast_ln24_3_fu_891_p1, bitcast_ln24_4_fu_906_p1, bitcast_ln24_5_fu_926_p1, bitcast_ln24_6_fu_936_p1, bitcast_ln24_7_fu_946_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_293_p0 <= bitcast_ln24_7_fu_946_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_293_p0 <= bitcast_ln24_6_fu_936_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_293_p0 <= bitcast_ln24_5_fu_926_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_293_p0 <= bitcast_ln24_4_fu_906_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_293_p0 <= bitcast_ln24_3_fu_891_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_293_p0 <= bitcast_ln24_2_fu_872_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_293_p0 <= bitcast_ln24_8_fu_852_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_293_p0 <= bitcast_ln24_fu_833_p1;
            else 
                grp_fu_293_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_293_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_293_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, mul_reg_1218, mul_1_reg_1239, mul_2_reg_1260, mul_3_reg_1281, mul_4_reg_1302, mul_5_reg_1318, mul_6_reg_1334, mul_7_reg_1350, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                grp_fu_293_p1 <= mul_7_reg_1350;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                grp_fu_293_p1 <= mul_6_reg_1334;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_293_p1 <= mul_5_reg_1318;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_293_p1 <= mul_4_reg_1302;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_293_p1 <= mul_3_reg_1281;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_293_p1 <= mul_2_reg_1260;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_293_p1 <= mul_1_reg_1239;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_293_p1 <= mul_reg_1218;
            else 
                grp_fu_293_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_293_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_297_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, temp_x_fu_735_p1, temp_x_reg_1167, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_297_p0 <= temp_x_reg_1167;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_297_p0 <= temp_x_fu_735_p1;
        else 
            grp_fu_297_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_297_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, bitcast_ln23_fu_739_p1, bitcast_ln23_1_fu_764_p1, bitcast_ln23_2_fu_769_p1, bitcast_ln23_3_fu_777_p1, bitcast_ln23_4_fu_796_p1, bitcast_ln23_5_fu_838_p1, bitcast_ln23_6_fu_857_p1, bitcast_ln23_7_fu_877_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_297_p1 <= bitcast_ln23_7_fu_877_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_297_p1 <= bitcast_ln23_6_fu_857_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_297_p1 <= bitcast_ln23_5_fu_838_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_297_p1 <= bitcast_ln23_4_fu_796_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_297_p1 <= bitcast_ln23_3_fu_777_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_297_p1 <= bitcast_ln23_2_fu_769_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_297_p1 <= bitcast_ln23_1_fu_764_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_297_p1 <= bitcast_ln23_fu_739_p1;
        else 
            grp_fu_297_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln15_fu_363_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten115_load = ap_const_lv16_8000) else "0";
    icmp_ln16_fu_387_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten61_load = ap_const_lv14_1000) else "0";
    icmp_ln17_fu_437_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv11_200) else "0";
    icmp_ln18_fu_425_p2 <= "1" when (ap_sig_allocacmp_k_load = ap_const_lv4_8) else "0";
    m1_address0 <= zext_ln21_fu_667_p1(12 - 1 downto 0);

    m1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            m1_ce0 <= ap_const_logic_1;
        else 
            m1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    m2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage0, zext_ln23_1_fu_536_p1, ap_block_pp0_stage1, zext_ln23_3_fu_687_p1, ap_block_pp0_stage2, zext_ln23_5_fu_730_p1, ap_block_pp0_stage3, zext_ln23_7_fu_759_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                m2_address0 <= zext_ln23_7_fu_759_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                m2_address0 <= zext_ln23_5_fu_730_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                m2_address0 <= zext_ln23_3_fu_687_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                m2_address0 <= zext_ln23_1_fu_536_p1(12 - 1 downto 0);
            else 
                m2_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            m2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    m2_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, zext_ln23_fu_525_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln23_2_fu_677_p1, zext_ln23_4_fu_720_p1, ap_block_pp0_stage2, zext_ln23_6_fu_749_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                m2_address1 <= zext_ln23_6_fu_749_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                m2_address1 <= zext_ln23_4_fu_720_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                m2_address1 <= zext_ln23_2_fu_677_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                m2_address1 <= zext_ln23_fu_525_p1(12 - 1 downto 0);
            else 
                m2_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            m2_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    m2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            m2_ce0 <= ap_const_logic_1;
        else 
            m2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    m2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            m2_ce1 <= ap_const_logic_1;
        else 
            m2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln11_10_fu_487_p2 <= (or_ln11_2_fu_481_p2 or icmp_ln16_fu_387_p2);
    or_ln11_1_fu_461_p2 <= (xor_ln11_1_fu_455_p2 or icmp_ln16_fu_387_p2);
    or_ln11_2_fu_481_p2 <= (and_ln11_2_fu_467_p2 or and_ln11_1_fu_443_p2);
    or_ln11_3_fu_786_p2 <= (select_ln11_6_reg_1115 or ap_const_lv12_1);
    or_ln11_4_fu_823_p2 <= (select_ln11_6_reg_1115 or ap_const_lv12_2);
    or_ln11_5_fu_842_p2 <= (select_ln11_6_reg_1115 or ap_const_lv12_3);
    or_ln11_6_fu_862_p2 <= (select_ln11_6_reg_1115_pp0_iter1_reg or ap_const_lv12_4);
    or_ln11_7_fu_881_p2 <= (select_ln11_6_reg_1115_pp0_iter1_reg or ap_const_lv12_5);
    or_ln11_8_fu_896_p2 <= (select_ln11_6_reg_1115_pp0_iter1_reg or ap_const_lv12_6);
    or_ln11_9_fu_911_p2 <= (select_ln11_6_reg_1115_pp0_iter1_reg or ap_const_lv12_7);
    or_ln11_fu_594_p2 <= (icmp_ln16_reg_1049 or and_ln11_1_reg_1073);
    or_ln23_1_fu_672_p2 <= (ap_const_lv12_2 or add_ln23_1_reg_1095);
    or_ln23_2_fu_682_p2 <= (ap_const_lv12_3 or add_ln23_1_reg_1095);
    or_ln23_3_fu_715_p2 <= (ap_const_lv12_4 or add_ln23_1_reg_1095);
    or_ln23_4_fu_725_p2 <= (ap_const_lv12_5 or add_ln23_1_reg_1095);
    or_ln23_5_fu_744_p2 <= (ap_const_lv12_6 or add_ln23_1_reg_1095);
    or_ln23_6_fu_754_p2 <= (ap_const_lv12_7 or add_ln23_1_reg_1095);
    or_ln23_fu_530_p2 <= (ap_const_lv12_1 or add_ln23_1_fu_515_p4);

    prod_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, prod_addr_reg_1207, prod_addr_1_reg_1223, prod_addr_2_reg_1244, prod_addr_3_reg_1265, prod_addr_4_reg_1286, prod_addr_5_reg_1307, prod_addr_6_reg_1323, prod_addr_7_reg_1339, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            prod_address0 <= prod_addr_7_reg_1339;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            prod_address0 <= prod_addr_6_reg_1323;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            prod_address0 <= prod_addr_5_reg_1307;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            prod_address0 <= prod_addr_4_reg_1286;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            prod_address0 <= prod_addr_3_reg_1265;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            prod_address0 <= prod_addr_2_reg_1244;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            prod_address0 <= prod_addr_1_reg_1223;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            prod_address0 <= prod_addr_reg_1207;
        else 
            prod_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    prod_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, zext_ln11_fu_773_p1, ap_block_pp0_stage6, zext_ln11_1_fu_791_p1, ap_block_pp0_stage7, zext_ln11_2_fu_828_p1, zext_ln11_3_fu_847_p1, zext_ln11_4_fu_867_p1, zext_ln11_5_fu_886_p1, zext_ln11_6_fu_901_p1, ap_block_pp0_stage4, zext_ln11_7_fu_916_p1, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            prod_address1 <= zext_ln11_7_fu_916_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            prod_address1 <= zext_ln11_6_fu_901_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            prod_address1 <= zext_ln11_5_fu_886_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            prod_address1 <= zext_ln11_4_fu_867_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            prod_address1 <= zext_ln11_3_fu_847_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            prod_address1 <= zext_ln11_2_fu_828_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            prod_address1 <= zext_ln11_1_fu_791_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            prod_address1 <= zext_ln11_fu_773_p1(12 - 1 downto 0);
        else 
            prod_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    prod_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            prod_ce0 <= ap_const_logic_1;
        else 
            prod_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    prod_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            prod_ce1 <= ap_const_logic_1;
        else 
            prod_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    prod_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage4, ap_block_pp0_stage5, bitcast_ln24_1_fu_921_p1, bitcast_ln24_9_fu_931_p1, bitcast_ln24_10_fu_941_p1, bitcast_ln24_11_fu_951_p1, bitcast_ln24_12_fu_956_p1, bitcast_ln24_13_fu_961_p1, bitcast_ln24_14_fu_966_p1, bitcast_ln24_15_fu_971_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            prod_d0 <= bitcast_ln24_15_fu_971_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            prod_d0 <= bitcast_ln24_14_fu_966_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            prod_d0 <= bitcast_ln24_13_fu_961_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            prod_d0 <= bitcast_ln24_12_fu_956_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            prod_d0 <= bitcast_ln24_11_fu_951_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            prod_d0 <= bitcast_ln24_10_fu_941_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            prod_d0 <= bitcast_ln24_9_fu_931_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            prod_d0 <= bitcast_ln24_1_fu_921_p1;
        else 
            prod_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    prod_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            prod_we0 <= ap_const_logic_1;
        else 
            prod_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln11_1_fu_411_p3 <= 
        trunc_ln23_1_fu_407_p1 when (icmp_ln16_fu_387_p2(0) = '1') else 
        trunc_ln23_fu_359_p1;
    select_ln11_2_fu_587_p3 <= 
        zext_ln11_8_fu_583_p1 when (icmp_ln16_reg_1049(0) = '1') else 
        add_ln_fu_569_p3;
    select_ln11_3_fu_598_p3 <= 
        ap_const_lv7_0 when (or_ln11_fu_594_p2(0) = '1') else 
        i_fu_110;
    select_ln11_4_fu_617_p3 <= 
        zext_ln11_9_fu_613_p1 when (and_ln11_1_reg_1073(0) = '1') else 
        select_ln11_2_fu_587_p3;
    select_ln11_5_fu_493_p3 <= 
        ap_const_lv4_0 when (or_ln11_10_fu_487_p2(0) = '1') else 
        ap_sig_allocacmp_k_load;
    select_ln11_6_fu_641_p3 <= 
        add_ln_mid1_fu_634_p3 when (and_ln11_2_reg_1079(0) = '1') else 
        select_ln11_4_fu_617_p3;
    select_ln11_fu_393_p3 <= 
        ap_const_lv7_0 when (icmp_ln16_fu_387_p2(0) = '1') else 
        ap_sig_allocacmp_kk_load;
    select_ln15_fu_781_p3 <= 
        add_ln15_1_reg_1057 when (icmp_ln16_reg_1049(0) = '1') else 
        jj_1_reg_1025;
    select_ln16_1_fu_806_p3 <= 
        ap_const_lv14_1 when (icmp_ln16_reg_1049(0) = '1') else 
        add_ln16_1_fu_801_p2;
    select_ln16_fu_473_p3 <= 
        add_ln16_fu_449_p2 when (and_ln11_1_fu_443_p2(0) = '1') else 
        select_ln11_fu_393_p3;
    select_ln17_1_fu_697_p3 <= 
        ap_const_lv11_1 when (or_ln11_fu_594_p2(0) = '1') else 
        add_ln17_1_fu_692_p2;
    select_ln17_fu_648_p3 <= 
        add_ln17_fu_624_p2 when (and_ln11_2_reg_1079(0) = '1') else 
        select_ln11_3_fu_598_p3;
    temp_x_fu_735_p1 <= m1_load_reg_1142;
    tmp_fu_505_p4 <= select_ln16_fu_473_p3(5 downto 3);
    trunc_ln20_fu_501_p1 <= select_ln11_5_fu_493_p3(3 - 1 downto 0);
    trunc_ln21_fu_655_p1 <= select_ln17_fu_648_p3(6 - 1 downto 0);
    trunc_ln23_1_fu_407_p1 <= add_ln15_1_fu_401_p2(6 - 1 downto 0);
    trunc_ln23_fu_359_p1 <= ap_sig_allocacmp_jj_1(6 - 1 downto 0);
    xor_ln11_1_fu_455_p2 <= (icmp_ln17_fu_437_p2 xor ap_const_lv1_1);
    xor_ln11_fu_419_p2 <= (icmp_ln16_fu_387_p2 xor ap_const_lv1_1);
    zext_ln11_1_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln11_3_fu_786_p2),64));
    zext_ln11_2_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln11_4_fu_823_p2),64));
    zext_ln11_3_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln11_5_fu_842_p2),64));
    zext_ln11_4_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln11_6_fu_862_p2),64));
    zext_ln11_5_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln11_7_fu_881_p2),64));
    zext_ln11_6_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln11_8_fu_896_p2),64));
    zext_ln11_7_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln11_9_fu_911_p2),64));
    zext_ln11_8_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln_mid_fu_576_p3),12));
    zext_ln11_9_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln_mid2_fu_606_p3),12));
    zext_ln11_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln11_6_reg_1115),64));
    zext_ln21_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln21_1_fu_659_p4),64));
    zext_ln23_1_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_fu_530_p2),64));
    zext_ln23_2_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_1_fu_672_p2),64));
    zext_ln23_3_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_2_fu_682_p2),64));
    zext_ln23_4_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_3_fu_715_p2),64));
    zext_ln23_5_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_4_fu_725_p2),64));
    zext_ln23_6_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_5_fu_744_p2),64));
    zext_ln23_7_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_6_fu_754_p2),64));
    zext_ln23_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_1_fu_515_p4),64));
end behav;
