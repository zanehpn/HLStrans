

================================================================
== Synthesis Summary Report of 'qs'
================================================================
+ General Information: 
    * Date:           Tue May  6 09:28:47 2025
    * Version:        2022.2.2 (Build 3779808 on Feb 17 2023)
    * Project:        qs
    * Solution:       solution1 (Vivado IP Flow Target)
    * Product family: virtexuplus
    * Target device:  xcu55c-fsvh2892-2L-e
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +----------------------+------+------+---------+--------+----------+---------+------+----------+------+----+------------+------------+-----+
    |        Modules       | Issue|      | Latency | Latency| Iteration|         | Trip |          |      |    |            |            |     |
    |        & Loops       | Type | Slack| (cycles)|  (ns)  |  Latency | Interval| Count| Pipelined| BRAM | DSP|     FF     |     LUT    | URAM|
    +----------------------+------+------+---------+--------+----------+---------+------+----------+------+----+------------+------------+-----+
    |+ qs                  |     -|  0.00|        -|       -|         -|        -|     -|        no|     -|   -|  8696 (~0%)|  5112 (~0%)|    -|
    | o VITIS_LOOP_23_1    |     -|  3.65|        -|       -|         -|        -|     -|        no|     -|   -|           -|           -|    -|
    |  o VITIS_LOOP_32_2   |     -|  3.65|        -|       -|         -|        -|     -|        no|     -|   -|           -|           -|    -|
    |   o VITIS_LOOP_35_3  |     -|  3.65|        -|       -|        10|        -|     -|        no|     -|   -|           -|           -|    -|
    |   o VITIS_LOOP_37_4  |     -|  3.65|        -|       -|        10|        -|     -|        no|     -|   -|           -|           -|    -|
    +----------------------+------+------+---------+--------+----------+---------+------+----------+------+----+------------+------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+-------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| Interface   | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   |
|             | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |
+-------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| m_axi_gmem0 | 32 -> 32   | 64            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          |
+-------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+

* S_AXILITE Interfaces
+-----------------+------------+---------------+--------+----------+
| Interface       | Data Width | Address Width | Offset | Register |
+-----------------+------------+---------------+--------+----------+
| s_axi_control   | 32         | 5             | 16     | 0        |
| s_axi_control_r | 32         | 5             | 16     | 0        |
+-----------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+-----------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| Interface       | Register | Offset | Width | Access | Description                      | Bit Fields                                                           |
+-----------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| s_axi_control   | CTRL     | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control   | GIER     | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                             |
| s_axi_control   | IP_IER   | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                        |
| s_axi_control   | IP_ISR   | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                        |
| s_axi_control   | n        | 0x10   | 32    | W      | Data signal of n                 |                                                                      |
| s_axi_control_r | arr_1    | 0x10   | 32    | W      | Data signal of arr               |                                                                      |
| s_axi_control_r | arr_2    | 0x14   | 32    | W      | Data signal of arr               |                                                                      |
+-----------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+------------+-----------+
| Interface | Type       | Ports     |
+-----------+------------+-----------+
| ap_clk    | clock      | ap_clk    |
| ap_rst_n  | reset      | ap_rst_n  |
| interrupt | interrupt  | interrupt |
| ap_ctrl   | ap_ctrl_hs |           |
+-----------+------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+----------+
| Argument | Direction | Datatype |
+----------+-----------+----------+
| arr      | inout     | int*     |
| n        | in        | int      |
+----------+-----------+----------+

* SW-to-HW Mapping
+----------+-----------------+-----------+----------+---------------------------------+
| Argument | HW Interface    | HW Type   | HW Usage | HW Info                         |
+----------+-----------------+-----------+----------+---------------------------------+
| arr      | m_axi_gmem0     | interface |          |                                 |
| arr      | s_axi_control_r | register  | offset   | name=arr_1 offset=0x10 range=32 |
| arr      | s_axi_control_r | register  | offset   | name=arr_2 offset=0x14 range=32 |
| n        | s_axi_control   | register  |          | name=n offset=0x10 range=32     |
+----------+-----------------+-----------+----------+---------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

  No burst in design

================================================================
== Bind Op Report
================================================================
+-----------------------------+-----+--------+---------------+-----+--------+---------+
| Name                        | DSP | Pragma | Variable      | Op  | Impl   | Latency |
+-----------------------------+-----+--------+---------------+-----+--------+---------+
| + qs                        | 0   |        |               |     |        |         |
|   stack_high_fu_14522_p2    | -   |        | stack_high    | add | fabric | 0       |
|   top_2_fu_14876_p2         | -   |        | top_2         | add | fabric | 0       |
|   add_ln30_fu_15039_p2      | -   |        | add_ln30      | add | fabric | 0       |
|   add_ln35_fu_15120_p2      | -   |        | add_ln35      | add | fabric | 0       |
|   add_ln35_1_fu_15132_p2    | -   |        | add_ln35_1    | add | fabric | 0       |
|   add_ln36_fu_15177_p2      | -   |        | add_ln36      | add | fabric | 0       |
|   grp_fu_14515_p2           | -   |        | i             | add | fabric | 0       |
|   add_ln36_2_fu_15214_p2    | -   |        | add_ln36_2    | add | fabric | 0       |
|   add_ln36_3_fu_15239_p2    | -   |        | add_ln36_3    | add | fabric | 0       |
|   add_ln37_fu_15262_p2      | -   |        | add_ln37      | add | fabric | 0       |
|   add_ln37_1_fu_15274_p2    | -   |        | add_ln37_1    | add | fabric | 0       |
|   add_ln38_fu_15319_p2      | -   |        | add_ln38      | add | fabric | 0       |
|   add_ln38_1_fu_15356_p2    | -   |        | add_ln38_1    | add | fabric | 0       |
|   add_ln40_fu_15090_p2      | -   |        | add_ln40      | add | fabric | 0       |
|   stack_high_65_fu_15385_p2 | -   |        | stack_high_65 | add | fabric | 0       |
|   grp_fu_14515_p2           | -   |        | stack_low_64  | add | fabric | 0       |
|   top_3_fu_15725_p2         | -   |        | top_3         | add | fabric | 0       |
+-----------------------------+-----+--------+---------------+-----+--------+---------+


================================================================
== Bind Storage Report
================================================================
  No bind storage info in design

================================================================
== Pragma Report
================================================================
* Valid Pragma Syntax
+-----------------+------------------------------------------+----------------------------------+
| Type            | Options                                  | Location                         |
+-----------------+------------------------------------------+----------------------------------+
| interface       | m_axi port=arr offset=slave bundle=gmem0 | qs_fast.cpp:10 in qs, arr        |
| interface       | s_axilite port=n bundle=control          | qs_fast.cpp:11 in qs, n          |
| interface       | s_axilite port=return bundle=control     | qs_fast.cpp:12 in qs, return     |
| array_partition | variable=stack_low complete              | qs_fast.cpp:16 in qs, stack_low  |
| array_partition | variable=stack_high complete             | qs_fast.cpp:17 in qs, stack_high |
| loop_tripcount  | min=1 max=MAX_N                          | qs_fast.cpp:24 in qs             |
| pipeline        | II=1                                     | qs_fast.cpp:25 in qs             |
| loop_tripcount  | min=1 max=MAX_N                          | qs_fast.cpp:33 in qs             |
| pipeline        | II=1                                     | qs_fast.cpp:34 in qs             |
+-----------------+------------------------------------------+----------------------------------+


