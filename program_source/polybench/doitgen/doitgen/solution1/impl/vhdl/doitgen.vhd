-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity doitgen is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    nr : IN STD_LOGIC_VECTOR (31 downto 0);
    nq : IN STD_LOGIC_VECTOR (31 downto 0);
    np : IN STD_LOGIC_VECTOR (31 downto 0);
    A_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_we0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    A_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    A_ce1 : OUT STD_LOGIC;
    A_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    C4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    C4_ce0 : OUT STD_LOGIC;
    C4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    C4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    C4_ce1 : OUT STD_LOGIC;
    C4_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    sum_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    sum_ce0 : OUT STD_LOGIC;
    sum_we0 : OUT STD_LOGIC;
    sum_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    sum_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of doitgen is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "doitgen_doitgen,hls_ip_2022_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.660771,HLS_SYN_LAT=325001,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=10442,HLS_SYN_LUT=4903,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_1F4 : STD_LOGIC_VECTOR (8 downto 0) := "111110100";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_const_lv14_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000011";
    constant ap_const_lv14_4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_const_lv14_5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000101";
    constant ap_const_lv14_6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000110";
    constant ap_const_lv14_7 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000111";
    constant ap_const_lv14_8 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_const_lv14_9 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001001";
    constant ap_const_lv14_A : STD_LOGIC_VECTOR (13 downto 0) := "00000000001010";
    constant ap_const_lv14_B : STD_LOGIC_VECTOR (13 downto 0) := "00000000001011";
    constant ap_const_lv14_C : STD_LOGIC_VECTOR (13 downto 0) := "00000000001100";
    constant ap_const_lv14_D : STD_LOGIC_VECTOR (13 downto 0) := "00000000001101";
    constant ap_const_lv14_E : STD_LOGIC_VECTOR (13 downto 0) := "00000000001110";
    constant ap_const_lv14_F : STD_LOGIC_VECTOR (13 downto 0) := "00000000001111";
    constant ap_const_lv14_10 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_const_lv14_11 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010001";
    constant ap_const_lv14_12 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010010";
    constant ap_const_lv14_13 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010011";
    constant ap_const_lv14_14 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010100";
    constant ap_const_lv14_15 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010101";
    constant ap_const_lv14_16 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010110";
    constant ap_const_lv14_17 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010111";
    constant ap_const_lv14_18 : STD_LOGIC_VECTOR (13 downto 0) := "00000000011000";
    constant ap_const_lv14_19 : STD_LOGIC_VECTOR (13 downto 0) := "00000000011001";
    constant ap_const_lv14_1A : STD_LOGIC_VECTOR (13 downto 0) := "00000000011010";
    constant ap_const_lv14_1B : STD_LOGIC_VECTOR (13 downto 0) := "00000000011011";
    constant ap_const_lv14_1C : STD_LOGIC_VECTOR (13 downto 0) := "00000000011100";
    constant ap_const_lv14_1D : STD_LOGIC_VECTOR (13 downto 0) := "00000000011101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sub_ln19_fu_568_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln19_reg_1007 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln10_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln19_2_fu_609_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_2_reg_1052 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_3_fu_614_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_3_reg_1057 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln19_4_fu_627_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_4_reg_1072 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_5_fu_632_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_5_reg_1077 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_reg_1082 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_1_reg_1087 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln19_6_fu_645_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_6_reg_1102 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_7_fu_650_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_7_reg_1107 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_2_reg_1112 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_3_reg_1117 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln19_8_fu_663_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_8_reg_1132 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_9_fu_668_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_9_reg_1137 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_4_reg_1142 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_5_reg_1147 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln19_10_fu_681_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_10_reg_1162 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_11_fu_686_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_11_reg_1167 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_6_reg_1172 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_7_reg_1177 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal add_ln19_12_fu_699_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_12_reg_1192 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_13_fu_704_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_13_reg_1197 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_8_reg_1202 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_9_reg_1207 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln19_14_fu_717_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_14_reg_1222 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_15_fu_722_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_15_reg_1227 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_10_reg_1232 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_11_reg_1237 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln19_16_fu_735_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_16_reg_1252 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_17_fu_740_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_17_reg_1257 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_12_reg_1262 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_13_reg_1267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal add_ln19_18_fu_753_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_18_reg_1282 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_19_fu_758_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_19_reg_1287 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_14_reg_1292 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_15_reg_1297 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal add_ln19_20_fu_771_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_20_reg_1312 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_21_fu_776_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_21_reg_1317 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_16_reg_1322 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_17_reg_1327 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal add_ln19_22_fu_789_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_22_reg_1342 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_23_fu_794_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_23_reg_1347 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_18_reg_1352 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_19_reg_1357 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal add_ln19_24_fu_807_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_24_reg_1372 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_25_fu_812_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_25_reg_1377 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_20_reg_1382 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_21_reg_1387 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal add_ln19_26_fu_825_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_26_reg_1402 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_27_fu_830_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_27_reg_1407 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_22_reg_1412 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_23_reg_1417 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal add_ln19_28_fu_843_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_28_reg_1432 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_29_fu_848_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_29_reg_1437 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_load_24_reg_1442 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_25_reg_1447 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal A_load_26_reg_1462 : STD_LOGIC_VECTOR (63 downto 0);
    signal A_load_27_reg_1467 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_1_fu_861_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_1_reg_1472 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal bitcast_ln19_3_fu_865_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_3_reg_1477 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_5_fu_869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_5_reg_1482 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_7_fu_873_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_7_reg_1487 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_9_fu_877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_9_reg_1492 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_11_fu_881_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_11_reg_1497 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_13_fu_885_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_13_reg_1502 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_15_fu_889_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_15_reg_1507 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_17_fu_893_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_17_reg_1512 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_19_fu_897_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_19_reg_1517 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_21_fu_901_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_21_reg_1522 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_23_fu_905_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_23_reg_1527 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_25_fu_909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_25_reg_1532 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_27_fu_913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_27_reg_1537 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_29_fu_917_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_29_reg_1542 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_31_fu_921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_31_reg_1547 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_33_fu_925_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_33_reg_1552 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_35_fu_929_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_35_reg_1557 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_37_fu_933_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_37_reg_1562 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_39_fu_937_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_39_reg_1567 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_41_fu_941_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_41_reg_1572 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_43_fu_945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_43_reg_1577 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_45_fu_949_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_45_reg_1582 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_47_fu_953_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_47_reg_1587 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_49_fu_957_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_49_reg_1592 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_51_fu_961_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_51_reg_1597 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_53_fu_965_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_53_reg_1602 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_55_fu_969_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_55_reg_1607 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_57_fu_973_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_57_reg_1612 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_59_fu_978_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln19_59_reg_1617 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_start : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_done : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_idle : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_ready : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_C4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_C4_ce0 : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_C4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_C4_ce1 : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_ce0 : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_we0 : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_start : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_done : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_idle : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_ready : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_ce0 : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_we0 : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_sum_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_sum_ce0 : STD_LOGIC;
    signal grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal zext_ln19_37_fu_595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_38_fu_604_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_39_fu_619_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_40_fu_623_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_41_fu_637_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_42_fu_641_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_43_fu_655_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_44_fu_659_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_45_fu_673_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_46_fu_677_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_47_fu_691_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_48_fu_695_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_49_fu_709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_50_fu_713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_51_fu_727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_52_fu_731_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_53_fu_745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_54_fu_749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_55_fu_763_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_56_fu_767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_57_fu_781_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_58_fu_785_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_59_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_60_fu_803_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_61_fu_817_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_62_fu_821_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_63_fu_835_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_64_fu_839_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_65_fu_853_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_66_fu_857_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal q_fu_132 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln13_fu_574_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_fu_136 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln10_1_fu_496_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_140 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln10_1_fu_464_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln13_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln10_fu_476_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_504_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_516_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln19_fu_512_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln19_34_fu_524_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln10_fu_488_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln19_fu_528_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln19_35_fu_534_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln19_1_fu_538_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln19_fu_544_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_556_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_fu_548_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln19_36_fu_564_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln19_fu_599_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component doitgen_doitgen_Pipeline_VITIS_LOOP_16_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        C4_ce0 : OUT STD_LOGIC;
        C4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        C4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        C4_ce1 : OUT STD_LOGIC;
        C4_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        sum_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        sum_ce0 : OUT STD_LOGIC;
        sum_we0 : OUT STD_LOGIC;
        sum_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_5 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_7 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_9 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_11 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_13 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_15 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_17 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_19 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_21 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_23 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_25 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_27 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_29 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_31 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_33 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_35 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_37 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_39 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_41 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_43 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_45 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_47 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_49 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_51 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_53 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_55 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_57 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln19_59 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component doitgen_doitgen_Pipeline_VITIS_LOOP_22_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sub_ln19 : IN STD_LOGIC_VECTOR (13 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_we0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        sum_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        sum_ce0 : OUT STD_LOGIC;
        sum_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393 : component doitgen_doitgen_Pipeline_VITIS_LOOP_16_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_start,
        ap_done => grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_done,
        ap_idle => grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_idle,
        ap_ready => grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_ready,
        C4_address0 => grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_C4_address0,
        C4_ce0 => grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_C4_ce0,
        C4_q0 => C4_q0,
        C4_address1 => grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_C4_address1,
        C4_ce1 => grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_C4_ce1,
        C4_q1 => C4_q1,
        sum_address0 => grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_address0,
        sum_ce0 => grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_ce0,
        sum_we0 => grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_we0,
        sum_d0 => grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_d0,
        bitcast_ln19_1 => bitcast_ln19_1_reg_1472,
        bitcast_ln19_3 => bitcast_ln19_3_reg_1477,
        bitcast_ln19_5 => bitcast_ln19_5_reg_1482,
        bitcast_ln19_7 => bitcast_ln19_7_reg_1487,
        bitcast_ln19_9 => bitcast_ln19_9_reg_1492,
        bitcast_ln19_11 => bitcast_ln19_11_reg_1497,
        bitcast_ln19_13 => bitcast_ln19_13_reg_1502,
        bitcast_ln19_15 => bitcast_ln19_15_reg_1507,
        bitcast_ln19_17 => bitcast_ln19_17_reg_1512,
        bitcast_ln19_19 => bitcast_ln19_19_reg_1517,
        bitcast_ln19_21 => bitcast_ln19_21_reg_1522,
        bitcast_ln19_23 => bitcast_ln19_23_reg_1527,
        bitcast_ln19_25 => bitcast_ln19_25_reg_1532,
        bitcast_ln19_27 => bitcast_ln19_27_reg_1537,
        bitcast_ln19_29 => bitcast_ln19_29_reg_1542,
        bitcast_ln19_31 => bitcast_ln19_31_reg_1547,
        bitcast_ln19_33 => bitcast_ln19_33_reg_1552,
        bitcast_ln19_35 => bitcast_ln19_35_reg_1557,
        bitcast_ln19_37 => bitcast_ln19_37_reg_1562,
        bitcast_ln19_39 => bitcast_ln19_39_reg_1567,
        bitcast_ln19_41 => bitcast_ln19_41_reg_1572,
        bitcast_ln19_43 => bitcast_ln19_43_reg_1577,
        bitcast_ln19_45 => bitcast_ln19_45_reg_1582,
        bitcast_ln19_47 => bitcast_ln19_47_reg_1587,
        bitcast_ln19_49 => bitcast_ln19_49_reg_1592,
        bitcast_ln19_51 => bitcast_ln19_51_reg_1597,
        bitcast_ln19_53 => bitcast_ln19_53_reg_1602,
        bitcast_ln19_55 => bitcast_ln19_55_reg_1607,
        bitcast_ln19_57 => bitcast_ln19_57_reg_1612,
        bitcast_ln19_59 => bitcast_ln19_59_reg_1617);

    grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431 : component doitgen_doitgen_Pipeline_VITIS_LOOP_22_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_start,
        ap_done => grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_done,
        ap_idle => grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_idle,
        ap_ready => grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_ready,
        sub_ln19 => sub_ln19_reg_1007,
        A_address0 => grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_address0,
        A_ce0 => grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_ce0,
        A_we0 => grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_we0,
        A_d0 => grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_d0,
        sum_address0 => grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_sum_address0,
        sum_ce0 => grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_sum_ce0,
        sum_q0 => sum_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_ready = ap_const_logic_1)) then 
                    grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_ready = ap_const_logic_1)) then 
                    grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_fu_140 <= ap_const_lv9_0;
            elsif (((icmp_ln10_fu_458_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_fu_140 <= add_ln10_1_fu_464_p2;
            end if; 
        end if;
    end process;

    q_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                q_fu_132 <= ap_const_lv5_0;
            elsif (((icmp_ln10_fu_458_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                q_fu_132 <= add_ln13_fu_574_p2;
            end if; 
        end if;
    end process;

    r_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                r_fu_136 <= ap_const_lv5_0;
            elsif (((icmp_ln10_fu_458_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                r_fu_136 <= select_ln10_1_fu_496_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                A_load_10_reg_1232 <= A_q1;
                A_load_11_reg_1237 <= A_q0;
                    add_ln19_14_reg_1222(13 downto 1) <= add_ln19_14_fu_717_p2(13 downto 1);
                    add_ln19_15_reg_1227(13 downto 1) <= add_ln19_15_fu_722_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                A_load_12_reg_1262 <= A_q1;
                A_load_13_reg_1267 <= A_q0;
                    add_ln19_16_reg_1252(13 downto 1) <= add_ln19_16_fu_735_p2(13 downto 1);
                    add_ln19_17_reg_1257(13 downto 1) <= add_ln19_17_fu_740_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                A_load_14_reg_1292 <= A_q1;
                A_load_15_reg_1297 <= A_q0;
                    add_ln19_18_reg_1282(13 downto 1) <= add_ln19_18_fu_753_p2(13 downto 1);
                    add_ln19_19_reg_1287(13 downto 1) <= add_ln19_19_fu_758_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                A_load_16_reg_1322 <= A_q1;
                A_load_17_reg_1327 <= A_q0;
                    add_ln19_20_reg_1312(13 downto 1) <= add_ln19_20_fu_771_p2(13 downto 1);
                    add_ln19_21_reg_1317(13 downto 1) <= add_ln19_21_fu_776_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                A_load_18_reg_1352 <= A_q1;
                A_load_19_reg_1357 <= A_q0;
                    add_ln19_22_reg_1342(13 downto 1) <= add_ln19_22_fu_789_p2(13 downto 1);
                    add_ln19_23_reg_1347(13 downto 1) <= add_ln19_23_fu_794_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                A_load_1_reg_1087 <= A_q0;
                A_load_reg_1082 <= A_q1;
                    add_ln19_4_reg_1072(13 downto 1) <= add_ln19_4_fu_627_p2(13 downto 1);
                    add_ln19_5_reg_1077(13 downto 1) <= add_ln19_5_fu_632_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                A_load_20_reg_1382 <= A_q1;
                A_load_21_reg_1387 <= A_q0;
                    add_ln19_24_reg_1372(13 downto 1) <= add_ln19_24_fu_807_p2(13 downto 1);
                    add_ln19_25_reg_1377(13 downto 1) <= add_ln19_25_fu_812_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                A_load_22_reg_1412 <= A_q1;
                A_load_23_reg_1417 <= A_q0;
                    add_ln19_26_reg_1402(13 downto 1) <= add_ln19_26_fu_825_p2(13 downto 1);
                    add_ln19_27_reg_1407(13 downto 1) <= add_ln19_27_fu_830_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                A_load_24_reg_1442 <= A_q1;
                A_load_25_reg_1447 <= A_q0;
                    add_ln19_28_reg_1432(13 downto 1) <= add_ln19_28_fu_843_p2(13 downto 1);
                    add_ln19_29_reg_1437(13 downto 1) <= add_ln19_29_fu_848_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                A_load_26_reg_1462 <= A_q1;
                A_load_27_reg_1467 <= A_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                A_load_2_reg_1112 <= A_q1;
                A_load_3_reg_1117 <= A_q0;
                    add_ln19_6_reg_1102(13 downto 1) <= add_ln19_6_fu_645_p2(13 downto 1);
                    add_ln19_7_reg_1107(13 downto 1) <= add_ln19_7_fu_650_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                A_load_4_reg_1142 <= A_q1;
                A_load_5_reg_1147 <= A_q0;
                    add_ln19_8_reg_1132(13 downto 1) <= add_ln19_8_fu_663_p2(13 downto 1);
                    add_ln19_9_reg_1137(13 downto 1) <= add_ln19_9_fu_668_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                A_load_6_reg_1172 <= A_q1;
                A_load_7_reg_1177 <= A_q0;
                    add_ln19_10_reg_1162(13 downto 1) <= add_ln19_10_fu_681_p2(13 downto 1);
                    add_ln19_11_reg_1167(13 downto 1) <= add_ln19_11_fu_686_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                A_load_8_reg_1202 <= A_q1;
                A_load_9_reg_1207 <= A_q0;
                    add_ln19_12_reg_1192(13 downto 1) <= add_ln19_12_fu_699_p2(13 downto 1);
                    add_ln19_13_reg_1197(13 downto 1) <= add_ln19_13_fu_704_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    add_ln19_2_reg_1052(13 downto 1) <= add_ln19_2_fu_609_p2(13 downto 1);
                    add_ln19_3_reg_1057(13 downto 1) <= add_ln19_3_fu_614_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                bitcast_ln19_11_reg_1497 <= bitcast_ln19_11_fu_881_p1;
                bitcast_ln19_13_reg_1502 <= bitcast_ln19_13_fu_885_p1;
                bitcast_ln19_15_reg_1507 <= bitcast_ln19_15_fu_889_p1;
                bitcast_ln19_17_reg_1512 <= bitcast_ln19_17_fu_893_p1;
                bitcast_ln19_19_reg_1517 <= bitcast_ln19_19_fu_897_p1;
                bitcast_ln19_1_reg_1472 <= bitcast_ln19_1_fu_861_p1;
                bitcast_ln19_21_reg_1522 <= bitcast_ln19_21_fu_901_p1;
                bitcast_ln19_23_reg_1527 <= bitcast_ln19_23_fu_905_p1;
                bitcast_ln19_25_reg_1532 <= bitcast_ln19_25_fu_909_p1;
                bitcast_ln19_27_reg_1537 <= bitcast_ln19_27_fu_913_p1;
                bitcast_ln19_29_reg_1542 <= bitcast_ln19_29_fu_917_p1;
                bitcast_ln19_31_reg_1547 <= bitcast_ln19_31_fu_921_p1;
                bitcast_ln19_33_reg_1552 <= bitcast_ln19_33_fu_925_p1;
                bitcast_ln19_35_reg_1557 <= bitcast_ln19_35_fu_929_p1;
                bitcast_ln19_37_reg_1562 <= bitcast_ln19_37_fu_933_p1;
                bitcast_ln19_39_reg_1567 <= bitcast_ln19_39_fu_937_p1;
                bitcast_ln19_3_reg_1477 <= bitcast_ln19_3_fu_865_p1;
                bitcast_ln19_41_reg_1572 <= bitcast_ln19_41_fu_941_p1;
                bitcast_ln19_43_reg_1577 <= bitcast_ln19_43_fu_945_p1;
                bitcast_ln19_45_reg_1582 <= bitcast_ln19_45_fu_949_p1;
                bitcast_ln19_47_reg_1587 <= bitcast_ln19_47_fu_953_p1;
                bitcast_ln19_49_reg_1592 <= bitcast_ln19_49_fu_957_p1;
                bitcast_ln19_51_reg_1597 <= bitcast_ln19_51_fu_961_p1;
                bitcast_ln19_53_reg_1602 <= bitcast_ln19_53_fu_965_p1;
                bitcast_ln19_55_reg_1607 <= bitcast_ln19_55_fu_969_p1;
                bitcast_ln19_57_reg_1612 <= bitcast_ln19_57_fu_973_p1;
                bitcast_ln19_59_reg_1617 <= bitcast_ln19_59_fu_978_p1;
                bitcast_ln19_5_reg_1482 <= bitcast_ln19_5_fu_869_p1;
                bitcast_ln19_7_reg_1487 <= bitcast_ln19_7_fu_873_p1;
                bitcast_ln19_9_reg_1492 <= bitcast_ln19_9_fu_877_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_fu_458_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    sub_ln19_reg_1007(13 downto 1) <= sub_ln19_fu_568_p2(13 downto 1);
            end if;
        end if;
    end process;
    sub_ln19_reg_1007(0) <= '0';
    add_ln19_2_reg_1052(0) <= '0';
    add_ln19_3_reg_1057(0) <= '1';
    add_ln19_4_reg_1072(0) <= '0';
    add_ln19_5_reg_1077(0) <= '1';
    add_ln19_6_reg_1102(0) <= '0';
    add_ln19_7_reg_1107(0) <= '1';
    add_ln19_8_reg_1132(0) <= '0';
    add_ln19_9_reg_1137(0) <= '1';
    add_ln19_10_reg_1162(0) <= '0';
    add_ln19_11_reg_1167(0) <= '1';
    add_ln19_12_reg_1192(0) <= '0';
    add_ln19_13_reg_1197(0) <= '1';
    add_ln19_14_reg_1222(0) <= '0';
    add_ln19_15_reg_1227(0) <= '1';
    add_ln19_16_reg_1252(0) <= '0';
    add_ln19_17_reg_1257(0) <= '1';
    add_ln19_18_reg_1282(0) <= '0';
    add_ln19_19_reg_1287(0) <= '1';
    add_ln19_20_reg_1312(0) <= '0';
    add_ln19_21_reg_1317(0) <= '1';
    add_ln19_22_reg_1342(0) <= '0';
    add_ln19_23_reg_1347(0) <= '1';
    add_ln19_24_reg_1372(0) <= '0';
    add_ln19_25_reg_1377(0) <= '1';
    add_ln19_26_reg_1402(0) <= '0';
    add_ln19_27_reg_1407(0) <= '1';
    add_ln19_28_reg_1432(0) <= '0';
    add_ln19_29_reg_1437(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln10_fu_458_p2, grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_done, grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_done, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln10_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_address0, ap_CS_fsm_state21, zext_ln19_38_fu_604_p1, zext_ln19_40_fu_623_p1, zext_ln19_42_fu_641_p1, zext_ln19_44_fu_659_p1, zext_ln19_46_fu_677_p1, zext_ln19_48_fu_695_p1, zext_ln19_50_fu_713_p1, zext_ln19_52_fu_731_p1, zext_ln19_54_fu_749_p1, zext_ln19_56_fu_767_p1, zext_ln19_58_fu_785_p1, zext_ln19_60_fu_803_p1, zext_ln19_62_fu_821_p1, zext_ln19_64_fu_839_p1, zext_ln19_66_fu_857_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            A_address0 <= zext_ln19_66_fu_857_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            A_address0 <= zext_ln19_64_fu_839_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            A_address0 <= zext_ln19_62_fu_821_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            A_address0 <= zext_ln19_60_fu_803_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            A_address0 <= zext_ln19_58_fu_785_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            A_address0 <= zext_ln19_56_fu_767_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            A_address0 <= zext_ln19_54_fu_749_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            A_address0 <= zext_ln19_52_fu_731_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            A_address0 <= zext_ln19_50_fu_713_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_address0 <= zext_ln19_48_fu_695_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            A_address0 <= zext_ln19_46_fu_677_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_address0 <= zext_ln19_44_fu_659_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_address0 <= zext_ln19_42_fu_641_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_address0 <= zext_ln19_40_fu_623_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_address0 <= zext_ln19_38_fu_604_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            A_address0 <= grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_address0;
        else 
            A_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    A_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, zext_ln19_37_fu_595_p1, zext_ln19_39_fu_619_p1, zext_ln19_41_fu_637_p1, zext_ln19_43_fu_655_p1, zext_ln19_45_fu_673_p1, zext_ln19_47_fu_691_p1, zext_ln19_49_fu_709_p1, zext_ln19_51_fu_727_p1, zext_ln19_53_fu_745_p1, zext_ln19_55_fu_763_p1, zext_ln19_57_fu_781_p1, zext_ln19_59_fu_799_p1, zext_ln19_61_fu_817_p1, zext_ln19_63_fu_835_p1, zext_ln19_65_fu_853_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            A_address1 <= zext_ln19_65_fu_853_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            A_address1 <= zext_ln19_63_fu_835_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            A_address1 <= zext_ln19_61_fu_817_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            A_address1 <= zext_ln19_59_fu_799_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            A_address1 <= zext_ln19_57_fu_781_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            A_address1 <= zext_ln19_55_fu_763_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            A_address1 <= zext_ln19_53_fu_745_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            A_address1 <= zext_ln19_51_fu_727_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            A_address1 <= zext_ln19_49_fu_709_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            A_address1 <= zext_ln19_47_fu_691_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            A_address1 <= zext_ln19_45_fu_673_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_address1 <= zext_ln19_43_fu_655_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_address1 <= zext_ln19_41_fu_637_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_address1 <= zext_ln19_39_fu_619_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_address1 <= zext_ln19_37_fu_595_p1(14 - 1 downto 0);
        else 
            A_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    A_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_ce0, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            A_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            A_ce0 <= grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            A_ce1 <= ap_const_logic_1;
        else 
            A_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    A_d0 <= grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_d0;

    A_we0_assign_proc : process(grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_we0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            A_we0 <= grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_A_we0;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;

    C4_address0 <= grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_C4_address0;
    C4_address1 <= grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_C4_address1;
    C4_ce0 <= grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_C4_ce0;
    C4_ce1 <= grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_C4_ce1;
    add_ln10_1_fu_464_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_140) + unsigned(ap_const_lv9_1));
    add_ln10_fu_476_p2 <= std_logic_vector(unsigned(r_fu_136) + unsigned(ap_const_lv5_1));
    add_ln13_fu_574_p2 <= std_logic_vector(unsigned(select_ln10_fu_488_p3) + unsigned(ap_const_lv5_1));
    add_ln19_10_fu_681_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_A));
    add_ln19_11_fu_686_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_B));
    add_ln19_12_fu_699_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_C));
    add_ln19_13_fu_704_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_D));
    add_ln19_14_fu_717_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_E));
    add_ln19_15_fu_722_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_F));
    add_ln19_16_fu_735_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_10));
    add_ln19_17_fu_740_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_11));
    add_ln19_18_fu_753_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_12));
    add_ln19_19_fu_758_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_13));
    add_ln19_1_fu_538_p2 <= std_logic_vector(unsigned(add_ln19_fu_528_p2) + unsigned(zext_ln19_35_fu_534_p1));
    add_ln19_20_fu_771_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_14));
    add_ln19_21_fu_776_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_15));
    add_ln19_22_fu_789_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_16));
    add_ln19_23_fu_794_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_17));
    add_ln19_24_fu_807_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_18));
    add_ln19_25_fu_812_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_19));
    add_ln19_26_fu_825_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_1A));
    add_ln19_27_fu_830_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_1B));
    add_ln19_28_fu_843_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_1C));
    add_ln19_29_fu_848_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_1D));
    add_ln19_2_fu_609_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_2));
    add_ln19_3_fu_614_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_3));
    add_ln19_4_fu_627_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_4));
    add_ln19_5_fu_632_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_5));
    add_ln19_6_fu_645_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_6));
    add_ln19_7_fu_650_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_7));
    add_ln19_8_fu_663_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_8));
    add_ln19_9_fu_668_p2 <= std_logic_vector(unsigned(sub_ln19_reg_1007) + unsigned(ap_const_lv14_9));
    add_ln19_fu_528_p2 <= std_logic_vector(unsigned(zext_ln19_fu_512_p1) + unsigned(zext_ln19_34_fu_524_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_done)
    begin
        if ((grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_done)
    begin
        if ((grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln10_fu_458_p2)
    begin
        if (((icmp_ln10_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln10_fu_458_p2)
    begin
        if (((icmp_ln10_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln19_11_fu_881_p1 <= A_load_5_reg_1147;
    bitcast_ln19_13_fu_885_p1 <= A_load_6_reg_1172;
    bitcast_ln19_15_fu_889_p1 <= A_load_7_reg_1177;
    bitcast_ln19_17_fu_893_p1 <= A_load_8_reg_1202;
    bitcast_ln19_19_fu_897_p1 <= A_load_9_reg_1207;
    bitcast_ln19_1_fu_861_p1 <= A_load_reg_1082;
    bitcast_ln19_21_fu_901_p1 <= A_load_10_reg_1232;
    bitcast_ln19_23_fu_905_p1 <= A_load_11_reg_1237;
    bitcast_ln19_25_fu_909_p1 <= A_load_12_reg_1262;
    bitcast_ln19_27_fu_913_p1 <= A_load_13_reg_1267;
    bitcast_ln19_29_fu_917_p1 <= A_load_14_reg_1292;
    bitcast_ln19_31_fu_921_p1 <= A_load_15_reg_1297;
    bitcast_ln19_33_fu_925_p1 <= A_load_16_reg_1322;
    bitcast_ln19_35_fu_929_p1 <= A_load_17_reg_1327;
    bitcast_ln19_37_fu_933_p1 <= A_load_18_reg_1352;
    bitcast_ln19_39_fu_937_p1 <= A_load_19_reg_1357;
    bitcast_ln19_3_fu_865_p1 <= A_load_1_reg_1087;
    bitcast_ln19_41_fu_941_p1 <= A_load_20_reg_1382;
    bitcast_ln19_43_fu_945_p1 <= A_load_21_reg_1387;
    bitcast_ln19_45_fu_949_p1 <= A_load_22_reg_1412;
    bitcast_ln19_47_fu_953_p1 <= A_load_23_reg_1417;
    bitcast_ln19_49_fu_957_p1 <= A_load_24_reg_1442;
    bitcast_ln19_51_fu_961_p1 <= A_load_25_reg_1447;
    bitcast_ln19_53_fu_965_p1 <= A_load_26_reg_1462;
    bitcast_ln19_55_fu_969_p1 <= A_load_27_reg_1467;
    bitcast_ln19_57_fu_973_p1 <= A_q1;
    bitcast_ln19_59_fu_978_p1 <= A_q0;
    bitcast_ln19_5_fu_869_p1 <= A_load_2_reg_1112;
    bitcast_ln19_7_fu_873_p1 <= A_load_3_reg_1117;
    bitcast_ln19_9_fu_877_p1 <= A_load_4_reg_1142;
    grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_start <= grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_ap_start_reg;
    grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_start <= grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_ap_start_reg;
    icmp_ln10_fu_458_p2 <= "1" when (indvar_flatten_fu_140 = ap_const_lv9_1F4) else "0";
    icmp_ln13_fu_482_p2 <= "1" when (q_fu_132 = ap_const_lv5_14) else "0";
    or_ln19_fu_599_p2 <= (sub_ln19_reg_1007 or ap_const_lv14_1);
    p_shl_fu_548_p3 <= (trunc_ln19_fu_544_p1 & ap_const_lv5_0);
    select_ln10_1_fu_496_p3 <= 
        add_ln10_fu_476_p2 when (icmp_ln13_fu_482_p2(0) = '1') else 
        r_fu_136;
    select_ln10_fu_488_p3 <= 
        ap_const_lv5_0 when (icmp_ln13_fu_482_p2(0) = '1') else 
        q_fu_132;
    sub_ln19_fu_568_p2 <= std_logic_vector(unsigned(p_shl_fu_548_p3) - unsigned(zext_ln19_36_fu_564_p1));

    sum_address0_assign_proc : process(grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_address0, grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_sum_address0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            sum_address0 <= grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_sum_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            sum_address0 <= grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_address0;
        else 
            sum_address0 <= "XXXXX";
        end if; 
    end process;


    sum_ce0_assign_proc : process(grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_ce0, grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_sum_ce0, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            sum_ce0 <= grp_doitgen_Pipeline_VITIS_LOOP_22_5_fu_431_sum_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            sum_ce0 <= grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_ce0;
        else 
            sum_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sum_d0 <= grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_d0;

    sum_we0_assign_proc : process(grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_we0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            sum_we0 <= grp_doitgen_Pipeline_VITIS_LOOP_16_3_fu_393_sum_we0;
        else 
            sum_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_516_p3 <= (select_ln10_1_fu_496_p3 & ap_const_lv2_0);
    tmp_2_fu_556_p3 <= (add_ln19_1_fu_538_p2 & ap_const_lv1_0);
    tmp_fu_504_p3 <= (select_ln10_1_fu_496_p3 & ap_const_lv4_0);
    trunc_ln19_fu_544_p1 <= add_ln19_1_fu_538_p2(9 - 1 downto 0);
    zext_ln19_34_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_516_p3),10));
    zext_ln19_35_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln10_fu_488_p3),10));
    zext_ln19_36_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_556_p3),14));
    zext_ln19_37_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln19_reg_1007),64));
    zext_ln19_38_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln19_fu_599_p2),64));
    zext_ln19_39_fu_619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_2_reg_1052),64));
    zext_ln19_40_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_3_reg_1057),64));
    zext_ln19_41_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_4_reg_1072),64));
    zext_ln19_42_fu_641_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_5_reg_1077),64));
    zext_ln19_43_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_6_reg_1102),64));
    zext_ln19_44_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_7_reg_1107),64));
    zext_ln19_45_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_8_reg_1132),64));
    zext_ln19_46_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_9_reg_1137),64));
    zext_ln19_47_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_10_reg_1162),64));
    zext_ln19_48_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_11_reg_1167),64));
    zext_ln19_49_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_12_reg_1192),64));
    zext_ln19_50_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_13_reg_1197),64));
    zext_ln19_51_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_14_reg_1222),64));
    zext_ln19_52_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_15_reg_1227),64));
    zext_ln19_53_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_16_reg_1252),64));
    zext_ln19_54_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_17_reg_1257),64));
    zext_ln19_55_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_18_reg_1282),64));
    zext_ln19_56_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_19_reg_1287),64));
    zext_ln19_57_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_20_reg_1312),64));
    zext_ln19_58_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_21_reg_1317),64));
    zext_ln19_59_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_22_reg_1342),64));
    zext_ln19_60_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_23_reg_1347),64));
    zext_ln19_61_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_24_reg_1372),64));
    zext_ln19_62_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_25_reg_1377),64));
    zext_ln19_63_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_26_reg_1402),64));
    zext_ln19_64_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_27_reg_1407),64));
    zext_ln19_65_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_28_reg_1432),64));
    zext_ln19_66_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_29_reg_1437),64));
    zext_ln19_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_504_p3),10));
end behav;
