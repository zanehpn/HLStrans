-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lu is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_we0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    A_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    A_ce1 : OUT STD_LOGIC;
    A_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of lu is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "lu_lu,hls_ip_2022_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.330000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2977,HLS_SYN_LUT=3040,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (29 downto 0) := "000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (29 downto 0) := "000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (29 downto 0) := "000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (29 downto 0) := "000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (29 downto 0) := "000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (29 downto 0) := "000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (29 downto 0) := "000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (29 downto 0) := "000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (29 downto 0) := "000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (29 downto 0) := "001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (29 downto 0) := "010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (29 downto 0) := "100000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_29 : STD_LOGIC_VECTOR (11 downto 0) := "000000101001";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal j_2_reg_284 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln10_fu_159_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln10_reg_293 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln15_fu_185_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln15_reg_298 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln10_fu_153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln11_fu_191_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln11_reg_305 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln11_1_fu_195_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln11_1_reg_310 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln11_fu_206_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln11_reg_318 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln15_1_fu_216_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln15_1_reg_323 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln11_fu_201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln17_fu_232_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln17_reg_329 : STD_LOGIC_VECTOR (10 downto 0);
    signal A_addr_reg_334 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal A_load_reg_344 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal A_load_1_reg_349 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_136_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal div_reg_364 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_done : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_idle : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_ready : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce0 : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_we0 : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce1 : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_done : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_idle : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_ready : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_ce0 : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_we0 : STD_LOGIC;
    signal grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_reg_91 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal phi_mul_reg_103 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal zext_ln15_2_fu_254_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_58 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvars_iv3_fu_62 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln10_1_fu_239_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal bitcast_ln15_2_fu_266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_136_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_173_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_165_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln15_fu_181_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln15_1_fu_212_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln17_fu_232_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln17_fu_232_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal mul_ln17_fu_232_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln17_fu_232_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component lu_lu_Pipeline_VITIS_LOOP_12_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_we0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        A_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        A_ce1 : OUT STD_LOGIC;
        A_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        add_ln15_1 : IN STD_LOGIC_VECTOR (10 downto 0);
        j : IN STD_LOGIC_VECTOR (5 downto 0);
        add_ln15 : IN STD_LOGIC_VECTOR (10 downto 0);
        zext_ln11 : IN STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component lu_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln8 : IN STD_LOGIC_VECTOR (5 downto 0);
        mul_ln17 : IN STD_LOGIC_VECTOR (10 downto 0);
        j_3 : IN STD_LOGIC_VECTOR (5 downto 0);
        add_ln15 : IN STD_LOGIC_VECTOR (10 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_we0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        A_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component lu_ddiv_64ns_64ns_64_22_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component lu_mul_6ns_6ns_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114 : component lu_lu_Pipeline_VITIS_LOOP_12_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start,
        ap_done => grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_done,
        ap_idle => grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_idle,
        ap_ready => grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_ready,
        A_address0 => grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address0,
        A_ce0 => grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce0,
        A_we0 => grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_we0,
        A_d0 => grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_d0,
        A_q0 => A_q0,
        A_address1 => grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address1,
        A_ce1 => grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce1,
        A_q1 => A_q1,
        add_ln15_1 => add_ln15_1_reg_323,
        j => j_reg_91,
        add_ln15 => add_ln15_reg_298,
        zext_ln11 => j_reg_91);

    grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126 : component lu_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start,
        ap_done => grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_done,
        ap_idle => grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_idle,
        ap_ready => grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_ready,
        zext_ln8 => j_2_reg_284,
        mul_ln17 => mul_ln17_reg_329,
        j_3 => j_2_reg_284,
        add_ln15 => add_ln15_reg_298,
        A_address0 => grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_address0,
        A_ce0 => grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_ce0,
        A_we0 => grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_we0,
        A_d0 => grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_d0,
        A_q0 => A_q0);

    ddiv_64ns_64ns_64_22_no_dsp_1_U17 : component lu_ddiv_64ns_64ns_64_22_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 22,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_136_p0,
        din1 => grp_fu_136_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_136_p2);

    mul_6ns_6ns_11_1_1_U18 : component lu_mul_6ns_6ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln17_fu_232_p0,
        din1 => mul_ln17_fu_232_p1,
        dout => mul_ln17_fu_232_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln11_fu_201_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_ready = ap_const_logic_1)) then 
                    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln11_fu_201_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_ready = ap_const_logic_1)) then 
                    grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_58 <= ap_const_lv6_0;
            elsif (((icmp_ln11_fu_201_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_fu_58 <= add_ln10_reg_293;
            end if; 
        end if;
    end process;

    indvars_iv3_fu_62_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvars_iv3_fu_62 <= ap_const_lv6_28;
            elsif (((icmp_ln11_fu_201_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                indvars_iv3_fu_62 <= add_ln10_1_fu_239_p2;
            end if; 
        end if;
    end process;

    j_reg_91_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_fu_153_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_reg_91 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                j_reg_91 <= add_ln11_reg_318;
            end if; 
        end if;
    end process;

    phi_mul_reg_103_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_fu_153_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_mul_reg_103 <= ap_const_lv12_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                phi_mul_reg_103 <= add_ln11_1_reg_310;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                A_addr_reg_334 <= zext_ln15_2_fu_254_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                A_load_1_reg_349 <= A_q0;
                A_load_reg_344 <= A_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln10_reg_293 <= add_ln10_fu_159_p2;
                j_2_reg_284 <= i_fu_58;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln11_1_reg_310 <= add_ln11_1_fu_195_p2;
                add_ln11_reg_318 <= add_ln11_fu_206_p2;
                    zext_ln11_reg_305(11 downto 0) <= zext_ln11_fu_191_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln11_fu_201_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln15_1_reg_323 <= add_ln15_1_fu_216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_fu_153_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    add_ln15_reg_298(10 downto 3) <= add_ln15_fu_185_p2(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                div_reg_364 <= grp_fu_136_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln11_fu_201_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                mul_ln17_reg_329 <= mul_ln17_fu_232_p2;
            end if;
        end if;
    end process;
    add_ln15_reg_298(2 downto 0) <= "000";
    zext_ln11_reg_305(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln10_fu_153_p2, ap_CS_fsm_state3, icmp_ln11_fu_201_p2, grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_done, grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state30)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln10_fu_153_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln11_fu_201_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state30 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and (grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(A_addr_reg_334, ap_CS_fsm_state5, grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address0, grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_address0, ap_CS_fsm_state29, ap_CS_fsm_state4, ap_CS_fsm_state30, zext_ln15_2_fu_254_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            A_address0 <= A_addr_reg_334;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_address0 <= zext_ln15_2_fu_254_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            A_address0 <= grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_address0 <= grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address0;
        else 
            A_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    A_address1_assign_proc : process(zext_ln11_reg_305, ap_CS_fsm_state5, grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_address1 <= zext_ln11_reg_305(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_address1 <= grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_address1;
        else 
            A_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    A_ce0_assign_proc : process(ap_CS_fsm_state5, grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce0, grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_ce0, ap_CS_fsm_state29, ap_CS_fsm_state4, ap_CS_fsm_state30)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            A_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            A_ce0 <= grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_ce0 <= grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_ce1_assign_proc : process(ap_CS_fsm_state5, grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_ce1 <= grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_ce1;
        else 
            A_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_d0_assign_proc : process(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_d0, grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_d0, ap_CS_fsm_state29, ap_CS_fsm_state4, ap_CS_fsm_state30, bitcast_ln15_2_fu_266_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            A_d0 <= bitcast_ln15_2_fu_266_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            A_d0 <= grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_d0 <= grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_d0;
        else 
            A_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    A_we0_assign_proc : process(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_we0, grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_we0, ap_CS_fsm_state29, ap_CS_fsm_state4, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            A_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            A_we0 <= grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_A_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            A_we0 <= grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_A_we0;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln10_1_fu_239_p2 <= std_logic_vector(unsigned(indvars_iv3_fu_62) + unsigned(ap_const_lv6_3F));
    add_ln10_fu_159_p2 <= std_logic_vector(unsigned(i_fu_58) + unsigned(ap_const_lv6_1));
    add_ln11_1_fu_195_p2 <= std_logic_vector(unsigned(phi_mul_reg_103) + unsigned(ap_const_lv12_29));
    add_ln11_fu_206_p2 <= std_logic_vector(unsigned(j_reg_91) + unsigned(ap_const_lv6_1));
    add_ln15_1_fu_216_p2 <= std_logic_vector(unsigned(add_ln15_reg_298) + unsigned(zext_ln15_1_fu_212_p1));
    add_ln15_fu_185_p2 <= std_logic_vector(unsigned(tmp_fu_165_p3) + unsigned(zext_ln15_fu_181_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state30_blk_assign_proc : process(grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_done)
    begin
        if ((grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state30_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state30_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_done)
    begin
        if ((grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln10_fu_153_p2)
    begin
        if (((icmp_ln10_fu_153_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln10_fu_153_p2)
    begin
        if (((icmp_ln10_fu_153_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln15_2_fu_266_p1 <= div_reg_364;
    grp_fu_136_p0 <= A_load_1_reg_349;
    grp_fu_136_p1 <= A_load_reg_344;
    grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start <= grp_lu_Pipeline_VITIS_LOOP_12_3_fu_114_ap_start_reg;
    grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start <= grp_lu_Pipeline_VITIS_LOOP_17_4_VITIS_LOOP_18_5_fu_126_ap_start_reg;
    icmp_ln10_fu_153_p2 <= "1" when (i_fu_58 = ap_const_lv6_28) else "0";
    icmp_ln11_fu_201_p2 <= "1" when (j_reg_91 = i_fu_58) else "0";
    mul_ln17_fu_232_p0 <= mul_ln17_fu_232_p00(6 - 1 downto 0);
    mul_ln17_fu_232_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvars_iv3_fu_62),11));
    mul_ln17_fu_232_p1 <= mul_ln17_fu_232_p10(6 - 1 downto 0);
    mul_ln17_fu_232_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_58),11));
    tmp_1_fu_173_p3 <= (i_fu_58 & ap_const_lv3_0);
    tmp_fu_165_p3 <= (i_fu_58 & ap_const_lv5_0);
    zext_ln11_fu_191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_reg_103),64));
    zext_ln15_1_fu_212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_91),11));
    zext_ln15_2_fu_254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_1_reg_323),64));
    zext_ln15_fu_181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_173_p3),11));
end behav;
