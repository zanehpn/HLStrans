-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gramschmidt is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_we0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    A_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    A_ce1 : OUT STD_LOGIC;
    A_we1 : OUT STD_LOGIC;
    A_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    A_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    R_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    R_ce0 : OUT STD_LOGIC;
    R_we0 : OUT STD_LOGIC;
    R_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    Q_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    Q_ce0 : OUT STD_LOGIC;
    Q_we0 : OUT STD_LOGIC;
    Q_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    Q_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    Q_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    Q_ce1 : OUT STD_LOGIC;
    Q_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of gramschmidt is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "gramschmidt_gramschmidt,hls_ip_2022_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.625000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=23680,HLS_SYN_LUT=18976,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (33 downto 0) := "0000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (33 downto 0) := "0000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (33 downto 0) := "0000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (33 downto 0) := "0000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (33 downto 0) := "0000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (33 downto 0) := "0000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (33 downto 0) := "0001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (33 downto 0) := "0010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (33 downto 0) := "0100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (33 downto 0) := "1000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv7_5A : STD_LOGIC_VECTOR (6 downto 0) := "1011010";
    constant ap_const_lv8_78 : STD_LOGIC_VECTOR (7 downto 0) := "01111000";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv8_B4 : STD_LOGIC_VECTOR (7 downto 0) := "10110100";
    constant ap_const_lv7_52 : STD_LOGIC_VECTOR (6 downto 0) := "1010010";
    constant ap_const_lv9_F0 : STD_LOGIC_VECTOR (8 downto 0) := "011110000";
    constant ap_const_lv9_10E : STD_LOGIC_VECTOR (8 downto 0) := "100001110";
    constant ap_const_lv9_12C : STD_LOGIC_VECTOR (8 downto 0) := "100101100";
    constant ap_const_lv9_14A : STD_LOGIC_VECTOR (8 downto 0) := "101001010";
    constant ap_const_lv9_168 : STD_LOGIC_VECTOR (8 downto 0) := "101101000";
    constant ap_const_lv8_86 : STD_LOGIC_VECTOR (7 downto 0) := "10000110";
    constant ap_const_lv8_A4 : STD_LOGIC_VECTOR (7 downto 0) := "10100100";
    constant ap_const_lv7_42 : STD_LOGIC_VECTOR (6 downto 0) := "1000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_1FE : STD_LOGIC_VECTOR (9 downto 0) := "0111111110";
    constant ap_const_lv10_21C : STD_LOGIC_VECTOR (9 downto 0) := "1000011100";
    constant ap_const_lv10_23A : STD_LOGIC_VECTOR (9 downto 0) := "1000111010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal k_1_reg_772 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_338_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_793 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal zext_ln17_4_fu_378_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln17_4_reg_799 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal sub_ln17_fu_399_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln17_reg_806 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal zext_ln17_1_fu_438_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln17_1_reg_821 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal Q_load_reg_837 : STD_LOGIC_VECTOR (63 downto 0);
    signal Q_load_1_reg_842 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln17_2_fu_463_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln17_2_reg_847 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal Q_load_2_reg_864 : STD_LOGIC_VECTOR (63 downto 0);
    signal Q_load_3_reg_869 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal Q_load_4_reg_884 : STD_LOGIC_VECTOR (63 downto 0);
    signal Q_load_5_reg_889 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln17_fu_512_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln17_reg_894 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal Q_load_6_reg_911 : STD_LOGIC_VECTOR (63 downto 0);
    signal Q_load_7_reg_916 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal Q_load_8_reg_931 : STD_LOGIC_VECTOR (63 downto 0);
    signal Q_load_9_reg_936 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal Q_load_10_reg_951 : STD_LOGIC_VECTOR (63 downto 0);
    signal Q_load_11_reg_956 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal Q_load_12_reg_971 : STD_LOGIC_VECTOR (63 downto 0);
    signal Q_load_13_reg_976 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal Q_load_14_reg_991 : STD_LOGIC_VECTOR (63 downto 0);
    signal Q_load_15_reg_996 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal Q_load_16_reg_1011 : STD_LOGIC_VECTOR (63 downto 0);
    signal Q_load_17_reg_1016 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvars_iv32_load_reg_1021 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal bitcast_ln23_1_fu_659_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_1_reg_1026 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_3_fu_663_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_3_reg_1031 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_5_fu_667_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_5_reg_1036 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_7_fu_671_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_7_reg_1041 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_9_fu_675_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_9_reg_1046 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_11_fu_679_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_11_reg_1051 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_13_fu_683_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_13_reg_1056 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_15_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_15_reg_1061 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_17_fu_691_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_17_reg_1066 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_19_fu_695_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_19_reg_1071 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_21_fu_699_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_21_reg_1076 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_23_fu_703_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_23_reg_1081 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_25_fu_707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_25_reg_1086 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_27_fu_711_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_27_reg_1091 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_29_fu_715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_29_reg_1096 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_31_fu_719_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_31_reg_1101 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_33_fu_723_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_33_reg_1106 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_35_fu_727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_35_reg_1111 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_37_fu_731_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_37_reg_1116 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_39_fu_736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln23_39_reg_1121 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_start : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_done : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_idle : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_ready : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_A_ce0 : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_nrm_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_nrm_out_ap_vld : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_ce : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1130_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1130_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1130_p_ce : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_start : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_done : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_idle : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_ready : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_A_ce0 : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_ce0 : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_we0 : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_start : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_done : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_idle : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_ready : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_ce0 : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_we0 : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_ce1 : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_we1 : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_ce0 : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_we0 : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_ce : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1130_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1130_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1130_p_ce : STD_LOGIC;
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln20_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal zext_ln17_6_fu_411_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln20_fu_420_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_fu_433_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_24_fu_447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_25_fu_458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_26_fu_472_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_27_fu_483_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_28_fu_493_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_29_fu_507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_30_fu_521_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_31_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_32_fu_542_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_33_fu_552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_34_fu_562_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_35_fu_576_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_36_fu_590_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_37_fu_604_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_38_fu_620_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_39_fu_630_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_40_fu_640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_41_fu_650_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvars_iv32_fu_96 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln13_fu_741_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal k_fu_100 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln20_fu_363_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal bitcast_ln17_fu_416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_388_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_381_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln17_5_fu_395_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln17_fu_405_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln17_3_fu_424_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_fu_427_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_1_fu_441_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln23_2_fu_452_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln23_3_fu_466_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln23_4_fu_477_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln23_5_fu_488_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln23_6_fu_498_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln23_fu_503_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln23_7_fu_515_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln23_8_fu_526_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln23_9_fu_537_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln23_10_fu_547_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln23_11_fu_557_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln23_12_fu_567_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln23_5_fu_572_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln23_13_fu_581_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln23_6_fu_586_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln23_14_fu_595_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln23_7_fu_600_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_609_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln23_8_fu_616_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln23_15_fu_625_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln23_16_fu_635_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln23_17_fu_645_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1126_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1126_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1126_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1126_ce : STD_LOGIC;
    signal grp_fu_1130_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1130_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1130_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1130_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gramschmidt_gramschmidt_Pipeline_VITIS_LOOP_15_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln20 : IN STD_LOGIC_VECTOR (4 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        nrm_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        nrm_out_ap_vld : OUT STD_LOGIC;
        grp_fu_1126_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1126_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1126_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1126_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1126_p_ce : OUT STD_LOGIC;
        grp_fu_1130_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1130_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1130_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1130_p_ce : OUT STD_LOGIC );
    end component;


    component gramschmidt_gramschmidt_Pipeline_VITIS_LOOP_18_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln20 : IN STD_LOGIC_VECTOR (4 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        Q_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        Q_ce0 : OUT STD_LOGIC;
        Q_we0 : OUT STD_LOGIC;
        Q_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        tmp : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component gramschmidt_gramschmidt_Pipeline_VITIS_LOOP_20_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln20_1 : IN STD_LOGIC_VECTOR (4 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_we0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        A_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce1 : OUT STD_LOGIC;
        A_we1 : OUT STD_LOGIC;
        A_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        A_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        sub_ln17 : IN STD_LOGIC_VECTOR (9 downto 0);
        R_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        R_ce0 : OUT STD_LOGIC;
        R_we0 : OUT STD_LOGIC;
        R_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_5 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_7 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_9 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_11 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_13 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_15 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_17 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_19 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_21 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_23 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_25 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_27 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_29 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_31 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_33 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_35 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_37 : IN STD_LOGIC_VECTOR (63 downto 0);
        bitcast_ln23_39 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1126_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1126_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1126_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1126_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1126_p_ce : OUT STD_LOGIC;
        grp_fu_1130_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1130_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1130_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_1130_p_ce : OUT STD_LOGIC );
    end component;


    component gramschmidt_dsqrt_64ns_64ns_64_17_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component gramschmidt_dadddsub_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component gramschmidt_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290 : component gramschmidt_gramschmidt_Pipeline_VITIS_LOOP_15_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_start,
        ap_done => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_done,
        ap_idle => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_idle,
        ap_ready => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_ready,
        zext_ln20 => k_1_reg_772,
        A_address0 => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_A_address0,
        A_ce0 => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_A_ce0,
        A_q0 => A_q0,
        nrm_out => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_nrm_out,
        nrm_out_ap_vld => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_nrm_out_ap_vld,
        grp_fu_1126_p_din0 => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_din0,
        grp_fu_1126_p_din1 => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_din1,
        grp_fu_1126_p_opcode => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_opcode,
        grp_fu_1126_p_dout0 => grp_fu_1126_p2,
        grp_fu_1126_p_ce => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_ce,
        grp_fu_1130_p_din0 => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1130_p_din0,
        grp_fu_1130_p_din1 => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1130_p_din1,
        grp_fu_1130_p_dout0 => grp_fu_1130_p2,
        grp_fu_1130_p_ce => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1130_p_ce);

    grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298 : component gramschmidt_gramschmidt_Pipeline_VITIS_LOOP_18_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_start,
        ap_done => grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_done,
        ap_idle => grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_idle,
        ap_ready => grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_ready,
        zext_ln20 => k_1_reg_772,
        A_address0 => grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_A_address0,
        A_ce0 => grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_A_ce0,
        A_q0 => A_q0,
        Q_address0 => grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_address0,
        Q_ce0 => grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_ce0,
        Q_we0 => grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_we0,
        Q_d0 => grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_d0,
        tmp => tmp_reg_793);

    grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308 : component gramschmidt_gramschmidt_Pipeline_VITIS_LOOP_20_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_start,
        ap_done => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_done,
        ap_idle => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_idle,
        ap_ready => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_ready,
        zext_ln20_1 => indvars_iv32_load_reg_1021,
        A_address0 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_address0,
        A_ce0 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_ce0,
        A_we0 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_we0,
        A_d0 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_d0,
        A_q0 => A_q0,
        A_address1 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_address1,
        A_ce1 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_ce1,
        A_we1 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_we1,
        A_d1 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_d1,
        A_q1 => A_q1,
        sub_ln17 => sub_ln17_reg_806,
        R_address0 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_address0,
        R_ce0 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_ce0,
        R_we0 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_we0,
        R_d0 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_d0,
        bitcast_ln23_1 => bitcast_ln23_1_reg_1026,
        bitcast_ln23_3 => bitcast_ln23_3_reg_1031,
        bitcast_ln23_5 => bitcast_ln23_5_reg_1036,
        bitcast_ln23_7 => bitcast_ln23_7_reg_1041,
        bitcast_ln23_9 => bitcast_ln23_9_reg_1046,
        bitcast_ln23_11 => bitcast_ln23_11_reg_1051,
        bitcast_ln23_13 => bitcast_ln23_13_reg_1056,
        bitcast_ln23_15 => bitcast_ln23_15_reg_1061,
        bitcast_ln23_17 => bitcast_ln23_17_reg_1066,
        bitcast_ln23_19 => bitcast_ln23_19_reg_1071,
        bitcast_ln23_21 => bitcast_ln23_21_reg_1076,
        bitcast_ln23_23 => bitcast_ln23_23_reg_1081,
        bitcast_ln23_25 => bitcast_ln23_25_reg_1086,
        bitcast_ln23_27 => bitcast_ln23_27_reg_1091,
        bitcast_ln23_29 => bitcast_ln23_29_reg_1096,
        bitcast_ln23_31 => bitcast_ln23_31_reg_1101,
        bitcast_ln23_33 => bitcast_ln23_33_reg_1106,
        bitcast_ln23_35 => bitcast_ln23_35_reg_1111,
        bitcast_ln23_37 => bitcast_ln23_37_reg_1116,
        bitcast_ln23_39 => bitcast_ln23_39_reg_1121,
        grp_fu_1126_p_din0 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_din0,
        grp_fu_1126_p_din1 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_din1,
        grp_fu_1126_p_opcode => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_opcode,
        grp_fu_1126_p_dout0 => grp_fu_1126_p2,
        grp_fu_1126_p_ce => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_ce,
        grp_fu_1130_p_din0 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1130_p_din0,
        grp_fu_1130_p_din1 => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1130_p_din1,
        grp_fu_1130_p_dout0 => grp_fu_1130_p2,
        grp_fu_1130_p_ce => grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1130_p_ce);

    dsqrt_64ns_64ns_64_17_no_dsp_1_U77 : component gramschmidt_dsqrt_64ns_64ns_64_17_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 17,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv64_0,
        din1 => grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_nrm_out,
        ce => ap_const_logic_1,
        dout => grp_fu_338_p2);

    dadddsub_64ns_64ns_64_5_full_dsp_1_U78 : component gramschmidt_dadddsub_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1126_p0,
        din1 => grp_fu_1126_p1,
        opcode => grp_fu_1126_opcode,
        ce => grp_fu_1126_ce,
        dout => grp_fu_1126_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U79 : component gramschmidt_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1130_p0,
        din1 => grp_fu_1130_p1,
        ce => grp_fu_1130_ce,
        dout => grp_fu_1130_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln20_fu_357_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_ready = ap_const_logic_1)) then 
                    grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_ready = ap_const_logic_1)) then 
                    grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                    grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_ready = ap_const_logic_1)) then 
                    grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvars_iv32_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvars_iv32_fu_96 <= ap_const_lv5_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                indvars_iv32_fu_96 <= add_ln13_fu_741_p2;
            end if; 
        end if;
    end process;

    k_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                k_fu_100 <= ap_const_lv5_0;
            elsif (((icmp_ln20_fu_357_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                k_fu_100 <= add_ln20_fu_363_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                Q_load_10_reg_951 <= Q_q1;
                Q_load_11_reg_956 <= Q_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                Q_load_12_reg_971 <= Q_q1;
                Q_load_13_reg_976 <= Q_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                Q_load_14_reg_991 <= Q_q1;
                Q_load_15_reg_996 <= Q_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                Q_load_16_reg_1011 <= Q_q1;
                Q_load_17_reg_1016 <= Q_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                Q_load_1_reg_842 <= Q_q0;
                Q_load_reg_837 <= Q_q1;
                    zext_ln17_1_reg_821(4 downto 0) <= zext_ln17_1_fu_438_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                Q_load_2_reg_864 <= Q_q1;
                Q_load_3_reg_869 <= Q_q0;
                    zext_ln17_2_reg_847(4 downto 0) <= zext_ln17_2_fu_463_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                Q_load_4_reg_884 <= Q_q1;
                Q_load_5_reg_889 <= Q_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                Q_load_6_reg_911 <= Q_q1;
                Q_load_7_reg_916 <= Q_q0;
                    zext_ln17_reg_894(4 downto 0) <= zext_ln17_fu_512_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                Q_load_8_reg_931 <= Q_q1;
                Q_load_9_reg_936 <= Q_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                bitcast_ln23_11_reg_1051 <= bitcast_ln23_11_fu_679_p1;
                bitcast_ln23_13_reg_1056 <= bitcast_ln23_13_fu_683_p1;
                bitcast_ln23_15_reg_1061 <= bitcast_ln23_15_fu_687_p1;
                bitcast_ln23_17_reg_1066 <= bitcast_ln23_17_fu_691_p1;
                bitcast_ln23_19_reg_1071 <= bitcast_ln23_19_fu_695_p1;
                bitcast_ln23_1_reg_1026 <= bitcast_ln23_1_fu_659_p1;
                bitcast_ln23_21_reg_1076 <= bitcast_ln23_21_fu_699_p1;
                bitcast_ln23_23_reg_1081 <= bitcast_ln23_23_fu_703_p1;
                bitcast_ln23_25_reg_1086 <= bitcast_ln23_25_fu_707_p1;
                bitcast_ln23_27_reg_1091 <= bitcast_ln23_27_fu_711_p1;
                bitcast_ln23_29_reg_1096 <= bitcast_ln23_29_fu_715_p1;
                bitcast_ln23_31_reg_1101 <= bitcast_ln23_31_fu_719_p1;
                bitcast_ln23_33_reg_1106 <= bitcast_ln23_33_fu_723_p1;
                bitcast_ln23_35_reg_1111 <= bitcast_ln23_35_fu_727_p1;
                bitcast_ln23_37_reg_1116 <= bitcast_ln23_37_fu_731_p1;
                bitcast_ln23_39_reg_1121 <= bitcast_ln23_39_fu_736_p1;
                bitcast_ln23_3_reg_1031 <= bitcast_ln23_3_fu_663_p1;
                bitcast_ln23_5_reg_1036 <= bitcast_ln23_5_fu_667_p1;
                bitcast_ln23_7_reg_1041 <= bitcast_ln23_7_fu_671_p1;
                bitcast_ln23_9_reg_1046 <= bitcast_ln23_9_fu_675_p1;
                indvars_iv32_load_reg_1021 <= indvars_iv32_fu_96;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                k_1_reg_772 <= k_fu_100;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                    sub_ln17_reg_806(9 downto 1) <= sub_ln17_fu_399_p2(9 downto 1);
                    zext_ln17_4_reg_799(4 downto 0) <= zext_ln17_4_fu_378_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                tmp_reg_793 <= grp_fu_338_p2;
            end if;
        end if;
    end process;
    zext_ln17_4_reg_799(9 downto 5) <= "00000";
    sub_ln17_reg_806(0) <= '0';
    zext_ln17_1_reg_821(6 downto 5) <= "00";
    zext_ln17_2_reg_847(7 downto 5) <= "000";
    zext_ln17_reg_894(8 downto 5) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_done, grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_done, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_done, icmp_ln20_fu_357_p2, ap_CS_fsm_state3, ap_CS_fsm_state22, ap_CS_fsm_state34)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln20_fu_357_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if (((grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_A_address0, grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_A_address0, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_address0, ap_CS_fsm_state3, ap_CS_fsm_state22, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            A_address0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            A_address0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_address0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_A_address0;
        else 
            A_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    A_address1 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_address1;

    A_ce0_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_A_ce0, grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_A_ce0, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_ce0, ap_CS_fsm_state3, ap_CS_fsm_state22, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            A_ce0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            A_ce0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_ce0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_ce1_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_ce1, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            A_ce1 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_ce1;
        else 
            A_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    A_d0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_d0;
    A_d1 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_d1;

    A_we0_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_we0, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            A_we0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_we0;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;


    A_we1_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_we1, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            A_we1 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_A_we1;
        else 
            A_we1 <= ap_const_logic_0;
        end if; 
    end process;


    Q_address0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_address0, ap_CS_fsm_state22, zext_ln23_fu_433_p1, zext_ln23_25_fu_458_p1, zext_ln23_27_fu_483_p1, zext_ln23_29_fu_507_p1, zext_ln23_31_fu_532_p1, zext_ln23_33_fu_552_p1, zext_ln23_35_fu_576_p1, zext_ln23_37_fu_604_p1, zext_ln23_39_fu_630_p1, zext_ln23_41_fu_650_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            Q_address0 <= zext_ln23_41_fu_650_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            Q_address0 <= zext_ln23_39_fu_630_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            Q_address0 <= zext_ln23_37_fu_604_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            Q_address0 <= zext_ln23_35_fu_576_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            Q_address0 <= zext_ln23_33_fu_552_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            Q_address0 <= zext_ln23_31_fu_532_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            Q_address0 <= zext_ln23_29_fu_507_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            Q_address0 <= zext_ln23_27_fu_483_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            Q_address0 <= zext_ln23_25_fu_458_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            Q_address0 <= zext_ln23_fu_433_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            Q_address0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_address0;
        else 
            Q_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    Q_address1_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, zext_ln20_fu_420_p1, zext_ln23_24_fu_447_p1, zext_ln23_26_fu_472_p1, zext_ln23_28_fu_493_p1, zext_ln23_30_fu_521_p1, zext_ln23_32_fu_542_p1, zext_ln23_34_fu_562_p1, zext_ln23_36_fu_590_p1, zext_ln23_38_fu_620_p1, zext_ln23_40_fu_640_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            Q_address1 <= zext_ln23_40_fu_640_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            Q_address1 <= zext_ln23_38_fu_620_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            Q_address1 <= zext_ln23_36_fu_590_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            Q_address1 <= zext_ln23_34_fu_562_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            Q_address1 <= zext_ln23_32_fu_542_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            Q_address1 <= zext_ln23_30_fu_521_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            Q_address1 <= zext_ln23_28_fu_493_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            Q_address1 <= zext_ln23_26_fu_472_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            Q_address1 <= zext_ln23_24_fu_447_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            Q_address1 <= zext_ln20_fu_420_p1(10 - 1 downto 0);
        else 
            Q_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    Q_ce0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_ce0, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            Q_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            Q_ce0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_ce0;
        else 
            Q_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Q_ce1_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            Q_ce1 <= ap_const_logic_1;
        else 
            Q_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Q_d0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_d0;

    Q_we0_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_we0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            Q_we0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_Q_we0;
        else 
            Q_we0 <= ap_const_logic_0;
        end if; 
    end process;


    R_address0_assign_proc : process(ap_CS_fsm_state21, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_address0, ap_CS_fsm_state34, zext_ln17_6_fu_411_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            R_address0 <= zext_ln17_6_fu_411_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            R_address0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_address0;
        else 
            R_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    R_ce0_assign_proc : process(ap_CS_fsm_state21, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_ce0, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            R_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            R_ce0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_ce0;
        else 
            R_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    R_d0_assign_proc : process(ap_CS_fsm_state21, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_d0, ap_CS_fsm_state34, bitcast_ln17_fu_416_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            R_d0 <= bitcast_ln17_fu_416_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            R_d0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_d0;
        else 
            R_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    R_we0_assign_proc : process(ap_CS_fsm_state21, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_we0, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            R_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            R_we0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_R_we0;
        else 
            R_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln13_fu_741_p2 <= std_logic_vector(unsigned(indvars_iv32_fu_96) + unsigned(ap_const_lv5_1));
    add_ln17_fu_405_p2 <= std_logic_vector(unsigned(sub_ln17_fu_399_p2) + unsigned(zext_ln17_4_fu_378_p1));
    add_ln20_fu_363_p2 <= std_logic_vector(unsigned(k_fu_100) + unsigned(ap_const_lv5_1));
    add_ln23_10_fu_547_p2 <= std_logic_vector(unsigned(zext_ln17_reg_894) + unsigned(ap_const_lv9_14A));
    add_ln23_11_fu_557_p2 <= std_logic_vector(unsigned(zext_ln17_reg_894) + unsigned(ap_const_lv9_168));
    add_ln23_12_fu_567_p2 <= std_logic_vector(unsigned(zext_ln17_2_reg_847) + unsigned(ap_const_lv8_86));
    add_ln23_13_fu_581_p2 <= std_logic_vector(unsigned(zext_ln17_2_reg_847) + unsigned(ap_const_lv8_A4));
    add_ln23_14_fu_595_p2 <= std_logic_vector(unsigned(zext_ln17_1_reg_821) + unsigned(ap_const_lv7_42));
    add_ln23_15_fu_625_p2 <= std_logic_vector(unsigned(zext_ln17_4_reg_799) + unsigned(ap_const_lv10_1FE));
    add_ln23_16_fu_635_p2 <= std_logic_vector(unsigned(zext_ln17_4_reg_799) + unsigned(ap_const_lv10_21C));
    add_ln23_17_fu_645_p2 <= std_logic_vector(unsigned(zext_ln17_4_reg_799) + unsigned(ap_const_lv10_23A));
    add_ln23_1_fu_441_p2 <= std_logic_vector(unsigned(zext_ln17_1_fu_438_p1) + unsigned(ap_const_lv7_3C));
    add_ln23_2_fu_452_p2 <= std_logic_vector(unsigned(zext_ln17_1_fu_438_p1) + unsigned(ap_const_lv7_5A));
    add_ln23_3_fu_466_p2 <= std_logic_vector(unsigned(zext_ln17_2_fu_463_p1) + unsigned(ap_const_lv8_78));
    add_ln23_4_fu_477_p2 <= std_logic_vector(unsigned(zext_ln17_2_fu_463_p1) + unsigned(ap_const_lv8_96));
    add_ln23_5_fu_488_p2 <= std_logic_vector(unsigned(zext_ln17_2_reg_847) + unsigned(ap_const_lv8_B4));
    add_ln23_6_fu_498_p2 <= std_logic_vector(unsigned(zext_ln17_1_reg_821) + unsigned(ap_const_lv7_52));
    add_ln23_7_fu_515_p2 <= std_logic_vector(unsigned(zext_ln17_fu_512_p1) + unsigned(ap_const_lv9_F0));
    add_ln23_8_fu_526_p2 <= std_logic_vector(unsigned(zext_ln17_fu_512_p1) + unsigned(ap_const_lv9_10E));
    add_ln23_9_fu_537_p2 <= std_logic_vector(unsigned(zext_ln17_reg_894) + unsigned(ap_const_lv9_12C));
    add_ln23_fu_427_p2 <= std_logic_vector(unsigned(zext_ln17_3_fu_424_p1) + unsigned(ap_const_lv6_1E));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_done)
    begin
        if ((grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;

    ap_ST_fsm_state34_blk_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_done)
    begin
        if ((grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state34_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state34_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_done)
    begin
        if ((grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_357_p2)
    begin
        if (((icmp_ln20_fu_357_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln20_fu_357_p2)
    begin
        if (((icmp_ln20_fu_357_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln17_fu_416_p1 <= tmp_reg_793;
    bitcast_ln23_11_fu_679_p1 <= Q_load_5_reg_889;
    bitcast_ln23_13_fu_683_p1 <= Q_load_6_reg_911;
    bitcast_ln23_15_fu_687_p1 <= Q_load_7_reg_916;
    bitcast_ln23_17_fu_691_p1 <= Q_load_8_reg_931;
    bitcast_ln23_19_fu_695_p1 <= Q_load_9_reg_936;
    bitcast_ln23_1_fu_659_p1 <= Q_load_reg_837;
    bitcast_ln23_21_fu_699_p1 <= Q_load_10_reg_951;
    bitcast_ln23_23_fu_703_p1 <= Q_load_11_reg_956;
    bitcast_ln23_25_fu_707_p1 <= Q_load_12_reg_971;
    bitcast_ln23_27_fu_711_p1 <= Q_load_13_reg_976;
    bitcast_ln23_29_fu_715_p1 <= Q_load_14_reg_991;
    bitcast_ln23_31_fu_719_p1 <= Q_load_15_reg_996;
    bitcast_ln23_33_fu_723_p1 <= Q_load_16_reg_1011;
    bitcast_ln23_35_fu_727_p1 <= Q_load_17_reg_1016;
    bitcast_ln23_37_fu_731_p1 <= Q_q1;
    bitcast_ln23_39_fu_736_p1 <= Q_q0;
    bitcast_ln23_3_fu_663_p1 <= Q_load_1_reg_842;
    bitcast_ln23_5_fu_667_p1 <= Q_load_2_reg_864;
    bitcast_ln23_7_fu_671_p1 <= Q_load_3_reg_869;
    bitcast_ln23_9_fu_675_p1 <= Q_load_4_reg_884;

    grp_fu_1126_ce_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_ce, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_ce, ap_CS_fsm_state3, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_1126_ce <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_1126_ce <= grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_ce;
        else 
            grp_fu_1126_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1126_opcode_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_opcode, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_opcode, ap_CS_fsm_state3, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_1126_opcode <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_1126_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_opcode),2));
        else 
            grp_fu_1126_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1126_p0_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_din0, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_din0, ap_CS_fsm_state3, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_1126_p0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_1126_p0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_din0;
        else 
            grp_fu_1126_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1126_p1_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_din1, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_din1, ap_CS_fsm_state3, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_1126_p1 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1126_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_1126_p1 <= grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1126_p_din1;
        else 
            grp_fu_1126_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1130_ce_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1130_p_ce, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1130_p_ce, ap_CS_fsm_state3, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_1130_ce <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1130_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_1130_ce <= grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1130_p_ce;
        else 
            grp_fu_1130_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1130_p0_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1130_p_din0, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1130_p_din0, ap_CS_fsm_state3, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_1130_p0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1130_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_1130_p0 <= grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1130_p_din0;
        else 
            grp_fu_1130_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1130_p1_assign_proc : process(grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1130_p_din1, grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1130_p_din1, ap_CS_fsm_state3, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_1130_p1 <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_grp_fu_1130_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_1130_p1 <= grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_grp_fu_1130_p_din1;
        else 
            grp_fu_1130_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_start <= grp_gramschmidt_Pipeline_VITIS_LOOP_15_2_fu_290_ap_start_reg;
    grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_start <= grp_gramschmidt_Pipeline_VITIS_LOOP_18_3_fu_298_ap_start_reg;
    grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_start <= grp_gramschmidt_Pipeline_VITIS_LOOP_20_4_fu_308_ap_start_reg;
    icmp_ln20_fu_357_p2 <= "1" when (k_fu_100 = ap_const_lv5_1E) else "0";
        sext_ln23_5_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln23_12_fu_567_p2),9));

        sext_ln23_6_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln23_13_fu_581_p2),9));

        sext_ln23_7_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln23_14_fu_595_p2),9));

        sext_ln23_8_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_609_p3),9));

        sext_ln23_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln23_6_fu_498_p2),8));

    sub_ln17_fu_399_p2 <= std_logic_vector(unsigned(tmp_1_fu_381_p3) - unsigned(zext_ln17_5_fu_395_p1));
    tmp_1_fu_381_p3 <= (k_1_reg_772 & ap_const_lv5_0);
    tmp_2_fu_388_p3 <= (k_1_reg_772 & ap_const_lv1_0);
    tmp_3_fu_609_p3 <= (ap_const_lv1_1 & k_1_reg_772);
    zext_ln17_1_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_772),7));
    zext_ln17_2_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_772),8));
    zext_ln17_3_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_772),6));
    zext_ln17_4_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_772),10));
    zext_ln17_5_fu_395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_388_p3),10));
    zext_ln17_6_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln17_fu_405_p2),64));
    zext_ln17_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_772),9));
    zext_ln20_fu_420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_772),64));
    zext_ln23_24_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_1_fu_441_p2),64));
    zext_ln23_25_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_2_fu_452_p2),64));
    zext_ln23_26_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_3_fu_466_p2),64));
    zext_ln23_27_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_4_fu_477_p2),64));
    zext_ln23_28_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_5_fu_488_p2),64));
    zext_ln23_29_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln23_fu_503_p1),64));
    zext_ln23_30_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_7_fu_515_p2),64));
    zext_ln23_31_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_8_fu_526_p2),64));
    zext_ln23_32_fu_542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_9_fu_537_p2),64));
    zext_ln23_33_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_10_fu_547_p2),64));
    zext_ln23_34_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_11_fu_557_p2),64));
    zext_ln23_35_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln23_5_fu_572_p1),64));
    zext_ln23_36_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln23_6_fu_586_p1),64));
    zext_ln23_37_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln23_7_fu_600_p1),64));
    zext_ln23_38_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln23_8_fu_616_p1),64));
    zext_ln23_39_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_15_fu_625_p2),64));
    zext_ln23_40_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_16_fu_635_p2),64));
    zext_ln23_41_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_17_fu_645_p2),64));
    zext_ln23_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_fu_427_p2),64));
end behav;
