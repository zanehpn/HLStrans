-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity block_mm is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Arows_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    Arows_empty_n : IN STD_LOGIC;
    Arows_read : OUT STD_LOGIC;
    Bcols_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    Bcols_empty_n : IN STD_LOGIC;
    Bcols_read : OUT STD_LOGIC;
    ABpartial_i : IN STD_LOGIC_VECTOR (511 downto 0);
    ABpartial_o : OUT STD_LOGIC_VECTOR (511 downto 0);
    ABpartial_o_ap_vld : OUT STD_LOGIC;
    it : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of block_mm is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "block_mm_block_mm,hls_ip_2022_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.891000,HLS_SYN_LAT=49,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2519,HLS_SYN_LUT=24613,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 : STD_LOGIC;
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0 : STD_LOGIC;
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 : STD_LOGIC;
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0 : STD_LOGIC;
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 : STD_LOGIC;
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0 : STD_LOGIC;
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 : STD_LOGIC;
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0 : STD_LOGIC;
    signal block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln20_fu_306_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_block_mm_Pipeline_loadA_fu_203_ap_start : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_ap_done : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_ap_idle : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_ap_ready : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_Arows_read : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0 : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0 : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0 : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0 : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_ap_start : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_ap_done : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_ap_idle : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_ap_ready : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_15_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_15_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_14_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_14_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_13_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_13_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_12_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_12_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_11_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_11_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_10_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_10_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_9_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_9_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_8_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_8_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_7_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_7_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_6_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_6_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_5_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_5_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_4_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_4_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_3_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_3_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_2_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_1_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_2_fu_217_AB_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_2_fu_217_AB_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_ap_start : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_ap_done : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_ap_idle : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_ap_ready : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_Bcols_read : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_3_375_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_3_375_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_3_274_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_3_274_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_3_173_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_3_173_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_372_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_372_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_2_371_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_2_371_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_2_270_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_2_270_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_2_169_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_2_169_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_268_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_268_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_1_367_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_1_367_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_1_266_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_1_266_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_1_165_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_1_165_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_164_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_164_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_33963_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_33963_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_23462_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_23462_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_12961_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_add_12961_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_p_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_p_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 : STD_LOGIC;
    signal grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 : STD_LOGIC;
    signal grp_block_mm_Pipeline_writeoutput_fu_283_ap_start : STD_LOGIC;
    signal grp_block_mm_Pipeline_writeoutput_fu_283_ap_done : STD_LOGIC;
    signal grp_block_mm_Pipeline_writeoutput_fu_283_ap_idle : STD_LOGIC;
    signal grp_block_mm_Pipeline_writeoutput_fu_283_ap_ready : STD_LOGIC;
    signal grp_block_mm_Pipeline_writeoutput_fu_283_p_partset4_out : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_block_mm_Pipeline_writeoutput_fu_283_p_partset4_out_ap_vld : STD_LOGIC;
    signal grp_block_mm_Pipeline_loadA_fu_203_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_block_mm_Pipeline_2_fu_217_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_block_mm_Pipeline_partialsum_fu_237_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_block_mm_Pipeline_writeoutput_fu_283_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component block_mm_block_mm_Pipeline_loadA IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Arows_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        Arows_empty_n : IN STD_LOGIC;
        Arows_read : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0 : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0 : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0 : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0 : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component block_mm_block_mm_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        AB_15_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_15_out_ap_vld : OUT STD_LOGIC;
        AB_14_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_14_out_ap_vld : OUT STD_LOGIC;
        AB_13_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_13_out_ap_vld : OUT STD_LOGIC;
        AB_12_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_12_out_ap_vld : OUT STD_LOGIC;
        AB_11_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_11_out_ap_vld : OUT STD_LOGIC;
        AB_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_10_out_ap_vld : OUT STD_LOGIC;
        AB_9_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_9_out_ap_vld : OUT STD_LOGIC;
        AB_8_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_8_out_ap_vld : OUT STD_LOGIC;
        AB_7_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_7_out_ap_vld : OUT STD_LOGIC;
        AB_6_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_6_out_ap_vld : OUT STD_LOGIC;
        AB_5_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_5_out_ap_vld : OUT STD_LOGIC;
        AB_4_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_4_out_ap_vld : OUT STD_LOGIC;
        AB_3_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_3_out_ap_vld : OUT STD_LOGIC;
        AB_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_2_out_ap_vld : OUT STD_LOGIC;
        AB_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_1_out_ap_vld : OUT STD_LOGIC;
        AB_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        AB_out_ap_vld : OUT STD_LOGIC );
    end component;


    component block_mm_block_mm_Pipeline_partialsum IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Bcols_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        Bcols_empty_n : IN STD_LOGIC;
        Bcols_read : OUT STD_LOGIC;
        AB_15_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_14_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_13_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_12_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_11_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_10_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_9_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_7_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_6_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_5_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_4_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_2_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        AB_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_3_375_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_3_375_out_ap_vld : OUT STD_LOGIC;
        add_3_274_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_3_274_out_ap_vld : OUT STD_LOGIC;
        add_3_173_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_3_173_out_ap_vld : OUT STD_LOGIC;
        add_372_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_372_out_ap_vld : OUT STD_LOGIC;
        add_2_371_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_2_371_out_ap_vld : OUT STD_LOGIC;
        add_2_270_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_2_270_out_ap_vld : OUT STD_LOGIC;
        add_2_169_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_2_169_out_ap_vld : OUT STD_LOGIC;
        add_268_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_268_out_ap_vld : OUT STD_LOGIC;
        add_1_367_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_1_367_out_ap_vld : OUT STD_LOGIC;
        add_1_266_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_1_266_out_ap_vld : OUT STD_LOGIC;
        add_1_165_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_1_165_out_ap_vld : OUT STD_LOGIC;
        add_164_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_164_out_ap_vld : OUT STD_LOGIC;
        add_33963_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_33963_out_ap_vld : OUT STD_LOGIC;
        add_23462_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_23462_out_ap_vld : OUT STD_LOGIC;
        add_12961_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_12961_out_ap_vld : OUT STD_LOGIC;
        p_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_ap_vld : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 : OUT STD_LOGIC;
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component block_mm_block_mm_Pipeline_writeoutput IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ABpartial_load : IN STD_LOGIC_VECTOR (511 downto 0);
        p_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_164_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_268_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_372_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_12961_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_1_165_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_2_169_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_3_173_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_23462_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_1_266_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_2_270_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_3_274_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_33963_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_1_367_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_2_371_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        add_3_375_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        p_partset4_out : OUT STD_LOGIC_VECTOR (511 downto 0);
        p_partset4_out_ap_vld : OUT STD_LOGIC );
    end component;


    component block_mm_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_U : component block_mm_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0,
        ce0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0,
        we0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0,
        d0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_d0,
        q0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_q0);

    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_U : component block_mm_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0,
        ce0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0,
        we0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0,
        d0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_d0,
        q0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_q0);

    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_U : component block_mm_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0,
        ce0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0,
        we0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0,
        d0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_d0,
        q0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_q0);

    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_U : component block_mm_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0,
        ce0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0,
        we0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0,
        d0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_d0,
        q0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_q0);

    grp_block_mm_Pipeline_loadA_fu_203 : component block_mm_block_mm_Pipeline_loadA
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_block_mm_Pipeline_loadA_fu_203_ap_start,
        ap_done => grp_block_mm_Pipeline_loadA_fu_203_ap_done,
        ap_idle => grp_block_mm_Pipeline_loadA_fu_203_ap_idle,
        ap_ready => grp_block_mm_Pipeline_loadA_fu_203_ap_ready,
        Arows_dout => Arows_dout,
        Arows_empty_n => Arows_empty_n,
        Arows_read => grp_block_mm_Pipeline_loadA_fu_203_Arows_read,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_d0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_d0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_d0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_d0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_d0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_d0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_d0 => grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_d0);

    grp_block_mm_Pipeline_2_fu_217 : component block_mm_block_mm_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_block_mm_Pipeline_2_fu_217_ap_start,
        ap_done => grp_block_mm_Pipeline_2_fu_217_ap_done,
        ap_idle => grp_block_mm_Pipeline_2_fu_217_ap_idle,
        ap_ready => grp_block_mm_Pipeline_2_fu_217_ap_ready,
        AB_15_out => grp_block_mm_Pipeline_2_fu_217_AB_15_out,
        AB_15_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_15_out_ap_vld,
        AB_14_out => grp_block_mm_Pipeline_2_fu_217_AB_14_out,
        AB_14_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_14_out_ap_vld,
        AB_13_out => grp_block_mm_Pipeline_2_fu_217_AB_13_out,
        AB_13_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_13_out_ap_vld,
        AB_12_out => grp_block_mm_Pipeline_2_fu_217_AB_12_out,
        AB_12_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_12_out_ap_vld,
        AB_11_out => grp_block_mm_Pipeline_2_fu_217_AB_11_out,
        AB_11_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_11_out_ap_vld,
        AB_10_out => grp_block_mm_Pipeline_2_fu_217_AB_10_out,
        AB_10_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_10_out_ap_vld,
        AB_9_out => grp_block_mm_Pipeline_2_fu_217_AB_9_out,
        AB_9_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_9_out_ap_vld,
        AB_8_out => grp_block_mm_Pipeline_2_fu_217_AB_8_out,
        AB_8_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_8_out_ap_vld,
        AB_7_out => grp_block_mm_Pipeline_2_fu_217_AB_7_out,
        AB_7_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_7_out_ap_vld,
        AB_6_out => grp_block_mm_Pipeline_2_fu_217_AB_6_out,
        AB_6_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_6_out_ap_vld,
        AB_5_out => grp_block_mm_Pipeline_2_fu_217_AB_5_out,
        AB_5_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_5_out_ap_vld,
        AB_4_out => grp_block_mm_Pipeline_2_fu_217_AB_4_out,
        AB_4_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_4_out_ap_vld,
        AB_3_out => grp_block_mm_Pipeline_2_fu_217_AB_3_out,
        AB_3_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_3_out_ap_vld,
        AB_2_out => grp_block_mm_Pipeline_2_fu_217_AB_2_out,
        AB_2_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_2_out_ap_vld,
        AB_1_out => grp_block_mm_Pipeline_2_fu_217_AB_1_out,
        AB_1_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_1_out_ap_vld,
        AB_out => grp_block_mm_Pipeline_2_fu_217_AB_out,
        AB_out_ap_vld => grp_block_mm_Pipeline_2_fu_217_AB_out_ap_vld);

    grp_block_mm_Pipeline_partialsum_fu_237 : component block_mm_block_mm_Pipeline_partialsum
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_block_mm_Pipeline_partialsum_fu_237_ap_start,
        ap_done => grp_block_mm_Pipeline_partialsum_fu_237_ap_done,
        ap_idle => grp_block_mm_Pipeline_partialsum_fu_237_ap_idle,
        ap_ready => grp_block_mm_Pipeline_partialsum_fu_237_ap_ready,
        Bcols_dout => Bcols_dout,
        Bcols_empty_n => Bcols_empty_n,
        Bcols_read => grp_block_mm_Pipeline_partialsum_fu_237_Bcols_read,
        AB_15_reload => grp_block_mm_Pipeline_2_fu_217_AB_15_out,
        AB_14_reload => grp_block_mm_Pipeline_2_fu_217_AB_14_out,
        AB_13_reload => grp_block_mm_Pipeline_2_fu_217_AB_13_out,
        AB_12_reload => grp_block_mm_Pipeline_2_fu_217_AB_12_out,
        AB_11_reload => grp_block_mm_Pipeline_2_fu_217_AB_11_out,
        AB_10_reload => grp_block_mm_Pipeline_2_fu_217_AB_10_out,
        AB_9_reload => grp_block_mm_Pipeline_2_fu_217_AB_9_out,
        AB_8_reload => grp_block_mm_Pipeline_2_fu_217_AB_8_out,
        AB_7_reload => grp_block_mm_Pipeline_2_fu_217_AB_7_out,
        AB_6_reload => grp_block_mm_Pipeline_2_fu_217_AB_6_out,
        AB_5_reload => grp_block_mm_Pipeline_2_fu_217_AB_5_out,
        AB_4_reload => grp_block_mm_Pipeline_2_fu_217_AB_4_out,
        AB_3_reload => grp_block_mm_Pipeline_2_fu_217_AB_3_out,
        AB_2_reload => grp_block_mm_Pipeline_2_fu_217_AB_2_out,
        AB_1_reload => grp_block_mm_Pipeline_2_fu_217_AB_1_out,
        AB_reload => grp_block_mm_Pipeline_2_fu_217_AB_out,
        add_3_375_out => grp_block_mm_Pipeline_partialsum_fu_237_add_3_375_out,
        add_3_375_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_3_375_out_ap_vld,
        add_3_274_out => grp_block_mm_Pipeline_partialsum_fu_237_add_3_274_out,
        add_3_274_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_3_274_out_ap_vld,
        add_3_173_out => grp_block_mm_Pipeline_partialsum_fu_237_add_3_173_out,
        add_3_173_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_3_173_out_ap_vld,
        add_372_out => grp_block_mm_Pipeline_partialsum_fu_237_add_372_out,
        add_372_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_372_out_ap_vld,
        add_2_371_out => grp_block_mm_Pipeline_partialsum_fu_237_add_2_371_out,
        add_2_371_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_2_371_out_ap_vld,
        add_2_270_out => grp_block_mm_Pipeline_partialsum_fu_237_add_2_270_out,
        add_2_270_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_2_270_out_ap_vld,
        add_2_169_out => grp_block_mm_Pipeline_partialsum_fu_237_add_2_169_out,
        add_2_169_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_2_169_out_ap_vld,
        add_268_out => grp_block_mm_Pipeline_partialsum_fu_237_add_268_out,
        add_268_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_268_out_ap_vld,
        add_1_367_out => grp_block_mm_Pipeline_partialsum_fu_237_add_1_367_out,
        add_1_367_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_1_367_out_ap_vld,
        add_1_266_out => grp_block_mm_Pipeline_partialsum_fu_237_add_1_266_out,
        add_1_266_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_1_266_out_ap_vld,
        add_1_165_out => grp_block_mm_Pipeline_partialsum_fu_237_add_1_165_out,
        add_1_165_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_1_165_out_ap_vld,
        add_164_out => grp_block_mm_Pipeline_partialsum_fu_237_add_164_out,
        add_164_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_164_out_ap_vld,
        add_33963_out => grp_block_mm_Pipeline_partialsum_fu_237_add_33963_out,
        add_33963_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_33963_out_ap_vld,
        add_23462_out => grp_block_mm_Pipeline_partialsum_fu_237_add_23462_out,
        add_23462_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_23462_out_ap_vld,
        add_12961_out => grp_block_mm_Pipeline_partialsum_fu_237_add_12961_out,
        add_12961_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_add_12961_out_ap_vld,
        p_out => grp_block_mm_Pipeline_partialsum_fu_237_p_out,
        p_out_ap_vld => grp_block_mm_Pipeline_partialsum_fu_237_p_out_ap_vld,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0 => grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 => grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_q0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_q0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0 => grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 => grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_q0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_q0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0 => grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 => grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_q0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_q0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0 => grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 => grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0,
        block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_q0 => block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_q0);

    grp_block_mm_Pipeline_writeoutput_fu_283 : component block_mm_block_mm_Pipeline_writeoutput
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_block_mm_Pipeline_writeoutput_fu_283_ap_start,
        ap_done => grp_block_mm_Pipeline_writeoutput_fu_283_ap_done,
        ap_idle => grp_block_mm_Pipeline_writeoutput_fu_283_ap_idle,
        ap_ready => grp_block_mm_Pipeline_writeoutput_fu_283_ap_ready,
        ABpartial_load => ABpartial_i,
        p_reload => grp_block_mm_Pipeline_partialsum_fu_237_p_out,
        add_164_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_164_out,
        add_268_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_268_out,
        add_372_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_372_out,
        add_12961_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_12961_out,
        add_1_165_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_1_165_out,
        add_2_169_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_2_169_out,
        add_3_173_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_3_173_out,
        add_23462_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_23462_out,
        add_1_266_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_1_266_out,
        add_2_270_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_2_270_out,
        add_3_274_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_3_274_out,
        add_33963_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_33963_out,
        add_1_367_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_1_367_out,
        add_2_371_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_2_371_out,
        add_3_375_reload => grp_block_mm_Pipeline_partialsum_fu_237_add_3_375_out,
        p_partset4_out => grp_block_mm_Pipeline_writeoutput_fu_283_p_partset4_out,
        p_partset4_out_ap_vld => grp_block_mm_Pipeline_writeoutput_fu_283_p_partset4_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_block_mm_Pipeline_2_fu_217_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_block_mm_Pipeline_2_fu_217_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_block_mm_Pipeline_2_fu_217_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_block_mm_Pipeline_2_fu_217_ap_ready = ap_const_logic_1)) then 
                    grp_block_mm_Pipeline_2_fu_217_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_block_mm_Pipeline_loadA_fu_203_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_block_mm_Pipeline_loadA_fu_203_ap_start_reg <= ap_const_logic_0;
            else
                if (((trunc_ln20_fu_306_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_block_mm_Pipeline_loadA_fu_203_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_block_mm_Pipeline_loadA_fu_203_ap_ready = ap_const_logic_1)) then 
                    grp_block_mm_Pipeline_loadA_fu_203_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_block_mm_Pipeline_partialsum_fu_237_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_block_mm_Pipeline_partialsum_fu_237_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_block_mm_Pipeline_partialsum_fu_237_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_block_mm_Pipeline_partialsum_fu_237_ap_ready = ap_const_logic_1)) then 
                    grp_block_mm_Pipeline_partialsum_fu_237_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_block_mm_Pipeline_writeoutput_fu_283_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_block_mm_Pipeline_writeoutput_fu_283_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_block_mm_Pipeline_writeoutput_fu_283_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_block_mm_Pipeline_writeoutput_fu_283_ap_ready = ap_const_logic_1)) then 
                    grp_block_mm_Pipeline_writeoutput_fu_283_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, trunc_ln20_fu_306_p1, grp_block_mm_Pipeline_loadA_fu_203_ap_done, grp_block_mm_Pipeline_2_fu_217_ap_done, grp_block_mm_Pipeline_partialsum_fu_237_ap_done, grp_block_mm_Pipeline_writeoutput_fu_283_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((trunc_ln20_fu_306_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((trunc_ln20_fu_306_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_block_mm_Pipeline_loadA_fu_203_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_block_mm_Pipeline_2_fu_217_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_block_mm_Pipeline_partialsum_fu_237_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_block_mm_Pipeline_writeoutput_fu_283_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ABpartial_o <= grp_block_mm_Pipeline_writeoutput_fu_283_p_partset4_out;

    ABpartial_o_ap_vld_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ABpartial_o_ap_vld <= ap_const_logic_1;
        else 
            ABpartial_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    Arows_read_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_Arows_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            Arows_read <= grp_block_mm_Pipeline_loadA_fu_203_Arows_read;
        else 
            Arows_read <= ap_const_logic_0;
        end if; 
    end process;


    Bcols_read_assign_proc : process(grp_block_mm_Pipeline_partialsum_fu_237_Bcols_read, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            Bcols_read <= grp_block_mm_Pipeline_partialsum_fu_237_Bcols_read;
        else 
            Bcols_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_ap_done)
    begin
        if ((grp_block_mm_Pipeline_loadA_fu_203_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_block_mm_Pipeline_2_fu_217_ap_done)
    begin
        if ((grp_block_mm_Pipeline_2_fu_217_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_block_mm_Pipeline_partialsum_fu_237_ap_done)
    begin
        if ((grp_block_mm_Pipeline_partialsum_fu_237_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_block_mm_Pipeline_writeoutput_fu_283_ap_done)
    begin
        if ((grp_block_mm_Pipeline_writeoutput_fu_283_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0, grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0 <= grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0 <= grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0;
        else 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0 <= "XXX";
        end if; 
    end process;


    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0, grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 <= grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 <= grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0;
        else 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0 <= grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0;
        else 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0, grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0 <= grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0 <= grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0;
        else 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0 <= "XXX";
        end if; 
    end process;


    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0, grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 <= grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 <= grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0;
        else 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0 <= grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0;
        else 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0, grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0 <= grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0 <= grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0;
        else 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0 <= "XXX";
        end if; 
    end process;


    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0, grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 <= grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 <= grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0;
        else 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0 <= grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0;
        else 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0, grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0 <= grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0 <= grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0;
        else 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0 <= "XXX";
        end if; 
    end process;


    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0, grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 <= grp_block_mm_Pipeline_partialsum_fu_237_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 <= grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0;
        else 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0_assign_proc : process(grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0 <= grp_block_mm_Pipeline_loadA_fu_203_block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0;
        else 
            block_mm_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_block_mm_Pipeline_2_fu_217_ap_start <= grp_block_mm_Pipeline_2_fu_217_ap_start_reg;
    grp_block_mm_Pipeline_loadA_fu_203_ap_start <= grp_block_mm_Pipeline_loadA_fu_203_ap_start_reg;
    grp_block_mm_Pipeline_partialsum_fu_237_ap_start <= grp_block_mm_Pipeline_partialsum_fu_237_ap_start_reg;
    grp_block_mm_Pipeline_writeoutput_fu_283_ap_start <= grp_block_mm_Pipeline_writeoutput_fu_283_ap_start_reg;
    trunc_ln20_fu_306_p1 <= it(1 - 1 downto 0);
end behav;
