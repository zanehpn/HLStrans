-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity aes_table is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    in_r_ce0 : OUT STD_LOGIC;
    in_r_we0 : OUT STD_LOGIC;
    in_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    in_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_r_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    in_r_ce1 : OUT STD_LOGIC;
    in_r_we1 : OUT STD_LOGIC;
    in_r_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    in_r_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    out_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    rk_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    rk_ce0 : OUT STD_LOGIC;
    rk_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    rk_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    rk_ce1 : OUT STD_LOGIC;
    rk_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of aes_table is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "aes_table_aes_table,hls_ip_2022_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.629000,HLS_SYN_LAT=34,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=275,HLS_SYN_LUT=1079,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv64_34 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110100";
    constant ap_const_lv64_35 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110101";
    constant ap_const_lv64_36 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110110";
    constant ap_const_lv64_37 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110111";
    constant ap_const_lv64_38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111000";
    constant ap_const_lv64_39 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111001";
    constant ap_const_lv64_3A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111010";
    constant ap_const_lv64_3B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal S_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_ce0 : STD_LOGIC;
    signal S_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_ce1 : STD_LOGIC;
    signal S_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_address2 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_ce2 : STD_LOGIC;
    signal S_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_address3 : STD_LOGIC_VECTOR (7 downto 0);
    signal S_ce3 : STD_LOGIC;
    signal S_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_380 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal reg_384 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln115_fu_388_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln115_reg_560 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln120_fu_392_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln120_reg_565 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln1_reg_580 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_350_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln6_reg_585 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln7_reg_590 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln8_reg_595 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln125_fu_396_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln125_reg_600 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln3_reg_630 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln4_reg_635 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln3_reg_640 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_fu_436_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_reg_645 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal w_1_fu_471_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_1_reg_675 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal w_2_fu_508_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_2_reg_705 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal w_3_fu_543_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_3_reg_735 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_aes_table_Pipeline_1_fu_292_ap_start : STD_LOGIC;
    signal grp_aes_table_Pipeline_1_fu_292_ap_done : STD_LOGIC;
    signal grp_aes_table_Pipeline_1_fu_292_ap_idle : STD_LOGIC;
    signal grp_aes_table_Pipeline_1_fu_292_ap_ready : STD_LOGIC;
    signal grp_aes_table_Pipeline_1_fu_292_out_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_aes_table_Pipeline_1_fu_292_out_r_ce0 : STD_LOGIC;
    signal grp_aes_table_Pipeline_1_fu_292_out_r_we0 : STD_LOGIC;
    signal grp_aes_table_Pipeline_1_fu_292_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_aes_table_Pipeline_2_fu_299_ap_start : STD_LOGIC;
    signal grp_aes_table_Pipeline_2_fu_299_ap_done : STD_LOGIC;
    signal grp_aes_table_Pipeline_2_fu_299_ap_idle : STD_LOGIC;
    signal grp_aes_table_Pipeline_2_fu_299_ap_ready : STD_LOGIC;
    signal grp_aes_table_Pipeline_2_fu_299_out_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_aes_table_Pipeline_2_fu_299_out_r_ce0 : STD_LOGIC;
    signal grp_aes_table_Pipeline_2_fu_299_out_r_we0 : STD_LOGIC;
    signal grp_aes_table_Pipeline_2_fu_299_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_aes_table_Pipeline_3_fu_306_ap_start : STD_LOGIC;
    signal grp_aes_table_Pipeline_3_fu_306_ap_done : STD_LOGIC;
    signal grp_aes_table_Pipeline_3_fu_306_ap_idle : STD_LOGIC;
    signal grp_aes_table_Pipeline_3_fu_306_ap_ready : STD_LOGIC;
    signal grp_aes_table_Pipeline_3_fu_306_out_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_aes_table_Pipeline_3_fu_306_out_r_ce0 : STD_LOGIC;
    signal grp_aes_table_Pipeline_3_fu_306_out_r_we0 : STD_LOGIC;
    signal grp_aes_table_Pipeline_3_fu_306_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_aes_table_Pipeline_4_fu_313_ap_start : STD_LOGIC;
    signal grp_aes_table_Pipeline_4_fu_313_ap_done : STD_LOGIC;
    signal grp_aes_table_Pipeline_4_fu_313_ap_idle : STD_LOGIC;
    signal grp_aes_table_Pipeline_4_fu_313_ap_ready : STD_LOGIC;
    signal grp_aes_table_Pipeline_4_fu_313_out_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_aes_table_Pipeline_4_fu_313_out_r_ce0 : STD_LOGIC;
    signal grp_aes_table_Pipeline_4_fu_313_out_r_we0 : STD_LOGIC;
    signal grp_aes_table_Pipeline_4_fu_313_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_aes_table_Pipeline_1_fu_292_ap_start_reg : STD_LOGIC := '0';
    signal grp_aes_table_Pipeline_2_fu_299_ap_start_reg : STD_LOGIC := '0';
    signal grp_aes_table_Pipeline_3_fu_306_ap_start_reg : STD_LOGIC := '0';
    signal grp_aes_table_Pipeline_4_fu_313_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal zext_ln132_fu_404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln133_fu_409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln134_fu_414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_fu_419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_fu_443_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_fu_447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln140_fu_451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln141_fu_455_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln144_fu_478_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln145_fu_483_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln146_fu_488_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln147_fu_492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln150_fu_515_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_fu_519_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_fu_523_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln153_fu_527_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln132_fu_400_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln_fu_424_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln1_fu_459_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln2_fu_496_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln3_fu_531_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component aes_table_aes_table_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        w : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component aes_table_aes_table_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        w_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component aes_table_aes_table_Pipeline_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        w_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component aes_table_aes_table_Pipeline_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        w_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component aes_table_S_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    S_U : component aes_table_S_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => S_address0,
        ce0 => S_ce0,
        q0 => S_q0,
        address1 => S_address1,
        ce1 => S_ce1,
        q1 => S_q1,
        address2 => S_address2,
        ce2 => S_ce2,
        q2 => S_q2,
        address3 => S_address3,
        ce3 => S_ce3,
        q3 => S_q3);

    grp_aes_table_Pipeline_1_fu_292 : component aes_table_aes_table_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_aes_table_Pipeline_1_fu_292_ap_start,
        ap_done => grp_aes_table_Pipeline_1_fu_292_ap_done,
        ap_idle => grp_aes_table_Pipeline_1_fu_292_ap_idle,
        ap_ready => grp_aes_table_Pipeline_1_fu_292_ap_ready,
        w => w_reg_645,
        out_r_address0 => grp_aes_table_Pipeline_1_fu_292_out_r_address0,
        out_r_ce0 => grp_aes_table_Pipeline_1_fu_292_out_r_ce0,
        out_r_we0 => grp_aes_table_Pipeline_1_fu_292_out_r_we0,
        out_r_d0 => grp_aes_table_Pipeline_1_fu_292_out_r_d0);

    grp_aes_table_Pipeline_2_fu_299 : component aes_table_aes_table_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_aes_table_Pipeline_2_fu_299_ap_start,
        ap_done => grp_aes_table_Pipeline_2_fu_299_ap_done,
        ap_idle => grp_aes_table_Pipeline_2_fu_299_ap_idle,
        ap_ready => grp_aes_table_Pipeline_2_fu_299_ap_ready,
        w_1 => w_1_reg_675,
        out_r_address0 => grp_aes_table_Pipeline_2_fu_299_out_r_address0,
        out_r_ce0 => grp_aes_table_Pipeline_2_fu_299_out_r_ce0,
        out_r_we0 => grp_aes_table_Pipeline_2_fu_299_out_r_we0,
        out_r_d0 => grp_aes_table_Pipeline_2_fu_299_out_r_d0);

    grp_aes_table_Pipeline_3_fu_306 : component aes_table_aes_table_Pipeline_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_aes_table_Pipeline_3_fu_306_ap_start,
        ap_done => grp_aes_table_Pipeline_3_fu_306_ap_done,
        ap_idle => grp_aes_table_Pipeline_3_fu_306_ap_idle,
        ap_ready => grp_aes_table_Pipeline_3_fu_306_ap_ready,
        w_2 => w_2_reg_705,
        out_r_address0 => grp_aes_table_Pipeline_3_fu_306_out_r_address0,
        out_r_ce0 => grp_aes_table_Pipeline_3_fu_306_out_r_ce0,
        out_r_we0 => grp_aes_table_Pipeline_3_fu_306_out_r_we0,
        out_r_d0 => grp_aes_table_Pipeline_3_fu_306_out_r_d0);

    grp_aes_table_Pipeline_4_fu_313 : component aes_table_aes_table_Pipeline_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_aes_table_Pipeline_4_fu_313_ap_start,
        ap_done => grp_aes_table_Pipeline_4_fu_313_ap_done,
        ap_idle => grp_aes_table_Pipeline_4_fu_313_ap_idle,
        ap_ready => grp_aes_table_Pipeline_4_fu_313_ap_ready,
        w_3 => w_3_reg_735,
        out_r_address0 => grp_aes_table_Pipeline_4_fu_313_out_r_address0,
        out_r_ce0 => grp_aes_table_Pipeline_4_fu_313_out_r_ce0,
        out_r_we0 => grp_aes_table_Pipeline_4_fu_313_out_r_we0,
        out_r_d0 => grp_aes_table_Pipeline_4_fu_313_out_r_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_aes_table_Pipeline_1_fu_292_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_aes_table_Pipeline_1_fu_292_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_aes_table_Pipeline_1_fu_292_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_aes_table_Pipeline_1_fu_292_ap_ready = ap_const_logic_1)) then 
                    grp_aes_table_Pipeline_1_fu_292_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_aes_table_Pipeline_2_fu_299_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_aes_table_Pipeline_2_fu_299_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_aes_table_Pipeline_2_fu_299_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_aes_table_Pipeline_2_fu_299_ap_ready = ap_const_logic_1)) then 
                    grp_aes_table_Pipeline_2_fu_299_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_aes_table_Pipeline_3_fu_306_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_aes_table_Pipeline_3_fu_306_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_aes_table_Pipeline_3_fu_306_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_aes_table_Pipeline_3_fu_306_ap_ready = ap_const_logic_1)) then 
                    grp_aes_table_Pipeline_3_fu_306_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_aes_table_Pipeline_4_fu_313_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_aes_table_Pipeline_4_fu_313_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_aes_table_Pipeline_4_fu_313_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_aes_table_Pipeline_4_fu_313_ap_ready = ap_const_logic_1)) then 
                    grp_aes_table_Pipeline_4_fu_313_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                lshr_ln1_reg_580 <= rk_q0(31 downto 24);
                trunc_ln115_reg_560 <= trunc_ln115_fu_388_p1;
                trunc_ln120_reg_565 <= trunc_ln120_fu_392_p1;
                trunc_ln6_reg_585 <= rk_q1(15 downto 8);
                trunc_ln7_reg_590 <= rk_q1(23 downto 16);
                trunc_ln8_reg_595 <= rk_q0(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                lshr_ln3_reg_640 <= rk_q0(31 downto 24);
                trunc_ln125_reg_600 <= trunc_ln125_fu_396_p1;
                trunc_ln3_reg_630 <= rk_q1(23 downto 16);
                trunc_ln4_reg_635 <= rk_q0(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
                reg_380 <= rk_q1(31 downto 24);
                reg_384 <= rk_q0(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                w_1_reg_675 <= w_1_fu_471_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                w_2_reg_705 <= w_2_fu_508_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                w_3_reg_735 <= w_3_fu_543_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                w_reg_645 <= w_fu_436_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, grp_aes_table_Pipeline_1_fu_292_ap_done, grp_aes_table_Pipeline_2_fu_299_ap_done, grp_aes_table_Pipeline_3_fu_306_ap_done, grp_aes_table_Pipeline_4_fu_313_ap_done, ap_CS_fsm_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_aes_table_Pipeline_1_fu_292_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_aes_table_Pipeline_2_fu_299_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_aes_table_Pipeline_3_fu_306_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_aes_table_Pipeline_4_fu_313_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    S_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, zext_ln135_fu_419_p1, zext_ln141_fu_455_p1, zext_ln147_fu_492_p1, zext_ln153_fu_527_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            S_address0 <= zext_ln153_fu_527_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            S_address0 <= zext_ln147_fu_492_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            S_address0 <= zext_ln141_fu_455_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            S_address0 <= zext_ln135_fu_419_p1(8 - 1 downto 0);
        else 
            S_address0 <= "XXXXXXXX";
        end if; 
    end process;


    S_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, zext_ln134_fu_414_p1, zext_ln140_fu_451_p1, zext_ln146_fu_488_p1, zext_ln152_fu_523_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            S_address1 <= zext_ln152_fu_523_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            S_address1 <= zext_ln146_fu_488_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            S_address1 <= zext_ln140_fu_451_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            S_address1 <= zext_ln134_fu_414_p1(8 - 1 downto 0);
        else 
            S_address1 <= "XXXXXXXX";
        end if; 
    end process;


    S_address2_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, zext_ln133_fu_409_p1, zext_ln139_fu_447_p1, zext_ln145_fu_483_p1, zext_ln151_fu_519_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            S_address2 <= zext_ln151_fu_519_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            S_address2 <= zext_ln145_fu_483_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            S_address2 <= zext_ln139_fu_447_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            S_address2 <= zext_ln133_fu_409_p1(8 - 1 downto 0);
        else 
            S_address2 <= "XXXXXXXX";
        end if; 
    end process;


    S_address3_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, zext_ln132_fu_404_p1, zext_ln138_fu_443_p1, zext_ln144_fu_478_p1, zext_ln150_fu_515_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            S_address3 <= zext_ln150_fu_515_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            S_address3 <= zext_ln144_fu_478_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            S_address3 <= zext_ln138_fu_443_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            S_address3 <= zext_ln132_fu_404_p1(8 - 1 downto 0);
        else 
            S_address3 <= "XXXXXXXX";
        end if; 
    end process;


    S_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, grp_aes_table_Pipeline_1_fu_292_ap_done, grp_aes_table_Pipeline_2_fu_299_ap_done, grp_aes_table_Pipeline_3_fu_306_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_aes_table_Pipeline_3_fu_306_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((grp_aes_table_Pipeline_2_fu_299_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((grp_aes_table_Pipeline_1_fu_292_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            S_ce0 <= ap_const_logic_1;
        else 
            S_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    S_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, grp_aes_table_Pipeline_1_fu_292_ap_done, grp_aes_table_Pipeline_2_fu_299_ap_done, grp_aes_table_Pipeline_3_fu_306_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_aes_table_Pipeline_3_fu_306_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((grp_aes_table_Pipeline_2_fu_299_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((grp_aes_table_Pipeline_1_fu_292_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            S_ce1 <= ap_const_logic_1;
        else 
            S_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    S_ce2_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, grp_aes_table_Pipeline_1_fu_292_ap_done, grp_aes_table_Pipeline_2_fu_299_ap_done, grp_aes_table_Pipeline_3_fu_306_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_aes_table_Pipeline_3_fu_306_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((grp_aes_table_Pipeline_2_fu_299_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((grp_aes_table_Pipeline_1_fu_292_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            S_ce2 <= ap_const_logic_1;
        else 
            S_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    S_ce3_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, grp_aes_table_Pipeline_1_fu_292_ap_done, grp_aes_table_Pipeline_2_fu_299_ap_done, grp_aes_table_Pipeline_3_fu_306_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_aes_table_Pipeline_3_fu_306_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((grp_aes_table_Pipeline_2_fu_299_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((grp_aes_table_Pipeline_1_fu_292_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            S_ce3 <= ap_const_logic_1;
        else 
            S_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_aes_table_Pipeline_4_fu_313_ap_done)
    begin
        if ((grp_aes_table_Pipeline_4_fu_313_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_aes_table_Pipeline_1_fu_292_ap_done)
    begin
        if ((grp_aes_table_Pipeline_1_fu_292_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_aes_table_Pipeline_2_fu_299_ap_done)
    begin
        if ((grp_aes_table_Pipeline_2_fu_299_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_aes_table_Pipeline_3_fu_306_ap_done)
    begin
        if ((grp_aes_table_Pipeline_3_fu_306_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_aes_table_Pipeline_4_fu_313_ap_done, ap_CS_fsm_state11)
    begin
        if (((grp_aes_table_Pipeline_4_fu_313_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_aes_table_Pipeline_4_fu_313_ap_done, ap_CS_fsm_state11)
    begin
        if (((grp_aes_table_Pipeline_4_fu_313_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_aes_table_Pipeline_1_fu_292_ap_start <= grp_aes_table_Pipeline_1_fu_292_ap_start_reg;
    grp_aes_table_Pipeline_2_fu_299_ap_start <= grp_aes_table_Pipeline_2_fu_299_ap_start_reg;
    grp_aes_table_Pipeline_3_fu_306_ap_start <= grp_aes_table_Pipeline_3_fu_306_ap_start_reg;
    grp_aes_table_Pipeline_4_fu_313_ap_start <= grp_aes_table_Pipeline_4_fu_313_ap_start_reg;
    grp_fu_350_p4 <= rk_q1(15 downto 8);
    in_r_address0 <= ap_const_lv4_0;
    in_r_address1 <= ap_const_lv4_0;
    in_r_ce0 <= ap_const_logic_0;
    in_r_ce1 <= ap_const_logic_0;
    in_r_d0 <= ap_const_lv8_0;
    in_r_d1 <= ap_const_lv8_0;
    in_r_we0 <= ap_const_logic_0;
    in_r_we1 <= ap_const_logic_0;
    or_ln1_fu_459_p5 <= (((S_q3 & S_q2) & S_q1) & S_q0);
    or_ln2_fu_496_p5 <= (((S_q3 & S_q2) & S_q1) & S_q0);
    or_ln3_fu_531_p5 <= (((S_q3 & S_q2) & S_q1) & S_q0);
    or_ln_fu_424_p5 <= (((S_q3 & S_q2) & S_q1) & S_q0);

    out_r_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, grp_aes_table_Pipeline_1_fu_292_out_r_address0, grp_aes_table_Pipeline_2_fu_299_out_r_address0, grp_aes_table_Pipeline_3_fu_306_out_r_address0, grp_aes_table_Pipeline_4_fu_313_out_r_address0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            out_r_address0 <= grp_aes_table_Pipeline_4_fu_313_out_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            out_r_address0 <= grp_aes_table_Pipeline_3_fu_306_out_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            out_r_address0 <= grp_aes_table_Pipeline_2_fu_299_out_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            out_r_address0 <= grp_aes_table_Pipeline_1_fu_292_out_r_address0;
        else 
            out_r_address0 <= "XXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, grp_aes_table_Pipeline_1_fu_292_out_r_ce0, grp_aes_table_Pipeline_2_fu_299_out_r_ce0, grp_aes_table_Pipeline_3_fu_306_out_r_ce0, grp_aes_table_Pipeline_4_fu_313_out_r_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            out_r_ce0 <= grp_aes_table_Pipeline_4_fu_313_out_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            out_r_ce0 <= grp_aes_table_Pipeline_3_fu_306_out_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            out_r_ce0 <= grp_aes_table_Pipeline_2_fu_299_out_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            out_r_ce0 <= grp_aes_table_Pipeline_1_fu_292_out_r_ce0;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, grp_aes_table_Pipeline_1_fu_292_out_r_d0, grp_aes_table_Pipeline_2_fu_299_out_r_d0, grp_aes_table_Pipeline_3_fu_306_out_r_d0, grp_aes_table_Pipeline_4_fu_313_out_r_d0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            out_r_d0 <= grp_aes_table_Pipeline_4_fu_313_out_r_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            out_r_d0 <= grp_aes_table_Pipeline_3_fu_306_out_r_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            out_r_d0 <= grp_aes_table_Pipeline_2_fu_299_out_r_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            out_r_d0 <= grp_aes_table_Pipeline_1_fu_292_out_r_d0;
        else 
            out_r_d0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state9, grp_aes_table_Pipeline_1_fu_292_out_r_we0, grp_aes_table_Pipeline_2_fu_299_out_r_we0, grp_aes_table_Pipeline_3_fu_306_out_r_we0, grp_aes_table_Pipeline_4_fu_313_out_r_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            out_r_we0 <= grp_aes_table_Pipeline_4_fu_313_out_r_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            out_r_we0 <= grp_aes_table_Pipeline_3_fu_306_out_r_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            out_r_we0 <= grp_aes_table_Pipeline_2_fu_299_out_r_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            out_r_we0 <= grp_aes_table_Pipeline_1_fu_292_out_r_we0;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rk_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rk_address0 <= ap_const_lv64_3A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rk_address0 <= ap_const_lv64_38(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rk_address0 <= ap_const_lv64_37(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rk_address0 <= ap_const_lv64_35(6 - 1 downto 0);
        else 
            rk_address0 <= "XXXXXX";
        end if; 
    end process;


    rk_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            rk_address1 <= ap_const_lv64_3B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rk_address1 <= ap_const_lv64_39(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rk_address1 <= ap_const_lv64_36(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rk_address1 <= ap_const_lv64_34(6 - 1 downto 0);
        else 
            rk_address1 <= "XXXXXX";
        end if; 
    end process;


    rk_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state7, grp_aes_table_Pipeline_2_fu_299_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((grp_aes_table_Pipeline_2_fu_299_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            rk_ce0 <= ap_const_logic_1;
        else 
            rk_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rk_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state9, grp_aes_table_Pipeline_1_fu_292_ap_done, grp_aes_table_Pipeline_3_fu_306_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((grp_aes_table_Pipeline_3_fu_306_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((grp_aes_table_Pipeline_1_fu_292_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            rk_ce1 <= ap_const_logic_1;
        else 
            rk_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln115_fu_388_p1 <= rk_q1(8 - 1 downto 0);
    trunc_ln120_fu_392_p1 <= rk_q0(8 - 1 downto 0);
    trunc_ln125_fu_396_p1 <= rk_q1(8 - 1 downto 0);
    trunc_ln132_fu_400_p1 <= rk_q0(8 - 1 downto 0);
    w_1_fu_471_p2 <= (rk_q1 xor or_ln1_fu_459_p5);
    w_2_fu_508_p2 <= (rk_q0 xor or_ln2_fu_496_p5);
    w_3_fu_543_p2 <= (rk_q1 xor or_ln3_fu_531_p5);
    w_fu_436_p2 <= (rk_q0 xor or_ln_fu_424_p5);
    zext_ln132_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_380),64));
    zext_ln133_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_384),64));
    zext_ln134_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_350_p4),64));
    zext_ln135_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln132_fu_400_p1),64));
    zext_ln138_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_reg_580),64));
    zext_ln139_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln3_reg_630),64));
    zext_ln140_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln4_reg_635),64));
    zext_ln141_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln115_reg_560),64));
    zext_ln144_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_380),64));
    zext_ln145_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_384),64));
    zext_ln146_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln6_reg_585),64));
    zext_ln147_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln120_reg_565),64));
    zext_ln150_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln3_reg_640),64));
    zext_ln151_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln7_reg_590),64));
    zext_ln152_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln8_reg_595),64));
    zext_ln153_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln125_reg_600),64));
end behav;
