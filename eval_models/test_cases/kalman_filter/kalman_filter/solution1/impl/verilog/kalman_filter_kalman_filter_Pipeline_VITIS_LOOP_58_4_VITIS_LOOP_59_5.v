// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kalman_filter_kalman_filter_Pipeline_VITIS_LOOP_58_4_VITIS_LOOP_59_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_arr_1_V_address0,
        p_arr_1_V_ce0,
        p_arr_1_V_we0,
        p_arr_1_V_d0,
        p_arr_1_V_address1,
        p_arr_1_V_ce1,
        p_arr_1_V_q1,
        in_local_V_address0,
        in_local_V_ce0,
        in_local_V_q0,
        u_hat_arr_V_address0,
        u_hat_arr_V_ce0,
        u_hat_arr_V_we0,
        u_hat_arr_V_d0,
        u_hat_arr_V_address1,
        u_hat_arr_V_ce1,
        u_hat_arr_V_q1,
        out_local_V_address0,
        out_local_V_ce0,
        out_local_V_we0,
        out_local_V_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] p_arr_1_V_address0;
output   p_arr_1_V_ce0;
output   p_arr_1_V_we0;
output  [18:0] p_arr_1_V_d0;
output  [5:0] p_arr_1_V_address1;
output   p_arr_1_V_ce1;
input  [18:0] p_arr_1_V_q1;
output  [17:0] in_local_V_address0;
output   in_local_V_ce0;
input  [18:0] in_local_V_q0;
output  [5:0] u_hat_arr_V_address0;
output   u_hat_arr_V_ce0;
output   u_hat_arr_V_we0;
output  [18:0] u_hat_arr_V_d0;
output  [5:0] u_hat_arr_V_address1;
output   u_hat_arr_V_ce1;
input  [18:0] u_hat_arr_V_q1;
output  [17:0] out_local_V_address0;
output   out_local_V_ce0;
output   out_local_V_we0;
output  [18:0] out_local_V_d0;

reg ap_idle;
reg p_arr_1_V_ce0;
reg p_arr_1_V_we0;
reg p_arr_1_V_ce1;
reg in_local_V_ce0;
reg u_hat_arr_V_ce0;
reg u_hat_arr_V_we0;
reg u_hat_arr_V_ce1;
reg out_local_V_ce0;
reg out_local_V_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln58_fu_159_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln59_fu_174_p2;
reg   [0:0] icmp_ln59_reg_447;
reg   [0:0] icmp_ln59_reg_447_pp0_iter1_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter2_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter3_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter4_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter5_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter6_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter7_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter8_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter9_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter10_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter11_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter12_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter13_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter14_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter15_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter16_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter17_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter18_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter19_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter20_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter21_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter22_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter23_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter24_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter25_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter26_reg;
reg   [0:0] icmp_ln59_reg_447_pp0_iter27_reg;
reg   [5:0] p_arr_1_V_addr_reg_452;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter1_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter2_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter3_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter4_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter5_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter6_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter7_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter8_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter9_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter10_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter11_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter12_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter13_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter14_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter15_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter16_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter17_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter18_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter19_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter20_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter21_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter22_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter23_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter24_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter25_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter26_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter27_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter28_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter29_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter30_reg;
reg   [5:0] p_arr_1_V_addr_reg_452_pp0_iter31_reg;
wire   [5:0] trunc_ln64_fu_194_p1;
reg   [5:0] trunc_ln64_reg_458;
reg   [5:0] trunc_ln64_reg_458_pp0_iter1_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter2_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter3_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter4_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter5_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter6_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter7_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter8_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter9_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter10_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter11_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter12_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter13_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter14_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter15_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter16_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter17_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter18_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter19_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter20_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter21_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter22_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter23_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter24_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter25_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter26_reg;
reg   [5:0] trunc_ln64_reg_458_pp0_iter27_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter1_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter2_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter3_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter4_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter5_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter6_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter7_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter8_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter9_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter10_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter11_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter12_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter13_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter14_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter15_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter16_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter17_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter18_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter19_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter20_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter21_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter22_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter23_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter24_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter25_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter26_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter27_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter28_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter29_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter30_reg;
reg   [5:0] u_hat_arr_V_addr_reg_463_pp0_iter31_reg;
wire  signed [18:0] calc_temp_arr_V_fu_218_p2;
reg  signed [18:0] calc_temp_arr_V_reg_469;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter2_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter3_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter4_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter5_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter6_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter7_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter8_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter9_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter10_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter11_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter12_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter13_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter14_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter15_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter16_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter17_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter18_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter19_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter20_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter21_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter22_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter23_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter24_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter25_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter26_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter27_reg;
reg  signed [18:0] calc_temp_arr_V_reg_469_pp0_iter28_reg;
wire   [63:0] zext_ln813_fu_281_p1;
reg   [63:0] zext_ln813_reg_484;
reg   [63:0] zext_ln813_reg_484_pp0_iter29_reg;
reg   [63:0] zext_ln813_reg_484_pp0_iter30_reg;
reg   [63:0] zext_ln813_reg_484_pp0_iter31_reg;
reg  signed [18:0] rhs_reg_494;
reg  signed [18:0] rhs_reg_494_pp0_iter30_reg;
reg  signed [18:0] rhs_reg_494_pp0_iter31_reg;
wire   [63:0] i_3_cast177_fu_188_p1;
wire    ap_block_pp0_stage0;
reg   [6:0] i_fu_70;
wire   [6:0] add_ln59_fu_198_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i_load;
reg   [12:0] t_fu_74;
wire   [12:0] select_ln58_1_fu_257_p3;
reg   [17:0] indvar_flatten_fu_78;
wire   [17:0] add_ln58_fu_165_p2;
reg   [17:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [18:0] add_ln377_fu_371_p2;
wire   [6:0] select_ln58_fu_180_p3;
wire  signed [18:0] sext_ln1347_fu_214_p0;
wire  signed [18:0] calc_temp_arr_V_fu_218_p0;
wire  signed [19:0] sext_ln1347_fu_214_p1;
wire  signed [19:0] ret_V_fu_224_p2;
wire   [24:0] grp_fu_242_p0;
wire   [12:0] add_ln58_1_fu_251_p2;
wire   [17:0] shl_ln1_fu_268_p3;
wire   [17:0] zext_ln58_fu_264_p1;
wire   [17:0] add_ln64_fu_275_p2;
wire   [18:0] grp_fu_242_p2;
wire  signed [18:0] sext_ln813_1_fu_299_p0;
wire  signed [19:0] sext_ln813_fu_295_p1;
wire  signed [19:0] sext_ln813_1_fu_299_p1;
wire  signed [18:0] k_arr_V_fu_291_p1;
wire  signed [19:0] ret_V_1_fu_303_p2;
wire  signed [19:0] sext_ln813_2_fu_317_p1;
wire  signed [19:0] ret_V_5_fu_321_p2;
wire  signed [38:0] grp_fu_406_p2;
wire   [24:0] lhs_V_2_fu_334_p3;
wire   [24:0] trunc_ln1347_fu_341_p1;
wire   [24:0] ret_V_4_fu_344_p2;
wire   [0:0] tmp_fu_360_p3;
wire   [18:0] zext_ln377_fu_367_p1;
wire   [18:0] trunc_ln7_fu_350_p4;
wire  signed [38:0] grp_fu_414_p2;
wire   [0:0] tmp_40_fu_388_p3;
wire   [18:0] zext_ln377_1_fu_395_p1;
wire   [18:0] trunc_ln818_1_fu_379_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kalman_filter_sdiv_25ns_20s_19_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 19 ))
sdiv_25ns_20s_19_29_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_242_p0),
    .din1(ret_V_fu_224_p2),
    .ce(1'b1),
    .dout(grp_fu_242_p2)
);

kalman_filter_mul_mul_20s_19s_39_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_mul_20s_19s_39_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_V_1_fu_303_p2),
    .din1(k_arr_V_fu_291_p1),
    .ce(1'b1),
    .dout(grp_fu_406_p2)
);

kalman_filter_mul_mul_20s_19s_39_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 39 ))
mul_mul_20s_19s_39_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_V_5_fu_321_p2),
    .din1(calc_temp_arr_V_reg_469_pp0_iter28_reg),
    .ce(1'b1),
    .dout(grp_fu_414_p2)
);

kalman_filter_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter31_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln58_fu_159_p2 == 1'd0))) begin
            i_fu_70 <= add_ln59_fu_198_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_70 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln58_fu_159_p2 == 1'd0))) begin
            indvar_flatten_fu_78 <= add_ln58_fu_165_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_78 <= 18'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_fu_74 <= 13'd1;
        end else if ((ap_enable_reg_pp0_iter28 == 1'b1)) begin
            t_fu_74 <= select_ln58_1_fu_257_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        calc_temp_arr_V_reg_469_pp0_iter10_reg <= calc_temp_arr_V_reg_469_pp0_iter9_reg;
        calc_temp_arr_V_reg_469_pp0_iter11_reg <= calc_temp_arr_V_reg_469_pp0_iter10_reg;
        calc_temp_arr_V_reg_469_pp0_iter12_reg <= calc_temp_arr_V_reg_469_pp0_iter11_reg;
        calc_temp_arr_V_reg_469_pp0_iter13_reg <= calc_temp_arr_V_reg_469_pp0_iter12_reg;
        calc_temp_arr_V_reg_469_pp0_iter14_reg <= calc_temp_arr_V_reg_469_pp0_iter13_reg;
        calc_temp_arr_V_reg_469_pp0_iter15_reg <= calc_temp_arr_V_reg_469_pp0_iter14_reg;
        calc_temp_arr_V_reg_469_pp0_iter16_reg <= calc_temp_arr_V_reg_469_pp0_iter15_reg;
        calc_temp_arr_V_reg_469_pp0_iter17_reg <= calc_temp_arr_V_reg_469_pp0_iter16_reg;
        calc_temp_arr_V_reg_469_pp0_iter18_reg <= calc_temp_arr_V_reg_469_pp0_iter17_reg;
        calc_temp_arr_V_reg_469_pp0_iter19_reg <= calc_temp_arr_V_reg_469_pp0_iter18_reg;
        calc_temp_arr_V_reg_469_pp0_iter20_reg <= calc_temp_arr_V_reg_469_pp0_iter19_reg;
        calc_temp_arr_V_reg_469_pp0_iter21_reg <= calc_temp_arr_V_reg_469_pp0_iter20_reg;
        calc_temp_arr_V_reg_469_pp0_iter22_reg <= calc_temp_arr_V_reg_469_pp0_iter21_reg;
        calc_temp_arr_V_reg_469_pp0_iter23_reg <= calc_temp_arr_V_reg_469_pp0_iter22_reg;
        calc_temp_arr_V_reg_469_pp0_iter24_reg <= calc_temp_arr_V_reg_469_pp0_iter23_reg;
        calc_temp_arr_V_reg_469_pp0_iter25_reg <= calc_temp_arr_V_reg_469_pp0_iter24_reg;
        calc_temp_arr_V_reg_469_pp0_iter26_reg <= calc_temp_arr_V_reg_469_pp0_iter25_reg;
        calc_temp_arr_V_reg_469_pp0_iter27_reg <= calc_temp_arr_V_reg_469_pp0_iter26_reg;
        calc_temp_arr_V_reg_469_pp0_iter28_reg <= calc_temp_arr_V_reg_469_pp0_iter27_reg;
        calc_temp_arr_V_reg_469_pp0_iter2_reg <= calc_temp_arr_V_reg_469;
        calc_temp_arr_V_reg_469_pp0_iter3_reg <= calc_temp_arr_V_reg_469_pp0_iter2_reg;
        calc_temp_arr_V_reg_469_pp0_iter4_reg <= calc_temp_arr_V_reg_469_pp0_iter3_reg;
        calc_temp_arr_V_reg_469_pp0_iter5_reg <= calc_temp_arr_V_reg_469_pp0_iter4_reg;
        calc_temp_arr_V_reg_469_pp0_iter6_reg <= calc_temp_arr_V_reg_469_pp0_iter5_reg;
        calc_temp_arr_V_reg_469_pp0_iter7_reg <= calc_temp_arr_V_reg_469_pp0_iter6_reg;
        calc_temp_arr_V_reg_469_pp0_iter8_reg <= calc_temp_arr_V_reg_469_pp0_iter7_reg;
        calc_temp_arr_V_reg_469_pp0_iter9_reg <= calc_temp_arr_V_reg_469_pp0_iter8_reg;
        icmp_ln59_reg_447_pp0_iter10_reg <= icmp_ln59_reg_447_pp0_iter9_reg;
        icmp_ln59_reg_447_pp0_iter11_reg <= icmp_ln59_reg_447_pp0_iter10_reg;
        icmp_ln59_reg_447_pp0_iter12_reg <= icmp_ln59_reg_447_pp0_iter11_reg;
        icmp_ln59_reg_447_pp0_iter13_reg <= icmp_ln59_reg_447_pp0_iter12_reg;
        icmp_ln59_reg_447_pp0_iter14_reg <= icmp_ln59_reg_447_pp0_iter13_reg;
        icmp_ln59_reg_447_pp0_iter15_reg <= icmp_ln59_reg_447_pp0_iter14_reg;
        icmp_ln59_reg_447_pp0_iter16_reg <= icmp_ln59_reg_447_pp0_iter15_reg;
        icmp_ln59_reg_447_pp0_iter17_reg <= icmp_ln59_reg_447_pp0_iter16_reg;
        icmp_ln59_reg_447_pp0_iter18_reg <= icmp_ln59_reg_447_pp0_iter17_reg;
        icmp_ln59_reg_447_pp0_iter19_reg <= icmp_ln59_reg_447_pp0_iter18_reg;
        icmp_ln59_reg_447_pp0_iter20_reg <= icmp_ln59_reg_447_pp0_iter19_reg;
        icmp_ln59_reg_447_pp0_iter21_reg <= icmp_ln59_reg_447_pp0_iter20_reg;
        icmp_ln59_reg_447_pp0_iter22_reg <= icmp_ln59_reg_447_pp0_iter21_reg;
        icmp_ln59_reg_447_pp0_iter23_reg <= icmp_ln59_reg_447_pp0_iter22_reg;
        icmp_ln59_reg_447_pp0_iter24_reg <= icmp_ln59_reg_447_pp0_iter23_reg;
        icmp_ln59_reg_447_pp0_iter25_reg <= icmp_ln59_reg_447_pp0_iter24_reg;
        icmp_ln59_reg_447_pp0_iter26_reg <= icmp_ln59_reg_447_pp0_iter25_reg;
        icmp_ln59_reg_447_pp0_iter27_reg <= icmp_ln59_reg_447_pp0_iter26_reg;
        icmp_ln59_reg_447_pp0_iter2_reg <= icmp_ln59_reg_447_pp0_iter1_reg;
        icmp_ln59_reg_447_pp0_iter3_reg <= icmp_ln59_reg_447_pp0_iter2_reg;
        icmp_ln59_reg_447_pp0_iter4_reg <= icmp_ln59_reg_447_pp0_iter3_reg;
        icmp_ln59_reg_447_pp0_iter5_reg <= icmp_ln59_reg_447_pp0_iter4_reg;
        icmp_ln59_reg_447_pp0_iter6_reg <= icmp_ln59_reg_447_pp0_iter5_reg;
        icmp_ln59_reg_447_pp0_iter7_reg <= icmp_ln59_reg_447_pp0_iter6_reg;
        icmp_ln59_reg_447_pp0_iter8_reg <= icmp_ln59_reg_447_pp0_iter7_reg;
        icmp_ln59_reg_447_pp0_iter9_reg <= icmp_ln59_reg_447_pp0_iter8_reg;
        p_arr_1_V_addr_reg_452_pp0_iter10_reg <= p_arr_1_V_addr_reg_452_pp0_iter9_reg;
        p_arr_1_V_addr_reg_452_pp0_iter11_reg <= p_arr_1_V_addr_reg_452_pp0_iter10_reg;
        p_arr_1_V_addr_reg_452_pp0_iter12_reg <= p_arr_1_V_addr_reg_452_pp0_iter11_reg;
        p_arr_1_V_addr_reg_452_pp0_iter13_reg <= p_arr_1_V_addr_reg_452_pp0_iter12_reg;
        p_arr_1_V_addr_reg_452_pp0_iter14_reg <= p_arr_1_V_addr_reg_452_pp0_iter13_reg;
        p_arr_1_V_addr_reg_452_pp0_iter15_reg <= p_arr_1_V_addr_reg_452_pp0_iter14_reg;
        p_arr_1_V_addr_reg_452_pp0_iter16_reg <= p_arr_1_V_addr_reg_452_pp0_iter15_reg;
        p_arr_1_V_addr_reg_452_pp0_iter17_reg <= p_arr_1_V_addr_reg_452_pp0_iter16_reg;
        p_arr_1_V_addr_reg_452_pp0_iter18_reg <= p_arr_1_V_addr_reg_452_pp0_iter17_reg;
        p_arr_1_V_addr_reg_452_pp0_iter19_reg <= p_arr_1_V_addr_reg_452_pp0_iter18_reg;
        p_arr_1_V_addr_reg_452_pp0_iter20_reg <= p_arr_1_V_addr_reg_452_pp0_iter19_reg;
        p_arr_1_V_addr_reg_452_pp0_iter21_reg <= p_arr_1_V_addr_reg_452_pp0_iter20_reg;
        p_arr_1_V_addr_reg_452_pp0_iter22_reg <= p_arr_1_V_addr_reg_452_pp0_iter21_reg;
        p_arr_1_V_addr_reg_452_pp0_iter23_reg <= p_arr_1_V_addr_reg_452_pp0_iter22_reg;
        p_arr_1_V_addr_reg_452_pp0_iter24_reg <= p_arr_1_V_addr_reg_452_pp0_iter23_reg;
        p_arr_1_V_addr_reg_452_pp0_iter25_reg <= p_arr_1_V_addr_reg_452_pp0_iter24_reg;
        p_arr_1_V_addr_reg_452_pp0_iter26_reg <= p_arr_1_V_addr_reg_452_pp0_iter25_reg;
        p_arr_1_V_addr_reg_452_pp0_iter27_reg <= p_arr_1_V_addr_reg_452_pp0_iter26_reg;
        p_arr_1_V_addr_reg_452_pp0_iter28_reg <= p_arr_1_V_addr_reg_452_pp0_iter27_reg;
        p_arr_1_V_addr_reg_452_pp0_iter29_reg <= p_arr_1_V_addr_reg_452_pp0_iter28_reg;
        p_arr_1_V_addr_reg_452_pp0_iter2_reg <= p_arr_1_V_addr_reg_452_pp0_iter1_reg;
        p_arr_1_V_addr_reg_452_pp0_iter30_reg <= p_arr_1_V_addr_reg_452_pp0_iter29_reg;
        p_arr_1_V_addr_reg_452_pp0_iter31_reg <= p_arr_1_V_addr_reg_452_pp0_iter30_reg;
        p_arr_1_V_addr_reg_452_pp0_iter3_reg <= p_arr_1_V_addr_reg_452_pp0_iter2_reg;
        p_arr_1_V_addr_reg_452_pp0_iter4_reg <= p_arr_1_V_addr_reg_452_pp0_iter3_reg;
        p_arr_1_V_addr_reg_452_pp0_iter5_reg <= p_arr_1_V_addr_reg_452_pp0_iter4_reg;
        p_arr_1_V_addr_reg_452_pp0_iter6_reg <= p_arr_1_V_addr_reg_452_pp0_iter5_reg;
        p_arr_1_V_addr_reg_452_pp0_iter7_reg <= p_arr_1_V_addr_reg_452_pp0_iter6_reg;
        p_arr_1_V_addr_reg_452_pp0_iter8_reg <= p_arr_1_V_addr_reg_452_pp0_iter7_reg;
        p_arr_1_V_addr_reg_452_pp0_iter9_reg <= p_arr_1_V_addr_reg_452_pp0_iter8_reg;
        rhs_reg_494_pp0_iter30_reg <= rhs_reg_494;
        rhs_reg_494_pp0_iter31_reg <= rhs_reg_494_pp0_iter30_reg;
        trunc_ln64_reg_458_pp0_iter10_reg <= trunc_ln64_reg_458_pp0_iter9_reg;
        trunc_ln64_reg_458_pp0_iter11_reg <= trunc_ln64_reg_458_pp0_iter10_reg;
        trunc_ln64_reg_458_pp0_iter12_reg <= trunc_ln64_reg_458_pp0_iter11_reg;
        trunc_ln64_reg_458_pp0_iter13_reg <= trunc_ln64_reg_458_pp0_iter12_reg;
        trunc_ln64_reg_458_pp0_iter14_reg <= trunc_ln64_reg_458_pp0_iter13_reg;
        trunc_ln64_reg_458_pp0_iter15_reg <= trunc_ln64_reg_458_pp0_iter14_reg;
        trunc_ln64_reg_458_pp0_iter16_reg <= trunc_ln64_reg_458_pp0_iter15_reg;
        trunc_ln64_reg_458_pp0_iter17_reg <= trunc_ln64_reg_458_pp0_iter16_reg;
        trunc_ln64_reg_458_pp0_iter18_reg <= trunc_ln64_reg_458_pp0_iter17_reg;
        trunc_ln64_reg_458_pp0_iter19_reg <= trunc_ln64_reg_458_pp0_iter18_reg;
        trunc_ln64_reg_458_pp0_iter20_reg <= trunc_ln64_reg_458_pp0_iter19_reg;
        trunc_ln64_reg_458_pp0_iter21_reg <= trunc_ln64_reg_458_pp0_iter20_reg;
        trunc_ln64_reg_458_pp0_iter22_reg <= trunc_ln64_reg_458_pp0_iter21_reg;
        trunc_ln64_reg_458_pp0_iter23_reg <= trunc_ln64_reg_458_pp0_iter22_reg;
        trunc_ln64_reg_458_pp0_iter24_reg <= trunc_ln64_reg_458_pp0_iter23_reg;
        trunc_ln64_reg_458_pp0_iter25_reg <= trunc_ln64_reg_458_pp0_iter24_reg;
        trunc_ln64_reg_458_pp0_iter26_reg <= trunc_ln64_reg_458_pp0_iter25_reg;
        trunc_ln64_reg_458_pp0_iter27_reg <= trunc_ln64_reg_458_pp0_iter26_reg;
        trunc_ln64_reg_458_pp0_iter2_reg <= trunc_ln64_reg_458_pp0_iter1_reg;
        trunc_ln64_reg_458_pp0_iter3_reg <= trunc_ln64_reg_458_pp0_iter2_reg;
        trunc_ln64_reg_458_pp0_iter4_reg <= trunc_ln64_reg_458_pp0_iter3_reg;
        trunc_ln64_reg_458_pp0_iter5_reg <= trunc_ln64_reg_458_pp0_iter4_reg;
        trunc_ln64_reg_458_pp0_iter6_reg <= trunc_ln64_reg_458_pp0_iter5_reg;
        trunc_ln64_reg_458_pp0_iter7_reg <= trunc_ln64_reg_458_pp0_iter6_reg;
        trunc_ln64_reg_458_pp0_iter8_reg <= trunc_ln64_reg_458_pp0_iter7_reg;
        trunc_ln64_reg_458_pp0_iter9_reg <= trunc_ln64_reg_458_pp0_iter8_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter10_reg <= u_hat_arr_V_addr_reg_463_pp0_iter9_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter11_reg <= u_hat_arr_V_addr_reg_463_pp0_iter10_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter12_reg <= u_hat_arr_V_addr_reg_463_pp0_iter11_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter13_reg <= u_hat_arr_V_addr_reg_463_pp0_iter12_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter14_reg <= u_hat_arr_V_addr_reg_463_pp0_iter13_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter15_reg <= u_hat_arr_V_addr_reg_463_pp0_iter14_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter16_reg <= u_hat_arr_V_addr_reg_463_pp0_iter15_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter17_reg <= u_hat_arr_V_addr_reg_463_pp0_iter16_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter18_reg <= u_hat_arr_V_addr_reg_463_pp0_iter17_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter19_reg <= u_hat_arr_V_addr_reg_463_pp0_iter18_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter20_reg <= u_hat_arr_V_addr_reg_463_pp0_iter19_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter21_reg <= u_hat_arr_V_addr_reg_463_pp0_iter20_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter22_reg <= u_hat_arr_V_addr_reg_463_pp0_iter21_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter23_reg <= u_hat_arr_V_addr_reg_463_pp0_iter22_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter24_reg <= u_hat_arr_V_addr_reg_463_pp0_iter23_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter25_reg <= u_hat_arr_V_addr_reg_463_pp0_iter24_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter26_reg <= u_hat_arr_V_addr_reg_463_pp0_iter25_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter27_reg <= u_hat_arr_V_addr_reg_463_pp0_iter26_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter28_reg <= u_hat_arr_V_addr_reg_463_pp0_iter27_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter29_reg <= u_hat_arr_V_addr_reg_463_pp0_iter28_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter2_reg <= u_hat_arr_V_addr_reg_463_pp0_iter1_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter30_reg <= u_hat_arr_V_addr_reg_463_pp0_iter29_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter31_reg <= u_hat_arr_V_addr_reg_463_pp0_iter30_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter3_reg <= u_hat_arr_V_addr_reg_463_pp0_iter2_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter4_reg <= u_hat_arr_V_addr_reg_463_pp0_iter3_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter5_reg <= u_hat_arr_V_addr_reg_463_pp0_iter4_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter6_reg <= u_hat_arr_V_addr_reg_463_pp0_iter5_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter7_reg <= u_hat_arr_V_addr_reg_463_pp0_iter6_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter8_reg <= u_hat_arr_V_addr_reg_463_pp0_iter7_reg;
        u_hat_arr_V_addr_reg_463_pp0_iter9_reg <= u_hat_arr_V_addr_reg_463_pp0_iter8_reg;
        zext_ln813_reg_484[17 : 0] <= zext_ln813_fu_281_p1[17 : 0];
        zext_ln813_reg_484_pp0_iter29_reg[17 : 0] <= zext_ln813_reg_484[17 : 0];
        zext_ln813_reg_484_pp0_iter30_reg[17 : 0] <= zext_ln813_reg_484_pp0_iter29_reg[17 : 0];
        zext_ln813_reg_484_pp0_iter31_reg[17 : 0] <= zext_ln813_reg_484_pp0_iter30_reg[17 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        calc_temp_arr_V_reg_469 <= calc_temp_arr_V_fu_218_p2;
        icmp_ln59_reg_447_pp0_iter1_reg <= icmp_ln59_reg_447;
        p_arr_1_V_addr_reg_452_pp0_iter1_reg <= p_arr_1_V_addr_reg_452;
        trunc_ln64_reg_458_pp0_iter1_reg <= trunc_ln64_reg_458;
        u_hat_arr_V_addr_reg_463_pp0_iter1_reg <= u_hat_arr_V_addr_reg_463;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln58_fu_159_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln59_reg_447 <= icmp_ln59_fu_174_p2;
        p_arr_1_V_addr_reg_452 <= i_3_cast177_fu_188_p1;
        trunc_ln64_reg_458 <= trunc_ln64_fu_194_p1;
        u_hat_arr_V_addr_reg_463 <= i_3_cast177_fu_188_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        rhs_reg_494 <= u_hat_arr_V_q1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln58_fu_159_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter31_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 7'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_70;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 18'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        in_local_V_ce0 = 1'b1;
    end else begin
        in_local_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        out_local_V_ce0 = 1'b1;
    end else begin
        out_local_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        out_local_V_we0 = 1'b1;
    end else begin
        out_local_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        p_arr_1_V_ce0 = 1'b1;
    end else begin
        p_arr_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_arr_1_V_ce1 = 1'b1;
    end else begin
        p_arr_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        p_arr_1_V_we0 = 1'b1;
    end else begin
        p_arr_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        u_hat_arr_V_ce0 = 1'b1;
    end else begin
        u_hat_arr_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        u_hat_arr_V_ce1 = 1'b1;
    end else begin
        u_hat_arr_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        u_hat_arr_V_we0 = 1'b1;
    end else begin
        u_hat_arr_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln377_fu_371_p2 = (zext_ln377_fu_367_p1 + trunc_ln7_fu_350_p4);

assign add_ln58_1_fu_251_p2 = (t_fu_74 + 13'd1);

assign add_ln58_fu_165_p2 = (ap_sig_allocacmp_indvar_flatten_load + 18'd1);

assign add_ln59_fu_198_p2 = (select_ln58_fu_180_p3 + 7'd1);

assign add_ln64_fu_275_p2 = (shl_ln1_fu_268_p3 + zext_ln58_fu_264_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign calc_temp_arr_V_fu_218_p0 = p_arr_1_V_q1;

assign calc_temp_arr_V_fu_218_p2 = ($signed(calc_temp_arr_V_fu_218_p0) + $signed(19'd1));

assign grp_fu_242_p0 = {{calc_temp_arr_V_fu_218_p2}, {6'd0}};

assign i_3_cast177_fu_188_p1 = select_ln58_fu_180_p3;

assign icmp_ln58_fu_159_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 18'd262080) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_174_p2 = ((ap_sig_allocacmp_i_load == 7'd64) ? 1'b1 : 1'b0);

assign in_local_V_address0 = zext_ln813_fu_281_p1;

assign k_arr_V_fu_291_p1 = grp_fu_242_p2[18:0];

assign lhs_V_2_fu_334_p3 = {{rhs_reg_494_pp0_iter31_reg}, {6'd0}};

assign out_local_V_address0 = zext_ln813_reg_484_pp0_iter31_reg;

assign out_local_V_d0 = add_ln377_fu_371_p2;

assign p_arr_1_V_address0 = p_arr_1_V_addr_reg_452_pp0_iter31_reg;

assign p_arr_1_V_address1 = i_3_cast177_fu_188_p1;

assign p_arr_1_V_d0 = (zext_ln377_1_fu_395_p1 + trunc_ln818_1_fu_379_p4);

assign ret_V_1_fu_303_p2 = ($signed(sext_ln813_fu_295_p1) - $signed(sext_ln813_1_fu_299_p1));

assign ret_V_4_fu_344_p2 = (lhs_V_2_fu_334_p3 + trunc_ln1347_fu_341_p1);

assign ret_V_5_fu_321_p2 = ($signed(20'd64) - $signed(sext_ln813_2_fu_317_p1));

assign ret_V_fu_224_p2 = ($signed(sext_ln1347_fu_214_p1) + $signed(20'd65));

assign select_ln58_1_fu_257_p3 = ((icmp_ln59_reg_447_pp0_iter27_reg[0:0] == 1'b1) ? add_ln58_1_fu_251_p2 : t_fu_74);

assign select_ln58_fu_180_p3 = ((icmp_ln59_fu_174_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_i_load);

assign sext_ln1347_fu_214_p0 = p_arr_1_V_q1;

assign sext_ln1347_fu_214_p1 = sext_ln1347_fu_214_p0;

assign sext_ln813_1_fu_299_p0 = u_hat_arr_V_q1;

assign sext_ln813_1_fu_299_p1 = sext_ln813_1_fu_299_p0;

assign sext_ln813_2_fu_317_p1 = k_arr_V_fu_291_p1;

assign sext_ln813_fu_295_p1 = $signed(in_local_V_q0);

assign shl_ln1_fu_268_p3 = {{trunc_ln64_reg_458_pp0_iter27_reg}, {12'd0}};

assign tmp_40_fu_388_p3 = grp_fu_414_p2[32'd5];

assign tmp_fu_360_p3 = grp_fu_406_p2[32'd5];

assign trunc_ln1347_fu_341_p1 = grp_fu_406_p2[24:0];

assign trunc_ln64_fu_194_p1 = select_ln58_fu_180_p3[5:0];

assign trunc_ln7_fu_350_p4 = {{ret_V_4_fu_344_p2[24:6]}};

assign trunc_ln818_1_fu_379_p4 = {{grp_fu_414_p2[24:6]}};

assign u_hat_arr_V_address0 = u_hat_arr_V_addr_reg_463_pp0_iter31_reg;

assign u_hat_arr_V_address1 = u_hat_arr_V_addr_reg_463_pp0_iter27_reg;

assign u_hat_arr_V_d0 = add_ln377_fu_371_p2;

assign zext_ln377_1_fu_395_p1 = tmp_40_fu_388_p3;

assign zext_ln377_fu_367_p1 = tmp_fu_360_p3;

assign zext_ln58_fu_264_p1 = select_ln58_1_fu_257_p3;

assign zext_ln813_fu_281_p1 = add_ln64_fu_275_p2;

always @ (posedge ap_clk) begin
    zext_ln813_reg_484[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln813_reg_484_pp0_iter29_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln813_reg_484_pp0_iter30_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln813_reg_484_pp0_iter31_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
end

endmodule //kalman_filter_kalman_filter_Pipeline_VITIS_LOOP_58_4_VITIS_LOOP_59_5
