-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity jacobi_1d is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tsteps : IN STD_LOGIC_VECTOR (31 downto 0);
    n : IN STD_LOGIC_VECTOR (31 downto 0);
    A_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_we0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    A_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    A_ce1 : OUT STD_LOGIC;
    A_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    B_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    B_ce0 : OUT STD_LOGIC;
    B_we0 : OUT STD_LOGIC;
    B_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    B_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    B_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    B_ce1 : OUT STD_LOGIC;
    B_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of jacobi_1d is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "jacobi_1d_jacobi_1d,hls_ip_2022_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.330000,HLS_SYN_LAT=20401,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1760,HLS_SYN_LUT=1514,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_start : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_done : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_idle : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_ready : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_ce0 : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_ce1 : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_ce0 : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_we0 : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_ce : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_105_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_105_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_105_p_ce : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_start : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_done : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_idle : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_ready : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_ce0 : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_ce1 : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_ce0 : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_we0 : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_ce : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_105_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_105_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_105_p_ce : STD_LOGIC;
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln9_fu_74_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal t_fu_46 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_2_fu_80_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_101_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_101_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_101_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_101_ce : STD_LOGIC;
    signal grp_fu_105_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_105_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_105_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_105_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component jacobi_1d_jacobi_1d_Pipeline_VITIS_LOOP_11_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        A_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        A_ce1 : OUT STD_LOGIC;
        A_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        B_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_we0 : OUT STD_LOGIC;
        B_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_101_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_101_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_101_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_101_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_101_p_ce : OUT STD_LOGIC;
        grp_fu_105_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_105_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_105_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_105_p_ce : OUT STD_LOGIC );
    end component;


    component jacobi_1d_jacobi_1d_Pipeline_VITIS_LOOP_15_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        B_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        B_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        B_ce1 : OUT STD_LOGIC;
        B_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_we0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_101_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_101_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_101_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_101_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_101_p_ce : OUT STD_LOGIC;
        grp_fu_105_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_105_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_105_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_105_p_ce : OUT STD_LOGIC );
    end component;


    component jacobi_1d_dadd_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component jacobi_1d_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50 : component jacobi_1d_jacobi_1d_Pipeline_VITIS_LOOP_11_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_start,
        ap_done => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_done,
        ap_idle => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_idle,
        ap_ready => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_ready,
        A_address0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_address0,
        A_ce0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_ce0,
        A_q0 => A_q0,
        A_address1 => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_address1,
        A_ce1 => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_ce1,
        A_q1 => A_q1,
        B_address0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_address0,
        B_ce0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_ce0,
        B_we0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_we0,
        B_d0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_d0,
        grp_fu_101_p_din0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_din0,
        grp_fu_101_p_din1 => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_din1,
        grp_fu_101_p_opcode => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_opcode,
        grp_fu_101_p_dout0 => grp_fu_101_p2,
        grp_fu_101_p_ce => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_ce,
        grp_fu_105_p_din0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_105_p_din0,
        grp_fu_105_p_din1 => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_105_p_din1,
        grp_fu_105_p_dout0 => grp_fu_105_p2,
        grp_fu_105_p_ce => grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_105_p_ce);

    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58 : component jacobi_1d_jacobi_1d_Pipeline_VITIS_LOOP_15_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_start,
        ap_done => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_done,
        ap_idle => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_idle,
        ap_ready => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_ready,
        B_address0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_address0,
        B_ce0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_ce0,
        B_q0 => B_q0,
        B_address1 => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_address1,
        B_ce1 => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_ce1,
        B_q1 => B_q1,
        A_address0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_address0,
        A_ce0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_ce0,
        A_we0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_we0,
        A_d0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_d0,
        grp_fu_101_p_din0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_din0,
        grp_fu_101_p_din1 => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_din1,
        grp_fu_101_p_opcode => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_opcode,
        grp_fu_101_p_dout0 => grp_fu_101_p2,
        grp_fu_101_p_ce => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_ce,
        grp_fu_105_p_din0 => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_105_p_din0,
        grp_fu_105_p_din1 => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_105_p_din1,
        grp_fu_105_p_dout0 => grp_fu_105_p2,
        grp_fu_105_p_ce => grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_105_p_ce);

    dadd_64ns_64ns_64_5_full_dsp_1_U9 : component jacobi_1d_dadd_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_101_p0,
        din1 => grp_fu_101_p1,
        ce => grp_fu_101_ce,
        dout => grp_fu_101_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U10 : component jacobi_1d_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_105_p0,
        din1 => grp_fu_105_p1,
        ce => grp_fu_105_ce,
        dout => grp_fu_105_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_74_p2 = ap_const_lv1_0))) then 
                    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_ready = ap_const_logic_1)) then 
                    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_ready = ap_const_logic_1)) then 
                    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_fu_46_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                t_fu_46 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_74_p2 = ap_const_lv1_0))) then 
                t_fu_46 <= t_2_fu_80_p2;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_done, grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_done, ap_CS_fsm_state2, icmp_ln9_fu_74_p2, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_74_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_address0, grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_address0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_address0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_address0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_address0;
        else 
            A_address0 <= "XXXXXXX";
        end if; 
    end process;

    A_address1 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_address1;

    A_ce0_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_ce0, grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_ce0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_ce0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_ce1_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_ce1, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_ce1 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_A_ce1;
        else 
            A_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    A_d0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_d0;

    A_we0_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_we0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_A_we0;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_address0_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_address0, grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_address0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_address0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            B_address0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_address0;
        else 
            B_address0 <= "XXXXXXX";
        end if; 
    end process;

    B_address1 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_address1;

    B_ce0_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_ce0, grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_ce0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            B_ce0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_ce0;
        else 
            B_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_ce1_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_ce1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            B_ce1 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_B_ce1;
        else 
            B_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    B_d0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_d0;

    B_we0_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            B_we0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_B_we0;
        else 
            B_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_done)
    begin
        if ((grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_done)
    begin
        if ((grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln9_fu_74_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_74_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln9_fu_74_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_74_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_101_ce_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_ce, grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_ce, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_101_ce <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_101_ce <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_ce;
        else 
            grp_fu_101_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_101_p0_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_din0, grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_din0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_101_p0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_101_p0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_din0;
        else 
            grp_fu_101_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_101_p1_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_din1, grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_din1, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_101_p1 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_101_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_101_p1 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_101_p_din1;
        else 
            grp_fu_101_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_105_ce_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_105_p_ce, grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_105_p_ce, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_105_ce <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_105_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_105_ce <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_105_p_ce;
        else 
            grp_fu_105_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_105_p0_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_105_p_din0, grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_105_p_din0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_105_p0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_105_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_105_p0 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_105_p_din0;
        else 
            grp_fu_105_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_105_p1_assign_proc : process(grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_105_p_din1, grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_105_p_din1, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_105_p1 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_grp_fu_105_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_105_p1 <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_grp_fu_105_p_din1;
        else 
            grp_fu_105_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_start <= grp_jacobi_1d_Pipeline_VITIS_LOOP_11_2_fu_50_ap_start_reg;
    grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_start <= grp_jacobi_1d_Pipeline_VITIS_LOOP_15_3_fu_58_ap_start_reg;
    icmp_ln9_fu_74_p2 <= "1" when (t_fu_46 = ap_const_lv6_28) else "0";
    t_2_fu_80_p2 <= std_logic_vector(unsigned(t_fu_46) + unsigned(ap_const_lv6_1));
end behav;
