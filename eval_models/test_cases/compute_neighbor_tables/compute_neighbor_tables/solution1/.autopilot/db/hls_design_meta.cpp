#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("edge_list_address0", 11, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("edge_list_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("edge_list_q0", 32, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("edge_list_address1", 11, hls_out, 0, "ap_memory", "MemPortADDR2", 1),
	Port_Property("edge_list_ce1", 1, hls_out, 0, "ap_memory", "MemPortCE2", 1),
	Port_Property("edge_list_q1", 32, hls_in, 0, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("in_degree_table_address0", 7, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("in_degree_table_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("in_degree_table_q0", 32, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("out_degree_table_address0", 7, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("out_degree_table_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("out_degree_table_we0", 1, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("out_degree_table_d0", 32, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("out_degree_table_q0", 32, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("out_degree_table_address1", 7, hls_out, 2, "ap_memory", "MemPortADDR2", 1),
	Port_Property("out_degree_table_ce1", 1, hls_out, 2, "ap_memory", "MemPortCE2", 1),
	Port_Property("out_degree_table_we1", 1, hls_out, 2, "ap_memory", "MemPortWE2", 1),
	Port_Property("out_degree_table_d1", 32, hls_out, 2, "ap_memory", "MemPortDIN2", 1),
	Port_Property("out_degree_table_q1", 32, hls_in, 2, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("neighbor_table_offsets_address0", 7, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("neighbor_table_offsets_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("neighbor_table_offsets_we0", 1, hls_out, 3, "ap_memory", "mem_we", 1),
	Port_Property("neighbor_table_offsets_d0", 32, hls_out, 3, "ap_memory", "mem_din", 1),
	Port_Property("neighbor_table_address0", 10, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("neighbor_table_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("neighbor_table_we0", 1, hls_out, 4, "ap_memory", "mem_we", 1),
	Port_Property("neighbor_table_d0", 32, hls_out, 4, "ap_memory", "mem_din", 1),
	Port_Property("num_nodes", 32, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("num_edges", 32, hls_in, 6, "ap_none", "in_data", 1),
};
const char* HLS_Design_Meta::dut_name = "compute_neighbor_tables";
