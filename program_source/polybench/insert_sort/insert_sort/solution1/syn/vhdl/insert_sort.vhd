-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity insert_sort is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_we0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of insert_sort is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "insert_sort_insert_sort,hls_ip_2022_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.124000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=328,HLS_SYN_LUT=390,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_2800 : STD_LOGIC_VECTOR (13 downto 0) := "10100000000000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_149 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln4_fu_88_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal A_load_reg_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln5_fu_110_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln5_reg_168 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln7_fu_118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_reg_173 : STD_LOGIC_VECTOR (0 downto 0);
    signal item_fu_124_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal item_reg_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_start : STD_LOGIC;
    signal grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_done : STD_LOGIC;
    signal grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_idle : STD_LOGIC;
    signal grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_ready : STD_LOGIC;
    signal grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_ce0 : STD_LOGIC;
    signal grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_we0 : STD_LOGIC;
    signal grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_j_1_out : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_j_1_out_ap_vld : STD_LOGIC;
    signal grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal j_1_loc_fu_44 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln4_fu_94_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln11_fu_131_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal j_fu_40 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln4_fu_99_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln7_fu_114_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component insert_sort_insert_sort_Pipeline_VITIS_LOOP_7_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln4_1 : IN STD_LOGIC_VECTOR (13 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_we0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_load : IN STD_LOGIC_VECTOR (30 downto 0);
        icmp_ln7_4 : IN STD_LOGIC_VECTOR (0 downto 0);
        item : IN STD_LOGIC_VECTOR (31 downto 0);
        j_1_out : OUT STD_LOGIC_VECTOR (13 downto 0);
        j_1_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69 : component insert_sort_insert_sort_Pipeline_VITIS_LOOP_7_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_start,
        ap_done => grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_done,
        ap_idle => grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_idle,
        ap_ready => grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_ready,
        zext_ln4_1 => i_reg_149,
        A_address0 => grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_address0,
        A_ce0 => grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_ce0,
        A_we0 => grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_we0,
        A_d0 => grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_d0,
        A_q0 => A_q0,
        A_load => trunc_ln5_reg_168,
        icmp_ln7_4 => icmp_ln7_reg_173,
        item => item_reg_178,
        j_1_out => grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_j_1_out,
        j_1_out_ap_vld => grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_j_1_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_ready = ap_const_logic_1)) then 
                    grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    j_fu_40_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                j_fu_40 <= ap_const_lv14_1;
            elsif (((icmp_ln4_fu_88_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_fu_40 <= add_ln4_fu_99_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                A_load_reg_162 <= A_q0;
                icmp_ln7_reg_173 <= icmp_ln7_fu_118_p2;
                trunc_ln5_reg_168 <= trunc_ln5_fu_110_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_149 <= j_fu_40;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                item_reg_178 <= item_fu_124_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_j_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                j_1_loc_fu_44 <= grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_j_1_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln4_fu_88_p2, grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_done, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln4_fu_88_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(ap_CS_fsm_state2, grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_address0, ap_CS_fsm_state5, zext_ln4_fu_94_p1, zext_ln11_fu_131_p1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_address0 <= zext_ln11_fu_131_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            A_address0 <= zext_ln4_fu_94_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_address0 <= grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_address0;
        else 
            A_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    A_ce0_assign_proc : process(ap_CS_fsm_state2, grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_ce0, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            A_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_ce0 <= grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_d0_assign_proc : process(A_load_reg_162, grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_d0, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_d0 <= A_load_reg_162;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_d0 <= grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_d0;
        else 
            A_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    A_we0_assign_proc : process(grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_we0, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            A_we0 <= grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_A_we0;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln4_fu_99_p2 <= std_logic_vector(unsigned(j_fu_40) + unsigned(ap_const_lv14_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_done)
    begin
        if ((grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln4_fu_88_p2)
    begin
        if (((icmp_ln4_fu_88_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln4_fu_88_p2)
    begin
        if (((icmp_ln4_fu_88_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_start <= grp_insert_sort_Pipeline_VITIS_LOOP_7_2_fu_69_ap_start_reg;
    icmp_ln4_fu_88_p2 <= "1" when (j_fu_40 = ap_const_lv14_2800) else "0";
    icmp_ln7_fu_118_p2 <= "1" when (trunc_ln7_fu_114_p1 = ap_const_lv23_0) else "0";
    item_fu_124_p1 <= A_load_reg_162;
    trunc_ln5_fu_110_p1 <= A_q0(31 - 1 downto 0);
    trunc_ln7_fu_114_p1 <= A_q0(23 - 1 downto 0);
    zext_ln11_fu_131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_loc_fu_44),64));
    zext_ln4_fu_94_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_fu_40),64));
end behav;
