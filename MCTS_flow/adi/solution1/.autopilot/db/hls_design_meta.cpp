#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("tsteps", 32, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("n", 32, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("u_address0", 12, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("u_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("u_we0", 1, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("u_d0", 64, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("u_q0", 64, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("u_address1", 12, hls_out, 2, "ap_memory", "MemPortADDR2", 1),
	Port_Property("u_ce1", 1, hls_out, 2, "ap_memory", "MemPortCE2", 1),
	Port_Property("u_we1", 1, hls_out, 2, "ap_memory", "MemPortWE2", 1),
	Port_Property("u_d1", 64, hls_out, 2, "ap_memory", "MemPortDIN2", 1),
	Port_Property("u_q1", 64, hls_in, 2, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("v_address0", 12, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("v_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("v_we0", 1, hls_out, 3, "ap_memory", "mem_we", 1),
	Port_Property("v_d0", 64, hls_out, 3, "ap_memory", "mem_din", 1),
	Port_Property("v_q0", 64, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("v_address1", 12, hls_out, 3, "ap_memory", "MemPortADDR2", 1),
	Port_Property("v_ce1", 1, hls_out, 3, "ap_memory", "MemPortCE2", 1),
	Port_Property("v_we1", 1, hls_out, 3, "ap_memory", "MemPortWE2", 1),
	Port_Property("v_d1", 64, hls_out, 3, "ap_memory", "MemPortDIN2", 1),
	Port_Property("v_q1", 64, hls_in, 3, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("p_address0", 12, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("p_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("p_we0", 1, hls_out, 4, "ap_memory", "mem_we", 1),
	Port_Property("p_d0", 64, hls_out, 4, "ap_memory", "mem_din", 1),
	Port_Property("p_q0", 64, hls_in, 4, "ap_memory", "mem_dout", 1),
	Port_Property("p_address1", 12, hls_out, 4, "ap_memory", "MemPortADDR2", 1),
	Port_Property("p_ce1", 1, hls_out, 4, "ap_memory", "MemPortCE2", 1),
	Port_Property("p_we1", 1, hls_out, 4, "ap_memory", "MemPortWE2", 1),
	Port_Property("p_d1", 64, hls_out, 4, "ap_memory", "MemPortDIN2", 1),
	Port_Property("p_q1", 64, hls_in, 4, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("q_address0", 12, hls_out, 5, "ap_memory", "mem_address", 1),
	Port_Property("q_ce0", 1, hls_out, 5, "ap_memory", "mem_ce", 1),
	Port_Property("q_we0", 1, hls_out, 5, "ap_memory", "mem_we", 1),
	Port_Property("q_d0", 64, hls_out, 5, "ap_memory", "mem_din", 1),
	Port_Property("q_q0", 64, hls_in, 5, "ap_memory", "mem_dout", 1),
	Port_Property("q_address1", 12, hls_out, 5, "ap_memory", "MemPortADDR2", 1),
	Port_Property("q_ce1", 1, hls_out, 5, "ap_memory", "MemPortCE2", 1),
	Port_Property("q_we1", 1, hls_out, 5, "ap_memory", "MemPortWE2", 1),
	Port_Property("q_d1", 64, hls_out, 5, "ap_memory", "MemPortDIN2", 1),
	Port_Property("q_q1", 64, hls_in, 5, "ap_memory", "MemPortDOUT2", 1),
};
const char* HLS_Design_Meta::dut_name = "adi";
