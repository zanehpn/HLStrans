// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dft_dft_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_22_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sample_real_address0,
        sample_real_ce0,
        sample_real_q0,
        sample_imag_address0,
        sample_imag_ce0,
        sample_imag_q0,
        temp_real_address0,
        temp_real_ce0,
        temp_real_we0,
        temp_real_d0,
        temp_imag_address0,
        temp_imag_ce0,
        temp_imag_we0,
        temp_imag_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] sample_real_address0;
output   sample_real_ce0;
input  [63:0] sample_real_q0;
output  [7:0] sample_imag_address0;
output   sample_imag_ce0;
input  [63:0] sample_imag_q0;
output  [7:0] temp_real_address0;
output   temp_real_ce0;
output   temp_real_we0;
output  [63:0] temp_real_d0;
output  [7:0] temp_imag_address0;
output   temp_imag_ce0;
output   temp_imag_we0;
output  [63:0] temp_imag_d0;

reg ap_idle;
reg sample_real_ce0;
reg sample_imag_ce0;
reg temp_real_ce0;
reg temp_real_we0;
reg temp_imag_ce0;
reg temp_imag_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_state20_pp0_stage4_iter3;
wire    ap_block_state25_pp0_stage4_iter4;
wire    ap_block_state30_pp0_stage4_iter5;
wire    ap_block_state35_pp0_stage4_iter6;
wire    ap_block_state40_pp0_stage4_iter7;
wire    ap_block_state45_pp0_stage4_iter8;
wire    ap_block_state50_pp0_stage4_iter9;
wire    ap_block_pp0_stage4_subdone;
reg   [0:0] icmp_ln16_reg_384;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] grp_fu_162_p2;
reg   [63:0] reg_178;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_state19_pp0_stage3_iter3;
wire    ap_block_state24_pp0_stage3_iter4;
wire    ap_block_state29_pp0_stage3_iter5;
wire    ap_block_state34_pp0_stage3_iter6;
wire    ap_block_state39_pp0_stage3_iter7;
wire    ap_block_state44_pp0_stage3_iter8;
wire    ap_block_state49_pp0_stage3_iter9;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_pp0_stage4_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
wire    ap_block_state26_pp0_stage0_iter5;
wire    ap_block_state31_pp0_stage0_iter6;
wire    ap_block_state36_pp0_stage0_iter7;
wire    ap_block_state41_pp0_stage0_iter8;
wire    ap_block_state46_pp0_stage0_iter9;
wire    ap_block_state51_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln16_fu_212_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_state22_pp0_stage1_iter4;
wire    ap_block_state27_pp0_stage1_iter5;
wire    ap_block_state32_pp0_stage1_iter6;
wire    ap_block_state37_pp0_stage1_iter7;
wire    ap_block_state42_pp0_stage1_iter8;
wire    ap_block_state47_pp0_stage1_iter9;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln16_reg_384_pp0_iter1_reg;
reg   [0:0] icmp_ln16_reg_384_pp0_iter2_reg;
reg   [0:0] icmp_ln16_reg_384_pp0_iter3_reg;
reg   [0:0] icmp_ln16_reg_384_pp0_iter4_reg;
reg   [0:0] icmp_ln16_reg_384_pp0_iter5_reg;
reg   [0:0] icmp_ln16_reg_384_pp0_iter6_reg;
reg   [0:0] icmp_ln16_reg_384_pp0_iter7_reg;
reg   [0:0] icmp_ln16_reg_384_pp0_iter8_reg;
reg   [8:0] j_load_reg_388;
wire   [0:0] icmp_ln22_fu_230_p2;
reg   [0:0] icmp_ln22_reg_393;
reg   [0:0] icmp_ln22_reg_393_pp0_iter1_reg;
reg   [0:0] icmp_ln22_reg_393_pp0_iter2_reg;
reg   [0:0] icmp_ln22_reg_393_pp0_iter3_reg;
reg   [0:0] icmp_ln22_reg_393_pp0_iter4_reg;
reg   [0:0] icmp_ln22_reg_393_pp0_iter5_reg;
reg   [0:0] icmp_ln22_reg_393_pp0_iter6_reg;
reg   [0:0] icmp_ln22_reg_393_pp0_iter7_reg;
reg   [0:0] icmp_ln22_reg_393_pp0_iter8_reg;
wire   [8:0] select_ln16_3_fu_242_p3;
reg   [8:0] select_ln16_3_reg_400;
reg   [8:0] select_ln16_3_reg_400_pp0_iter1_reg;
reg   [8:0] select_ln16_3_reg_400_pp0_iter2_reg;
reg   [8:0] select_ln16_3_reg_400_pp0_iter3_reg;
reg   [8:0] select_ln16_3_reg_400_pp0_iter4_reg;
reg   [8:0] select_ln16_3_reg_400_pp0_iter5_reg;
reg   [8:0] select_ln16_3_reg_400_pp0_iter6_reg;
reg   [8:0] select_ln16_3_reg_400_pp0_iter7_reg;
reg   [8:0] select_ln16_3_reg_400_pp0_iter8_reg;
reg   [8:0] select_ln16_3_reg_400_pp0_iter9_reg;
wire   [31:0] zext_ln16_1_fu_254_p1;
wire   [8:0] select_ln16_fu_269_p3;
reg   [8:0] select_ln16_reg_410;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_state18_pp0_stage2_iter3;
wire    ap_block_state23_pp0_stage2_iter4;
wire    ap_block_state28_pp0_stage2_iter5;
wire    ap_block_state33_pp0_stage2_iter6;
wire    ap_block_state38_pp0_stage2_iter7;
wire    ap_block_state43_pp0_stage2_iter8;
wire    ap_block_state48_pp0_stage2_iter9;
wire    ap_block_pp0_stage2_11001;
reg   [8:0] select_ln16_reg_410_pp0_iter1_reg;
reg   [8:0] select_ln16_reg_410_pp0_iter2_reg;
reg   [8:0] select_ln16_reg_410_pp0_iter3_reg;
reg   [8:0] select_ln16_reg_410_pp0_iter4_reg;
wire   [31:0] zext_ln23_fu_279_p1;
wire   [63:0] grp_fu_175_p1;
reg   [63:0] w_mid2_v_reg_421;
reg   [63:0] conv7_reg_426;
wire   [0:0] ifzero_fu_289_p2;
reg   [0:0] ifzero_reg_431;
reg   [0:0] ifzero_reg_431_pp0_iter2_reg;
reg   [0:0] ifzero_reg_431_pp0_iter3_reg;
reg   [0:0] ifzero_reg_431_pp0_iter4_reg;
reg   [0:0] ifzero_reg_431_pp0_iter5_reg;
reg   [0:0] ifzero_reg_431_pp0_iter6_reg;
reg   [0:0] ifzero_reg_431_pp0_iter7_reg;
reg   [0:0] ifzero_reg_431_pp0_iter8_reg;
reg   [0:0] ifzero_reg_431_pp0_iter9_reg;
wire   [63:0] grp_fu_166_p2;
reg   [63:0] w_mid2_reg_435;
wire   [63:0] grp_fu_171_p2;
reg   [63:0] x_assign_reg_440;
reg   [63:0] sample_real_load_reg_455;
reg   [63:0] sample_imag_load_reg_460;
wire   [63:0] grp_sin_or_cos_double_s_fu_142_ap_return;
reg   [63:0] c_reg_465;
reg   [63:0] s_reg_471;
wire   [63:0] bitcast_ln26_fu_305_p1;
reg   [63:0] bitcast_ln26_reg_477;
wire   [63:0] bitcast_ln26_1_fu_309_p1;
reg   [63:0] bitcast_ln26_1_reg_483;
reg   [63:0] mul_reg_489;
reg   [63:0] mul3_reg_494;
reg   [63:0] mul1_reg_499;
reg   [63:0] mul2_reg_504;
reg   [63:0] sub_reg_509;
reg   [63:0] sub1_reg_514;
wire   [63:0] select_ln16_1_fu_316_p3;
wire   [63:0] select_ln16_2_fu_327_p3;
wire   [63:0] zext_ln16_fu_340_p1;
reg   [63:0] zext_ln16_reg_529;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    grp_sin_or_cos_double_s_fu_142_ap_start;
wire    grp_sin_or_cos_double_s_fu_142_ap_done;
wire    grp_sin_or_cos_double_s_fu_142_ap_idle;
wire    grp_sin_or_cos_double_s_fu_142_ap_ready;
reg   [0:0] grp_sin_or_cos_double_s_fu_142_do_cos;
reg    grp_sin_or_cos_double_s_fu_142_ap_start_reg;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire   [63:0] j_cast_fu_300_p1;
reg   [63:0] add2824_fu_70;
wire    ap_loop_init;
reg   [63:0] add15_fu_74;
reg   [8:0] j_fu_78;
wire   [8:0] add_ln22_fu_284_p2;
reg   [8:0] i_fu_82;
reg   [16:0] indvar_flatten_fu_86;
wire   [16:0] add_ln16_fu_218_p2;
reg   [63:0] grp_fu_162_p0;
reg   [63:0] grp_fu_162_p1;
reg   [63:0] grp_fu_166_p0;
reg   [63:0] grp_fu_166_p1;
reg   [63:0] grp_fu_171_p0;
reg   [63:0] grp_fu_171_p1;
reg   [31:0] grp_fu_175_p0;
wire   [8:0] add_ln16_1_fu_236_p2;
wire   [7:0] trunc_ln16_fu_250_p1;
wire   [7:0] trunc_ln23_fu_275_p1;
reg   [1:0] grp_fu_162_opcode;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter9_stage0;
reg    ap_idle_pp0_0to8;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_1to10;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_142_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

dft_sin_or_cos_double_s grp_sin_or_cos_double_s_fu_142(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_142_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_142_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_142_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_142_ap_ready),
    .ap_ce(1'b1),
    .t_in(x_assign_reg_440),
    .do_cos(grp_sin_or_cos_double_s_fu_142_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_142_ap_return)
);

dft_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_162_p0),
    .din1(grp_fu_162_p1),
    .opcode(grp_fu_162_opcode),
    .ce(1'b1),
    .dout(grp_fu_162_p2)
);

dft_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_166_p0),
    .din1(grp_fu_166_p1),
    .ce(1'b1),
    .dout(grp_fu_166_p2)
);

dft_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_171_p0),
    .din1(grp_fu_171_p1),
    .ce(1'b1),
    .dout(grp_fu_171_p2)
);

dft_sitodp_32ns_64_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_4_no_dsp_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_175_p0),
    .ce(1'b1),
    .dout(grp_fu_175_p1)
);

dft_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_142_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            grp_sin_or_cos_double_s_fu_142_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_142_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_142_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add15_fu_74 <= 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add15_fu_74 <= grp_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add2824_fu_70 <= 64'd0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add2824_fu_70 <= grp_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_82 <= 9'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_fu_212_p2 == 1'd0))) begin
        i_fu_82 <= select_ln16_3_fu_242_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_86 <= 17'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_fu_212_p2 == 1'd0))) begin
        indvar_flatten_fu_86 <= add_ln16_fu_218_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_78 <= 9'd0;
        end else if (((icmp_ln16_reg_384 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_78 <= add_ln22_fu_284_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bitcast_ln26_1_reg_483 <= bitcast_ln26_1_fu_309_p1;
        bitcast_ln26_reg_477 <= bitcast_ln26_fu_305_p1;
        icmp_ln16_reg_384 <= icmp_ln16_fu_212_p2;
        icmp_ln16_reg_384_pp0_iter1_reg <= icmp_ln16_reg_384;
        icmp_ln16_reg_384_pp0_iter2_reg <= icmp_ln16_reg_384_pp0_iter1_reg;
        icmp_ln16_reg_384_pp0_iter3_reg <= icmp_ln16_reg_384_pp0_iter2_reg;
        icmp_ln16_reg_384_pp0_iter4_reg <= icmp_ln16_reg_384_pp0_iter3_reg;
        icmp_ln16_reg_384_pp0_iter5_reg <= icmp_ln16_reg_384_pp0_iter4_reg;
        icmp_ln16_reg_384_pp0_iter6_reg <= icmp_ln16_reg_384_pp0_iter5_reg;
        icmp_ln16_reg_384_pp0_iter7_reg <= icmp_ln16_reg_384_pp0_iter6_reg;
        icmp_ln16_reg_384_pp0_iter8_reg <= icmp_ln16_reg_384_pp0_iter7_reg;
        icmp_ln22_reg_393_pp0_iter1_reg <= icmp_ln22_reg_393;
        icmp_ln22_reg_393_pp0_iter2_reg <= icmp_ln22_reg_393_pp0_iter1_reg;
        icmp_ln22_reg_393_pp0_iter3_reg <= icmp_ln22_reg_393_pp0_iter2_reg;
        icmp_ln22_reg_393_pp0_iter4_reg <= icmp_ln22_reg_393_pp0_iter3_reg;
        icmp_ln22_reg_393_pp0_iter5_reg <= icmp_ln22_reg_393_pp0_iter4_reg;
        icmp_ln22_reg_393_pp0_iter6_reg <= icmp_ln22_reg_393_pp0_iter5_reg;
        icmp_ln22_reg_393_pp0_iter7_reg <= icmp_ln22_reg_393_pp0_iter6_reg;
        icmp_ln22_reg_393_pp0_iter8_reg <= icmp_ln22_reg_393_pp0_iter7_reg;
        select_ln16_3_reg_400_pp0_iter1_reg <= select_ln16_3_reg_400;
        select_ln16_3_reg_400_pp0_iter2_reg <= select_ln16_3_reg_400_pp0_iter1_reg;
        select_ln16_3_reg_400_pp0_iter3_reg <= select_ln16_3_reg_400_pp0_iter2_reg;
        select_ln16_3_reg_400_pp0_iter4_reg <= select_ln16_3_reg_400_pp0_iter3_reg;
        select_ln16_3_reg_400_pp0_iter5_reg <= select_ln16_3_reg_400_pp0_iter4_reg;
        select_ln16_3_reg_400_pp0_iter6_reg <= select_ln16_3_reg_400_pp0_iter5_reg;
        select_ln16_3_reg_400_pp0_iter7_reg <= select_ln16_3_reg_400_pp0_iter6_reg;
        select_ln16_3_reg_400_pp0_iter8_reg <= select_ln16_3_reg_400_pp0_iter7_reg;
        select_ln16_3_reg_400_pp0_iter9_reg <= select_ln16_3_reg_400_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_reg_465 <= grp_sin_or_cos_double_s_fu_142_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv7_reg_426 <= grp_fu_175_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_fu_212_p2 == 1'd0))) begin
        icmp_ln22_reg_393 <= icmp_ln22_fu_230_p2;
        j_load_reg_388 <= j_fu_78;
        select_ln16_3_reg_400 <= select_ln16_3_fu_242_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifzero_reg_431 <= ifzero_fu_289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ifzero_reg_431_pp0_iter2_reg <= ifzero_reg_431;
        ifzero_reg_431_pp0_iter3_reg <= ifzero_reg_431_pp0_iter2_reg;
        ifzero_reg_431_pp0_iter4_reg <= ifzero_reg_431_pp0_iter3_reg;
        ifzero_reg_431_pp0_iter5_reg <= ifzero_reg_431_pp0_iter4_reg;
        ifzero_reg_431_pp0_iter6_reg <= ifzero_reg_431_pp0_iter5_reg;
        ifzero_reg_431_pp0_iter7_reg <= ifzero_reg_431_pp0_iter6_reg;
        ifzero_reg_431_pp0_iter8_reg <= ifzero_reg_431_pp0_iter7_reg;
        ifzero_reg_431_pp0_iter9_reg <= ifzero_reg_431_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul1_reg_499 <= grp_fu_166_p2;
        mul2_reg_504 <= grp_fu_171_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul3_reg_494 <= grp_fu_171_p2;
        mul_reg_489 <= grp_fu_166_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_178 <= grp_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_reg_471 <= grp_sin_or_cos_double_s_fu_142_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        sample_imag_load_reg_460 <= sample_imag_q0;
        sample_real_load_reg_455 <= sample_real_q0;
        select_ln16_reg_410_pp0_iter1_reg <= select_ln16_reg_410;
        select_ln16_reg_410_pp0_iter2_reg <= select_ln16_reg_410_pp0_iter1_reg;
        select_ln16_reg_410_pp0_iter3_reg <= select_ln16_reg_410_pp0_iter2_reg;
        select_ln16_reg_410_pp0_iter4_reg <= select_ln16_reg_410_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln16_reg_410 <= select_ln16_fu_269_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        sub1_reg_514 <= grp_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sub_reg_509 <= grp_fu_162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        w_mid2_reg_435 <= grp_fu_166_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_reg_384 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        w_mid2_v_reg_421 <= grp_fu_175_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        x_assign_reg_440 <= grp_fu_171_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        zext_ln16_reg_529[8 : 0] <= zext_ln16_fu_340_p1[8 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_384 == 1'd1) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln16_reg_384_pp0_iter8_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter9_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter9_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_162_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_162_opcode = 2'd0;
    end else begin
        grp_fu_162_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_162_p0 = select_ln16_2_fu_327_p3;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_162_p0 = select_ln16_1_fu_316_p3;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_162_p0 = mul2_reg_504;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_162_p0 = mul_reg_489;
    end else begin
        grp_fu_162_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_162_p1 = sub1_reg_514;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_162_p1 = sub_reg_509;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_162_p1 = mul3_reg_494;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_162_p1 = mul1_reg_499;
    end else begin
        grp_fu_162_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_166_p0 = bitcast_ln26_1_reg_483;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_166_p0 = bitcast_ln26_fu_305_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_166_p0 = w_mid2_v_reg_421;
    end else begin
        grp_fu_166_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_166_p1 = s_reg_471;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_166_p1 = c_reg_465;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_166_p1 = 64'd4582731459160450590;
    end else begin
        grp_fu_166_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_171_p0 = bitcast_ln26_reg_477;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_171_p0 = bitcast_ln26_1_fu_309_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_171_p0 = conv7_reg_426;
    end else begin
        grp_fu_171_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_171_p1 = s_reg_471;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_171_p1 = c_reg_465;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_171_p1 = w_mid2_reg_435;
    end else begin
        grp_fu_171_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_175_p0 = zext_ln23_fu_279_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_175_p0 = zext_ln16_1_fu_254_p1;
        end else begin
            grp_fu_175_p0 = 'bx;
        end
    end else begin
        grp_fu_175_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_sin_or_cos_double_s_fu_142_do_cos = 1'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_sin_or_cos_double_s_fu_142_do_cos = 1'd1;
        end else begin
            grp_sin_or_cos_double_s_fu_142_do_cos = 'bx;
        end
    end else begin
        grp_sin_or_cos_double_s_fu_142_do_cos = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sample_imag_ce0 = 1'b1;
    end else begin
        sample_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sample_real_ce0 = 1'b1;
    end else begin
        sample_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_imag_ce0 = 1'b1;
    end else begin
        temp_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (ifzero_reg_431_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_imag_we0 = 1'b1;
    end else begin
        temp_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        temp_real_ce0 = 1'b1;
    end else begin
        temp_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (ifzero_reg_431_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        temp_real_we0 = 1'b1;
    end else begin
        temp_real_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln16_1_fu_236_p2 = (i_fu_82 + 9'd1);

assign add_ln16_fu_218_p2 = (indvar_flatten_fu_86 + 17'd1);

assign add_ln22_fu_284_p2 = (select_ln16_reg_410 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign bitcast_ln26_1_fu_309_p1 = sample_imag_load_reg_460;

assign bitcast_ln26_fu_305_p1 = sample_real_load_reg_455;

assign grp_sin_or_cos_double_s_fu_142_ap_start = grp_sin_or_cos_double_s_fu_142_ap_start_reg;

assign icmp_ln16_fu_212_p2 = ((indvar_flatten_fu_86 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_230_p2 = ((j_fu_78 == 9'd256) ? 1'b1 : 1'b0);

assign ifzero_fu_289_p2 = ((add_ln22_fu_284_p2 == 9'd256) ? 1'b1 : 1'b0);

assign j_cast_fu_300_p1 = select_ln16_reg_410_pp0_iter4_reg;

assign sample_imag_address0 = j_cast_fu_300_p1;

assign sample_real_address0 = j_cast_fu_300_p1;

assign select_ln16_1_fu_316_p3 = ((icmp_ln22_reg_393_pp0_iter8_reg[0:0] == 1'b1) ? 64'd0 : add15_fu_74);

assign select_ln16_2_fu_327_p3 = ((icmp_ln22_reg_393_pp0_iter8_reg[0:0] == 1'b1) ? 64'd0 : add2824_fu_70);

assign select_ln16_3_fu_242_p3 = ((icmp_ln22_fu_230_p2[0:0] == 1'b1) ? add_ln16_1_fu_236_p2 : i_fu_82);

assign select_ln16_fu_269_p3 = ((icmp_ln22_reg_393[0:0] == 1'b1) ? 9'd0 : j_load_reg_388);

assign temp_imag_address0 = zext_ln16_reg_529;

assign temp_imag_d0 = reg_178;

assign temp_real_address0 = zext_ln16_fu_340_p1;

assign temp_real_d0 = reg_178;

assign trunc_ln16_fu_250_p1 = select_ln16_3_fu_242_p3[7:0];

assign trunc_ln23_fu_275_p1 = select_ln16_fu_269_p3[7:0];

assign zext_ln16_1_fu_254_p1 = trunc_ln16_fu_250_p1;

assign zext_ln16_fu_340_p1 = select_ln16_3_reg_400_pp0_iter9_reg;

assign zext_ln23_fu_279_p1 = trunc_ln23_fu_275_p1;

always @ (posedge ap_clk) begin
    zext_ln16_reg_529[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //dft_dft_Pipeline_VITIS_LOOP_16_1_VITIS_LOOP_22_2
