-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ludcmp is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_we0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    A_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    A_ce1 : OUT STD_LOGIC;
    A_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    b_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    b_ce0 : OUT STD_LOGIC;
    b_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    x_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    x_ce0 : OUT STD_LOGIC;
    x_we0 : OUT STD_LOGIC;
    x_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    x_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    y_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    y_ce0 : OUT STD_LOGIC;
    y_we0 : OUT STD_LOGIC;
    y_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    y_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of ludcmp is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "ludcmp_ludcmp,hls_ip_2022_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.330000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2649,HLS_SYN_LUT=2496,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (67 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (67 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (67 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (67 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (67 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (67 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (67 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (67 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (67 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (67 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (67 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv7_27 : STD_LOGIC_VECTOR (6 downto 0) := "0100111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_29 : STD_LOGIC_VECTOR (11 downto 0) := "000000101001";
    constant ap_const_lv11_28 : STD_LOGIC_VECTOR (10 downto 0) := "00000101000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_292 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal grp_fu_288_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_296 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal j_4_reg_655 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln12_fu_314_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln12_reg_663 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln14_fu_340_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln14_reg_668 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln12_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln8_fu_346_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln8_reg_676 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln13_fu_355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln13_reg_688 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln13_1_fu_359_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln13_1_reg_693 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln13_fu_370_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_reg_701 : STD_LOGIC_VECTOR (5 downto 0);
    signal A_addr_reg_706 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln13_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_6_fu_390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_6_reg_711 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal bitcast_ln18_fu_399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal A_addr_2_reg_732 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal icmp_ln20_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln20_fu_425_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln20_reg_737 : STD_LOGIC_VECTOR (10 downto 0);
    signal w_8_fu_435_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_8_reg_742 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal i_4_reg_747 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal zext_ln29_fu_463_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_reg_757 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln29_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln32_fu_501_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln32_reg_781 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal w_fu_508_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_reg_786 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_5_reg_791 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal trunc_ln36_fu_524_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln36_reg_797 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln36_fu_536_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_reg_805 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_528_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_load_reg_815 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal add_ln39_fu_577_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln39_reg_820 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln40_fu_584_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln40_reg_825 : STD_LOGIC_VECTOR (10 downto 0);
    signal w_7_fu_590_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal w_7_reg_830 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal bitcast_ln40_fu_614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_start : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_done : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_idle : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_ready : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_ce0 : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_ce1 : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_w_6_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_w_6_out_ap_vld : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_ce : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_852_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_852_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_852_p_ce : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_start : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_done : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_idle : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_ready : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_ce0 : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_ce1 : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_w_10_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_w_10_out_ap_vld : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_ce : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_852_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_852_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_852_p_ce : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_start : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_done : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_idle : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_ready : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_A_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_A_ce0 : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_y_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_y_ce0 : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_w_3_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_w_3_out_ap_vld : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_ce : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_852_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_852_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_852_p_ce : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_start : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_done : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_idle : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_ready : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_A_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_A_ce0 : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_x_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_x_ce0 : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_w_8_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_w_8_out_ap_vld : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_ce : STD_LOGIC;
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_852_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_852_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_852_p_ce : STD_LOGIC;
    signal j_reg_206 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal phi_mul_reg_218 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_2_reg_229 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal zext_ln14_2_fu_385_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln21_fu_420_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal zext_ln40_fu_606_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal i_fu_90 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_1_fu_110 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln29_fu_457_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvars_iv_fu_114 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln36_1_fu_595_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_2_fu_118 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln36_fu_541_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln18_1_fu_404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln25_fu_443_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_288_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_288_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_328_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_320_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln14_fu_336_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln14_1_fu_376_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln14_1_fu_380_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln21_fu_415_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_fu_490_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_483_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln32_fu_497_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_5_fu_566_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_559_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln39_1_fu_573_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln39_fu_556_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_848_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_848_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_848_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_848_ce : STD_LOGIC;
    signal grp_fu_852_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_852_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_852_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_852_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (67 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component ludcmp_ludcmp_Pipeline_VITIS_LOOP_15_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        w_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        j : IN STD_LOGIC_VECTOR (5 downto 0);
        add_ln14 : IN STD_LOGIC_VECTOR (10 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        A_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        A_ce1 : OUT STD_LOGIC;
        A_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        zext_ln13 : IN STD_LOGIC_VECTOR (5 downto 0);
        w_6_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_6_out_ap_vld : OUT STD_LOGIC;
        grp_fu_848_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_848_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_848_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_848_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_848_p_ce : OUT STD_LOGIC;
        grp_fu_852_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_852_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_852_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_852_p_ce : OUT STD_LOGIC );
    end component;


    component ludcmp_ludcmp_Pipeline_VITIS_LOOP_22_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        w_5 : IN STD_LOGIC_VECTOR (63 downto 0);
        j_5 : IN STD_LOGIC_VECTOR (5 downto 0);
        add_ln14 : IN STD_LOGIC_VECTOR (10 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        A_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        A_ce1 : OUT STD_LOGIC;
        A_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        zext_ln20 : IN STD_LOGIC_VECTOR (10 downto 0);
        w_10_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_10_out_ap_vld : OUT STD_LOGIC;
        grp_fu_848_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_848_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_848_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_848_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_848_p_ce : OUT STD_LOGIC;
        grp_fu_852_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_852_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_852_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_852_p_ce : OUT STD_LOGIC );
    end component;


    component ludcmp_ludcmp_Pipeline_VITIS_LOOP_31_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        w : IN STD_LOGIC_VECTOR (63 downto 0);
        i_1 : IN STD_LOGIC_VECTOR (5 downto 0);
        add_ln32 : IN STD_LOGIC_VECTOR (10 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        y_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        y_ce0 : OUT STD_LOGIC;
        y_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        w_3_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_3_out_ap_vld : OUT STD_LOGIC;
        grp_fu_848_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_848_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_848_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_848_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_848_p_ce : OUT STD_LOGIC;
        grp_fu_852_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_852_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_852_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_852_p_ce : OUT STD_LOGIC );
    end component;


    component ludcmp_ludcmp_Pipeline_VITIS_LOOP_38_9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln36 : IN STD_LOGIC_VECTOR (5 downto 0);
        w_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        add_ln39 : IN STD_LOGIC_VECTOR (10 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        x_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        x_ce0 : OUT STD_LOGIC;
        x_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        w_8_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_8_out_ap_vld : OUT STD_LOGIC;
        grp_fu_848_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_848_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_848_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_848_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_848_p_ce : OUT STD_LOGIC;
        grp_fu_852_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_852_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_852_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_852_p_ce : OUT STD_LOGIC );
    end component;


    component ludcmp_ddiv_64ns_64ns_64_22_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component ludcmp_dsub_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component ludcmp_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239 : component ludcmp_ludcmp_Pipeline_VITIS_LOOP_15_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_start,
        ap_done => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_done,
        ap_idle => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_idle,
        ap_ready => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_ready,
        w_1 => w_6_reg_711,
        j => j_reg_206,
        add_ln14 => add_ln14_reg_668,
        A_address0 => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_address0,
        A_ce0 => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_ce0,
        A_q0 => A_q0,
        A_address1 => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_address1,
        A_ce1 => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_ce1,
        A_q1 => A_q1,
        zext_ln13 => j_reg_206,
        w_6_out => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_w_6_out,
        w_6_out_ap_vld => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_w_6_out_ap_vld,
        grp_fu_848_p_din0 => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_din0,
        grp_fu_848_p_din1 => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_din1,
        grp_fu_848_p_opcode => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_opcode,
        grp_fu_848_p_dout0 => grp_fu_848_p2,
        grp_fu_848_p_ce => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_ce,
        grp_fu_852_p_din0 => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_852_p_din0,
        grp_fu_852_p_din1 => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_852_p_din1,
        grp_fu_852_p_dout0 => grp_fu_852_p2,
        grp_fu_852_p_ce => grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_852_p_ce);

    grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252 : component ludcmp_ludcmp_Pipeline_VITIS_LOOP_22_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_start,
        ap_done => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_done,
        ap_idle => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_idle,
        ap_ready => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_ready,
        w_5 => w_8_reg_742,
        j_5 => j_4_reg_655,
        add_ln14 => add_ln14_reg_668,
        A_address0 => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_address0,
        A_ce0 => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_ce0,
        A_q0 => A_q0,
        A_address1 => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_address1,
        A_ce1 => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_ce1,
        A_q1 => A_q1,
        zext_ln20 => j_2_reg_229,
        w_10_out => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_w_10_out,
        w_10_out_ap_vld => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_w_10_out_ap_vld,
        grp_fu_848_p_din0 => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_din0,
        grp_fu_848_p_din1 => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_din1,
        grp_fu_848_p_opcode => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_opcode,
        grp_fu_848_p_dout0 => grp_fu_848_p2,
        grp_fu_848_p_ce => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_ce,
        grp_fu_852_p_din0 => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_852_p_din0,
        grp_fu_852_p_din1 => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_852_p_din1,
        grp_fu_852_p_dout0 => grp_fu_852_p2,
        grp_fu_852_p_ce => grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_852_p_ce);

    grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264 : component ludcmp_ludcmp_Pipeline_VITIS_LOOP_31_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_start,
        ap_done => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_done,
        ap_idle => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_idle,
        ap_ready => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_ready,
        w => w_reg_786,
        i_1 => i_4_reg_747,
        add_ln32 => add_ln32_reg_781,
        A_address0 => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_A_address0,
        A_ce0 => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_A_ce0,
        A_q0 => A_q0,
        y_address0 => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_y_address0,
        y_ce0 => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_y_ce0,
        y_q0 => y_q0,
        w_3_out => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_w_3_out,
        w_3_out_ap_vld => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_w_3_out_ap_vld,
        grp_fu_848_p_din0 => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_din0,
        grp_fu_848_p_din1 => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_din1,
        grp_fu_848_p_opcode => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_opcode,
        grp_fu_848_p_dout0 => grp_fu_848_p2,
        grp_fu_848_p_ce => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_ce,
        grp_fu_852_p_din0 => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_852_p_din0,
        grp_fu_852_p_din1 => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_852_p_din1,
        grp_fu_852_p_dout0 => grp_fu_852_p2,
        grp_fu_852_p_ce => grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_852_p_ce);

    grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276 : component ludcmp_ludcmp_Pipeline_VITIS_LOOP_38_9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_start,
        ap_done => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_done,
        ap_idle => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_idle,
        ap_ready => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_ready,
        zext_ln36 => indvars_iv_load_reg_815,
        w_2 => w_7_reg_830,
        add_ln39 => add_ln39_reg_820,
        A_address0 => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_A_address0,
        A_ce0 => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_A_ce0,
        A_q0 => A_q0,
        x_address0 => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_x_address0,
        x_ce0 => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_x_ce0,
        x_q0 => x_q0,
        w_8_out => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_w_8_out,
        w_8_out_ap_vld => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_w_8_out_ap_vld,
        grp_fu_848_p_din0 => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_din0,
        grp_fu_848_p_din1 => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_din1,
        grp_fu_848_p_opcode => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_opcode,
        grp_fu_848_p_dout0 => grp_fu_848_p2,
        grp_fu_848_p_ce => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_ce,
        grp_fu_852_p_din0 => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_852_p_din0,
        grp_fu_852_p_din1 => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_852_p_din1,
        grp_fu_852_p_dout0 => grp_fu_852_p2,
        grp_fu_852_p_ce => grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_852_p_ce);

    ddiv_64ns_64ns_64_22_no_dsp_1_U33 : component ludcmp_ddiv_64ns_64ns_64_22_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 22,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_288_p0,
        din1 => grp_fu_288_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_288_p2);

    dsub_64ns_64ns_64_5_full_dsp_1_U34 : component ludcmp_dsub_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_848_p0,
        din1 => grp_fu_848_p1,
        ce => grp_fu_848_ce,
        dout => grp_fu_848_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U35 : component ludcmp_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_852_p0,
        din1 => grp_fu_852_p1,
        ce => grp_fu_852_ce,
        dout => grp_fu_852_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_ready = ap_const_logic_1)) then 
                    grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                    grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_ready = ap_const_logic_1)) then 
                    grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                    grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_ready = ap_const_logic_1)) then 
                    grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                    grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_ready = ap_const_logic_1)) then 
                    grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln12_fu_308_p2 = ap_const_lv1_1))) then 
                i_1_fu_110 <= ap_const_lv6_0;
            elsif (((icmp_ln29_fu_451_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                i_1_fu_110 <= add_ln29_fu_457_p2;
            end if; 
        end if;
    end process;

    i_2_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln29_fu_451_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                i_2_fu_118 <= ap_const_lv7_27;
            elsif (((tmp_6_fu_528_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                i_2_fu_118 <= add_ln36_fu_541_p2;
            end if; 
        end if;
    end process;

    i_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_90 <= ap_const_lv6_0;
            elsif (((icmp_ln20_fu_409_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                i_fu_90 <= add_ln12_reg_663;
            end if; 
        end if;
    end process;

    indvars_iv_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln29_fu_451_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                indvars_iv_fu_114 <= ap_const_lv6_28;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                indvars_iv_fu_114 <= add_ln36_1_fu_595_p2;
            end if; 
        end if;
    end process;

    j_2_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln13_fu_365_p2 = ap_const_lv1_1))) then 
                j_2_reg_229 <= zext_ln8_reg_676;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                j_2_reg_229 <= add_ln20_reg_737;
            end if; 
        end if;
    end process;

    j_reg_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln12_fu_308_p2 = ap_const_lv1_0))) then 
                j_reg_206 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                j_reg_206 <= add_ln13_reg_701;
            end if; 
        end if;
    end process;

    phi_mul_reg_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln12_fu_308_p2 = ap_const_lv1_0))) then 
                phi_mul_reg_218 <= ap_const_lv12_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                phi_mul_reg_218 <= add_ln13_1_reg_693;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln20_fu_409_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                A_addr_2_reg_732 <= zext_ln21_fu_420_p1(11 - 1 downto 0);
                add_ln20_reg_737 <= add_ln20_fu_425_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln13_fu_365_p2 = ap_const_lv1_0))) then
                A_addr_reg_706 <= zext_ln14_2_fu_385_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln12_reg_663 <= add_ln12_fu_314_p2;
                j_4_reg_655 <= i_fu_90;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln13_1_reg_693 <= add_ln13_1_fu_359_p2;
                add_ln13_reg_701 <= add_ln13_fu_370_p2;
                    zext_ln13_reg_688(11 downto 0) <= zext_ln13_fu_355_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln12_fu_308_p2 = ap_const_lv1_0))) then
                    add_ln14_reg_668(10 downto 3) <= add_ln14_fu_340_p2(10 downto 3);
                    zext_ln8_reg_676(5 downto 0) <= zext_ln8_fu_346_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                    add_ln32_reg_781(10 downto 3) <= add_ln32_fu_501_p2(10 downto 3);
                w_reg_786 <= w_fu_508_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                    add_ln39_reg_820(10 downto 3) <= add_ln39_fu_577_p2(10 downto 3);
                add_ln40_reg_825 <= add_ln40_fu_584_p2;
                indvars_iv_load_reg_815 <= indvars_iv_fu_114;
                w_7_reg_830 <= w_7_fu_590_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                i_4_reg_747 <= i_1_fu_110;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                i_5_reg_791 <= i_2_fu_118;
                trunc_ln36_reg_797 <= trunc_ln36_fu_524_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_292 <= A_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state30))) then
                reg_296 <= grp_fu_288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                w_6_reg_711 <= w_6_fu_390_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                w_8_reg_742 <= w_8_fu_435_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln29_fu_451_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    zext_ln29_reg_757(5 downto 0) <= zext_ln29_fu_463_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_6_fu_528_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    zext_ln36_reg_805(6 downto 0) <= zext_ln36_fu_536_p1(6 downto 0);
            end if;
        end if;
    end process;
    add_ln14_reg_668(2 downto 0) <= "000";
    zext_ln8_reg_676(10 downto 6) <= "00000";
    zext_ln13_reg_688(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";
    zext_ln29_reg_757(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    add_ln32_reg_781(2 downto 0) <= "000";
    zext_ln36_reg_805(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    add_ln39_reg_820(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln12_fu_308_p2, ap_CS_fsm_state3, icmp_ln13_fu_365_p2, ap_CS_fsm_state32, icmp_ln20_fu_409_p2, ap_CS_fsm_state37, icmp_ln29_fu_451_p2, ap_CS_fsm_state41, tmp_6_fu_528_p3, grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_done, grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_done, grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_done, grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_done, ap_CS_fsm_state6, ap_CS_fsm_state35, ap_CS_fsm_state39, ap_CS_fsm_state43)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln12_fu_308_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln13_fu_365_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state32 => 
                if (((icmp_ln20_fu_409_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                if (((grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state37 => 
                if (((icmp_ln29_fu_451_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                if (((grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state41 => 
                if (((tmp_6_fu_528_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if (((grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(zext_ln13_reg_688, ap_CS_fsm_state3, A_addr_reg_706, ap_CS_fsm_state7, A_addr_2_reg_732, ap_CS_fsm_state32, ap_CS_fsm_state44, grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_address0, grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_address0, grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_A_address0, grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_A_address0, ap_CS_fsm_state31, ap_CS_fsm_state36, ap_CS_fsm_state6, ap_CS_fsm_state35, ap_CS_fsm_state39, ap_CS_fsm_state43, zext_ln14_2_fu_385_p1, zext_ln21_fu_420_p1, zext_ln40_fu_606_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            A_address0 <= zext_ln40_fu_606_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            A_address0 <= A_addr_2_reg_732;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            A_address0 <= zext_ln21_fu_420_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            A_address0 <= A_addr_reg_706;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            A_address0 <= zext_ln13_reg_688(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            A_address0 <= zext_ln14_2_fu_385_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            A_address0 <= grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            A_address0 <= grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            A_address0 <= grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_address0 <= grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_address0;
        else 
            A_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    A_address1_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_address1, grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_address1, ap_CS_fsm_state6, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            A_address1 <= grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_address1 <= grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_address1;
        else 
            A_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    A_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state32, ap_CS_fsm_state44, grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_ce0, grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_ce0, grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_A_ce0, grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_A_ce0, ap_CS_fsm_state31, ap_CS_fsm_state36, ap_CS_fsm_state6, ap_CS_fsm_state35, ap_CS_fsm_state39, ap_CS_fsm_state43)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            A_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            A_ce0 <= grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            A_ce0 <= grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            A_ce0 <= grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_ce0 <= grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_ce1_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_ce1, grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_ce1, ap_CS_fsm_state6, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            A_ce1 <= grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_A_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            A_ce1 <= grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_A_ce1;
        else 
            A_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_d0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state36, bitcast_ln18_1_fu_404_p1, bitcast_ln25_fu_443_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            A_d0 <= bitcast_ln25_fu_443_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            A_d0 <= bitcast_ln18_1_fu_404_p1;
        else 
            A_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    A_we0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state36)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            A_we0 <= ap_const_logic_1;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln12_fu_314_p2 <= std_logic_vector(unsigned(i_fu_90) + unsigned(ap_const_lv6_1));
    add_ln13_1_fu_359_p2 <= std_logic_vector(unsigned(phi_mul_reg_218) + unsigned(ap_const_lv12_29));
    add_ln13_fu_370_p2 <= std_logic_vector(unsigned(j_reg_206) + unsigned(ap_const_lv6_1));
    add_ln14_1_fu_380_p2 <= std_logic_vector(unsigned(add_ln14_reg_668) + unsigned(zext_ln14_1_fu_376_p1));
    add_ln14_fu_340_p2 <= std_logic_vector(unsigned(tmp_fu_320_p3) + unsigned(zext_ln14_fu_336_p1));
    add_ln20_fu_425_p2 <= std_logic_vector(unsigned(j_2_reg_229) + unsigned(ap_const_lv11_1));
    add_ln21_fu_415_p2 <= std_logic_vector(unsigned(add_ln14_reg_668) + unsigned(j_2_reg_229));
    add_ln29_fu_457_p2 <= std_logic_vector(unsigned(i_1_fu_110) + unsigned(ap_const_lv6_1));
    add_ln32_fu_501_p2 <= std_logic_vector(unsigned(tmp_2_fu_483_p3) + unsigned(zext_ln32_fu_497_p1));
    add_ln36_1_fu_595_p2 <= std_logic_vector(unsigned(indvars_iv_fu_114) + unsigned(ap_const_lv6_3F));
    add_ln36_fu_541_p2 <= std_logic_vector(unsigned(i_2_fu_118) + unsigned(ap_const_lv7_7F));
    add_ln39_fu_577_p2 <= std_logic_vector(unsigned(tmp_4_fu_559_p3) + unsigned(zext_ln39_1_fu_573_p1));
    add_ln40_fu_584_p2 <= std_logic_vector(unsigned(add_ln39_fu_577_p2) + unsigned(zext_ln39_fu_556_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;

    ap_ST_fsm_state35_blk_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_done)
    begin
        if ((grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state35_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state35_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;

    ap_ST_fsm_state39_blk_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_done)
    begin
        if ((grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state39_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state39_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;

    ap_ST_fsm_state43_blk_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_done)
    begin
        if ((grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state43_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state43_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_done)
    begin
        if ((grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state41, tmp_6_fu_528_p3)
    begin
        if (((tmp_6_fu_528_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state41, tmp_6_fu_528_p3)
    begin
        if (((tmp_6_fu_528_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_address0 <= zext_ln29_fu_463_p1(6 - 1 downto 0);

    b_ce0_assign_proc : process(ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            b_ce0 <= ap_const_logic_1;
        else 
            b_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln18_1_fu_404_p1 <= reg_296;
    bitcast_ln18_fu_399_p1 <= reg_292;
    bitcast_ln25_fu_443_p1 <= grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_w_10_out;
    bitcast_ln40_fu_614_p1 <= reg_292;

    grp_fu_288_p0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state46, grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_w_6_out, grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_w_8_out)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_fu_288_p0 <= grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_w_8_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_288_p0 <= grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_w_6_out;
        else 
            grp_fu_288_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_288_p1_assign_proc : process(bitcast_ln18_fu_399_p1, ap_CS_fsm_state9, bitcast_ln40_fu_614_p1, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_fu_288_p1 <= bitcast_ln40_fu_614_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_288_p1 <= bitcast_ln18_fu_399_p1;
        else 
            grp_fu_288_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_848_ce_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_ce, grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_ce, grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_ce, grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_ce, ap_CS_fsm_state6, ap_CS_fsm_state35, ap_CS_fsm_state39, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_848_ce <= grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_848_ce <= grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_848_ce <= grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_848_ce <= grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_ce;
        else 
            grp_fu_848_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_848_p0_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_din0, grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_din0, grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_din0, grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_din0, ap_CS_fsm_state6, ap_CS_fsm_state35, ap_CS_fsm_state39, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_848_p0 <= grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_848_p0 <= grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_848_p0 <= grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_848_p0 <= grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_din0;
        else 
            grp_fu_848_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_848_p1_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_din1, grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_din1, grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_din1, grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_din1, ap_CS_fsm_state6, ap_CS_fsm_state35, ap_CS_fsm_state39, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_848_p1 <= grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_848_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_848_p1 <= grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_848_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_848_p1 <= grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_848_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_848_p1 <= grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_848_p_din1;
        else 
            grp_fu_848_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_852_ce_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_852_p_ce, grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_852_p_ce, grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_852_p_ce, grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_852_p_ce, ap_CS_fsm_state6, ap_CS_fsm_state35, ap_CS_fsm_state39, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_852_ce <= grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_852_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_852_ce <= grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_852_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_852_ce <= grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_852_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_852_ce <= grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_852_p_ce;
        else 
            grp_fu_852_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_852_p0_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_852_p_din0, grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_852_p_din0, grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_852_p_din0, grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_852_p_din0, ap_CS_fsm_state6, ap_CS_fsm_state35, ap_CS_fsm_state39, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_852_p0 <= grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_852_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_852_p0 <= grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_852_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_852_p0 <= grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_852_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_852_p0 <= grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_852_p_din0;
        else 
            grp_fu_852_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_852_p1_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_852_p_din1, grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_852_p_din1, grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_852_p_din1, grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_852_p_din1, ap_CS_fsm_state6, ap_CS_fsm_state35, ap_CS_fsm_state39, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_852_p1 <= grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_grp_fu_852_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_852_p1 <= grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_grp_fu_852_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_852_p1 <= grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_grp_fu_852_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_852_p1 <= grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_grp_fu_852_p_din1;
        else 
            grp_fu_852_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_start <= grp_ludcmp_Pipeline_VITIS_LOOP_15_3_fu_239_ap_start_reg;
    grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_start <= grp_ludcmp_Pipeline_VITIS_LOOP_22_5_fu_252_ap_start_reg;
    grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_start <= grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_ap_start_reg;
    grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_start <= grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_ap_start_reg;
    icmp_ln12_fu_308_p2 <= "1" when (i_fu_90 = ap_const_lv6_28) else "0";
    icmp_ln13_fu_365_p2 <= "1" when (j_reg_206 = i_fu_90) else "0";
    icmp_ln20_fu_409_p2 <= "1" when (j_2_reg_229 = ap_const_lv11_28) else "0";
    icmp_ln29_fu_451_p2 <= "1" when (i_1_fu_110 = ap_const_lv6_28) else "0";
    tmp_1_fu_328_p3 <= (i_fu_90 & ap_const_lv3_0);
    tmp_2_fu_483_p3 <= (i_4_reg_747 & ap_const_lv5_0);
    tmp_3_fu_490_p3 <= (i_4_reg_747 & ap_const_lv3_0);
    tmp_4_fu_559_p3 <= (trunc_ln36_reg_797 & ap_const_lv5_0);
    tmp_5_fu_566_p3 <= (i_5_reg_791 & ap_const_lv3_0);
    tmp_6_fu_528_p3 <= i_2_fu_118(6 downto 6);
    tmp_fu_320_p3 <= (i_fu_90 & ap_const_lv5_0);
    trunc_ln36_fu_524_p1 <= i_2_fu_118(6 - 1 downto 0);
    w_6_fu_390_p1 <= reg_292;
    w_7_fu_590_p1 <= y_q0;
    w_8_fu_435_p1 <= reg_292;
    w_fu_508_p1 <= b_q0;

    x_address0_assign_proc : process(zext_ln36_reg_805, grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_x_address0, ap_CS_fsm_state43, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            x_address0 <= zext_ln36_reg_805(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            x_address0 <= grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_x_address0;
        else 
            x_address0 <= "XXXXXX";
        end if; 
    end process;


    x_ce0_assign_proc : process(grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_x_ce0, ap_CS_fsm_state43, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            x_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            x_ce0 <= grp_ludcmp_Pipeline_VITIS_LOOP_38_9_fu_276_x_ce0;
        else 
            x_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_d0 <= reg_296;

    x_we0_assign_proc : process(ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            x_we0 <= ap_const_logic_1;
        else 
            x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    y_address0_assign_proc : process(zext_ln29_reg_757, ap_CS_fsm_state41, zext_ln36_fu_536_p1, grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_y_address0, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            y_address0 <= zext_ln36_fu_536_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            y_address0 <= zext_ln29_reg_757(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            y_address0 <= grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_y_address0;
        else 
            y_address0 <= "XXXXXX";
        end if; 
    end process;


    y_ce0_assign_proc : process(ap_CS_fsm_state41, grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_y_ce0, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            y_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            y_ce0 <= grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_y_ce0;
        else 
            y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    y_d0 <= grp_ludcmp_Pipeline_VITIS_LOOP_31_7_fu_264_w_3_out;

    y_we0_assign_proc : process(ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            y_we0 <= ap_const_logic_1;
        else 
            y_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln13_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_reg_218),64));
    zext_ln14_1_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_206),11));
    zext_ln14_2_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_1_fu_380_p2),64));
    zext_ln14_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_328_p3),11));
    zext_ln21_fu_420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln21_fu_415_p2),64));
    zext_ln29_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_fu_110),64));
    zext_ln32_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_490_p3),11));
    zext_ln36_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_fu_118),64));
    zext_ln39_1_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_566_p3),11));
    zext_ln39_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_reg_791),11));
    zext_ln40_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln40_reg_825),64));
    zext_ln8_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_90),11));
end behav;
