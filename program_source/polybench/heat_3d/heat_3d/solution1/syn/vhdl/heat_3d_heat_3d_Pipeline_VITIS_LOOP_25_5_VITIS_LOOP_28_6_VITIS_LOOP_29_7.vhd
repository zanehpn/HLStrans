-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity heat_3d_heat_3d_Pipeline_VITIS_LOOP_25_5_VITIS_LOOP_28_6_VITIS_LOOP_29_7 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_we0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    B_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    B_ce0 : OUT STD_LOGIC;
    B_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    B_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    B_ce1 : OUT STD_LOGIC;
    B_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_99_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_99_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_99_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_99_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_99_p_ce : OUT STD_LOGIC;
    grp_fu_103_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_103_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_103_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_103_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_103_p_ce : OUT STD_LOGIC;
    grp_fu_107_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_107_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_107_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_107_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_107_p_ce : OUT STD_LOGIC;
    grp_fu_111_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_111_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_111_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_111_p_ce : OUT STD_LOGIC );
end;


architecture behav of heat_3d_heat_3d_Pipeline_VITIS_LOOP_25_5_VITIS_LOOP_28_6_VITIS_LOOP_29_7 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv64_4000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3FC0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv13_16C8 : STD_LOGIC_VECTOR (12 downto 0) := "1011011001000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv10_144 : STD_LOGIC_VECTOR (9 downto 0) := "0101000100";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state32_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state36_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state40_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter10 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal icmp_ln25_reg_863 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage3 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_190 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln25_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_reg_863_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_reg_863_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_reg_863_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_reg_863_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_reg_863_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_reg_863_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_reg_863_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_reg_863_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_reg_863_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten34_load_reg_867 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_load_reg_872 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln28_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln28_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next7047_fu_246_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv_next7047_reg_893 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln28_fu_441_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln28_reg_899 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln30_6_fu_491_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_6_reg_905 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_15_fu_675_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_15_reg_911 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_16_fu_681_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_16_reg_916 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_17_fu_687_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_17_reg_921 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_17_reg_921_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_17_reg_921_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_18_fu_693_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_18_reg_926 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_19_fu_699_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_19_reg_931 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_19_reg_931_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_19_reg_931_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln30_15_fu_715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_15_reg_936 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state31_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state35_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state39_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter10 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal zext_ln30_15_reg_936_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_15_reg_936_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_15_reg_936_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_15_reg_936_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_15_reg_936_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_15_reg_936_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_15_reg_936_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_15_reg_936_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_15_reg_936_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_15_reg_936_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_1_fu_736_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_1_reg_946 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_1_reg_946_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_1_reg_946_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_1_reg_946_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_1_reg_946_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_1_reg_946_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_1_reg_946_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_1_reg_946_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_1_reg_946_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln30_20_fu_750_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_20_reg_952 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_21_fu_764_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_21_reg_957 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_21_reg_957_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal B_load_reg_972 : STD_LOGIC_VECTOR (63 downto 0);
    signal B_load_3_reg_977 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul4_reg_987 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_fu_786_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_3_fu_790_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_5_fu_794_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal B_load_2_reg_1019 : STD_LOGIC_VECTOR (63 downto 0);
    signal B_load_4_reg_1024 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub3_reg_1034 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub4_reg_1039 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub5_reg_1044 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_2_fu_811_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_4_fu_815_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln30_6_fu_819_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add6_reg_1064 : STD_LOGIC_VECTOR (63 downto 0);
    signal add7_reg_1069 : STD_LOGIC_VECTOR (63 downto 0);
    signal add9_reg_1074 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul5_reg_1079 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul6_reg_1084 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul7_reg_1089 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul7_reg_1089_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add8_reg_1094 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_reg_1099 : STD_LOGIC_VECTOR (63 downto 0);
    signal add1_reg_1104 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln30_16_fu_774_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln30_18_fu_778_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_21_fu_782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln30_17_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_19_fu_803_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_23_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal k_fu_74 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln30_fu_741_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal j_fu_78 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln28_1_fu_449_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten34_fu_82 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln28_4_fu_724_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_indvar_flatten34_load : STD_LOGIC_VECTOR (9 downto 0);
    signal i_fu_86 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln25_1_fu_282_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten59_fu_90 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln25_fu_228_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_allocacmp_indvar_flatten59_load : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_172_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_176_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_176_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_180_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_184_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_184_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_287_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_299_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln30_fu_295_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln30_1_fu_307_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvars_iv_next70_mid1_fu_317_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln25_2_fu_322_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_fu_328_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_340_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln30_2_fu_336_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln30_3_fu_348_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_10_fu_358_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln25_3_fu_363_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_369_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_381_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln30_4_fu_377_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln30_5_fu_389_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvars_iv_next66_fu_260_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_fu_266_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln29_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_fu_275_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln25_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln28_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next66_dup_fu_430_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln30_2_fu_311_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln30_6_fu_457_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln30_5_fu_461_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln30_fu_467_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_479_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl_fu_471_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln30_7_fu_487_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_3_fu_352_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln30_7_fu_497_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln30_1_fu_503_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_fu_515_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl1_fu_507_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln30_8_fu_523_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_4_fu_393_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln30_9_fu_533_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln30_2_fu_539_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_fu_551_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl2_fu_543_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln30_9_fu_559_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvars_iv_next66_mid1_fu_569_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln25_4_fu_399_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln28_2_fu_575_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln30_10_fu_583_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln30_11_fu_587_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln30_3_fu_593_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_fu_605_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl3_fu_597_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln30_11_fu_613_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln25_5_fu_406_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln28_3_fu_623_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln30_12_fu_631_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln30_13_fu_635_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln30_4_fu_641_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_fu_653_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl4_fu_645_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln30_13_fu_661_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln30_14_fu_671_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_8_fu_527_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_10_fu_563_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_12_fu_617_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_14_fu_665_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln28_fu_719_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln30_20_fu_746_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_1_fu_755_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln30_22_fu_760_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_172_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal grp_fu_176_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_180_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter10_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to9 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0_1to11 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component heat_3d_dadddsub_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component heat_3d_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component heat_3d_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component heat_3d_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage3,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage3)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    i_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_fu_86 <= ap_const_lv5_1;
            elsif (((icmp_ln25_reg_863 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                i_fu_86 <= select_ln25_1_fu_282_p3;
            end if; 
        end if;
    end process;

    indvar_flatten34_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten34_fu_82 <= ap_const_lv10_0;
            elsif (((icmp_ln25_reg_863 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                indvar_flatten34_fu_82 <= select_ln28_4_fu_724_p3;
            end if; 
        end if;
    end process;

    indvar_flatten59_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln25_fu_222_p2 = ap_const_lv1_0))) then 
                    indvar_flatten59_fu_90 <= add_ln25_fu_228_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten59_fu_90 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_fu_78 <= ap_const_lv5_1;
            elsif (((icmp_ln25_reg_863 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                j_fu_78 <= select_ln28_1_fu_449_p3;
            end if; 
        end if;
    end process;

    k_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    k_fu_74 <= ap_const_lv5_1;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    k_fu_74 <= add_ln30_fu_741_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                B_load_2_reg_1019 <= B_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                B_load_3_reg_977 <= B_q0;
                B_load_reg_972 <= B_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                B_load_4_reg_1024 <= B_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add1_reg_1104 <= grp_fu_103_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add6_reg_1064 <= grp_fu_99_p_dout0;
                add7_reg_1069 <= grp_fu_103_p_dout0;
                add9_reg_1074 <= grp_fu_107_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add8_reg_1094 <= grp_fu_99_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_863 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln30_15_reg_911 <= add_ln30_15_fu_675_p2;
                add_ln30_16_reg_916 <= add_ln30_16_fu_681_p2;
                add_ln30_17_reg_921 <= add_ln30_17_fu_687_p2;
                add_ln30_18_reg_926 <= add_ln30_18_fu_693_p2;
                add_ln30_19_reg_931 <= add_ln30_19_fu_699_p2;
                    add_ln30_6_reg_905(12 downto 2) <= add_ln30_6_fu_491_p2(12 downto 2);
                select_ln28_reg_899 <= select_ln28_fu_441_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                add_ln30_17_reg_921_pp0_iter1_reg <= add_ln30_17_reg_921;
                add_ln30_17_reg_921_pp0_iter2_reg <= add_ln30_17_reg_921_pp0_iter1_reg;
                add_ln30_19_reg_931_pp0_iter1_reg <= add_ln30_19_reg_931;
                add_ln30_19_reg_931_pp0_iter2_reg <= add_ln30_19_reg_931_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln30_20_reg_952 <= add_ln30_20_fu_750_p2;
                add_ln30_21_reg_957 <= add_ln30_21_fu_764_p2;
                add_ln30_21_reg_957_pp0_iter2_reg <= add_ln30_21_reg_957;
                bitcast_ln30_1_reg_946 <= bitcast_ln30_1_fu_736_p1;
                bitcast_ln30_1_reg_946_pp0_iter2_reg <= bitcast_ln30_1_reg_946;
                bitcast_ln30_1_reg_946_pp0_iter3_reg <= bitcast_ln30_1_reg_946_pp0_iter2_reg;
                bitcast_ln30_1_reg_946_pp0_iter4_reg <= bitcast_ln30_1_reg_946_pp0_iter3_reg;
                bitcast_ln30_1_reg_946_pp0_iter5_reg <= bitcast_ln30_1_reg_946_pp0_iter4_reg;
                bitcast_ln30_1_reg_946_pp0_iter6_reg <= bitcast_ln30_1_reg_946_pp0_iter5_reg;
                bitcast_ln30_1_reg_946_pp0_iter7_reg <= bitcast_ln30_1_reg_946_pp0_iter6_reg;
                bitcast_ln30_1_reg_946_pp0_iter8_reg <= bitcast_ln30_1_reg_946_pp0_iter7_reg;
                bitcast_ln30_1_reg_946_pp0_iter9_reg <= bitcast_ln30_1_reg_946_pp0_iter8_reg;
                icmp_ln25_reg_863 <= icmp_ln25_fu_222_p2;
                icmp_ln25_reg_863_pp0_iter1_reg <= icmp_ln25_reg_863;
                icmp_ln25_reg_863_pp0_iter2_reg <= icmp_ln25_reg_863_pp0_iter1_reg;
                icmp_ln25_reg_863_pp0_iter3_reg <= icmp_ln25_reg_863_pp0_iter2_reg;
                icmp_ln25_reg_863_pp0_iter4_reg <= icmp_ln25_reg_863_pp0_iter3_reg;
                icmp_ln25_reg_863_pp0_iter5_reg <= icmp_ln25_reg_863_pp0_iter4_reg;
                icmp_ln25_reg_863_pp0_iter6_reg <= icmp_ln25_reg_863_pp0_iter5_reg;
                icmp_ln25_reg_863_pp0_iter7_reg <= icmp_ln25_reg_863_pp0_iter6_reg;
                icmp_ln25_reg_863_pp0_iter8_reg <= icmp_ln25_reg_863_pp0_iter7_reg;
                icmp_ln25_reg_863_pp0_iter9_reg <= icmp_ln25_reg_863_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_reg_1099 <= grp_fu_99_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_fu_222_p2 = ap_const_lv1_0))) then
                i_load_reg_872 <= ap_sig_allocacmp_i_load;
                icmp_ln28_reg_880 <= icmp_ln28_fu_240_p2;
                indvar_flatten34_load_reg_867 <= ap_sig_allocacmp_indvar_flatten34_load;
                indvars_iv_next7047_reg_893 <= indvars_iv_next7047_fu_246_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul4_reg_987 <= grp_fu_111_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul5_reg_1079 <= grp_fu_111_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul6_reg_1084 <= grp_fu_111_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul7_reg_1089 <= grp_fu_111_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul7_reg_1089_pp0_iter7_reg <= mul7_reg_1089;
                    zext_ln30_15_reg_936_pp0_iter10_reg(12 downto 0) <= zext_ln30_15_reg_936_pp0_iter9_reg(12 downto 0);
                    zext_ln30_15_reg_936_pp0_iter1_reg(12 downto 0) <= zext_ln30_15_reg_936(12 downto 0);
                    zext_ln30_15_reg_936_pp0_iter2_reg(12 downto 0) <= zext_ln30_15_reg_936_pp0_iter1_reg(12 downto 0);
                    zext_ln30_15_reg_936_pp0_iter3_reg(12 downto 0) <= zext_ln30_15_reg_936_pp0_iter2_reg(12 downto 0);
                    zext_ln30_15_reg_936_pp0_iter4_reg(12 downto 0) <= zext_ln30_15_reg_936_pp0_iter3_reg(12 downto 0);
                    zext_ln30_15_reg_936_pp0_iter5_reg(12 downto 0) <= zext_ln30_15_reg_936_pp0_iter4_reg(12 downto 0);
                    zext_ln30_15_reg_936_pp0_iter6_reg(12 downto 0) <= zext_ln30_15_reg_936_pp0_iter5_reg(12 downto 0);
                    zext_ln30_15_reg_936_pp0_iter7_reg(12 downto 0) <= zext_ln30_15_reg_936_pp0_iter6_reg(12 downto 0);
                    zext_ln30_15_reg_936_pp0_iter8_reg(12 downto 0) <= zext_ln30_15_reg_936_pp0_iter7_reg(12 downto 0);
                    zext_ln30_15_reg_936_pp0_iter9_reg(12 downto 0) <= zext_ln30_15_reg_936_pp0_iter8_reg(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln25_reg_863 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_190 <= B_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                sub3_reg_1034 <= grp_fu_99_p_dout0;
                sub4_reg_1039 <= grp_fu_103_p_dout0;
                sub5_reg_1044 <= grp_fu_107_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_reg_863 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    zext_ln30_15_reg_936(12 downto 0) <= zext_ln30_15_fu_715_p1(12 downto 0);
            end if;
        end if;
    end process;
    add_ln30_6_reg_905(1 downto 0) <= "00";
    zext_ln30_15_reg_936(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln30_15_reg_936_pp0_iter1_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln30_15_reg_936_pp0_iter2_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln30_15_reg_936_pp0_iter3_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln30_15_reg_936_pp0_iter4_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln30_15_reg_936_pp0_iter5_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln30_15_reg_936_pp0_iter6_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln30_15_reg_936_pp0_iter7_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln30_15_reg_936_pp0_iter8_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln30_15_reg_936_pp0_iter9_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln30_15_reg_936_pp0_iter10_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter10_stage0, ap_idle_pp0_0to9, ap_idle_pp0_1to11, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to11 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    A_address0 <= zext_ln30_15_reg_936_pp0_iter10_reg(13 - 1 downto 0);

    A_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_ce0 <= ap_const_logic_1;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    A_d0 <= add1_reg_1104;

    A_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            A_we0 <= ap_const_logic_1;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, zext_ln30_15_fu_715_p1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage1, zext_ln30_18_fu_778_p1, zext_ln30_21_fu_782_p1, ap_block_pp0_stage3, zext_ln30_23_fu_807_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            B_address0 <= zext_ln30_23_fu_807_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            B_address0 <= zext_ln30_21_fu_782_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            B_address0 <= zext_ln30_18_fu_778_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            B_address0 <= zext_ln30_15_fu_715_p1(13 - 1 downto 0);
        else 
            B_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    B_address1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, zext_ln30_16_fu_774_p1, ap_block_pp0_stage1, ap_block_pp0_stage3, zext_ln30_17_fu_799_p1, zext_ln30_19_fu_803_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            B_address1 <= zext_ln30_19_fu_803_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            B_address1 <= zext_ln30_17_fu_799_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            B_address1 <= zext_ln30_16_fu_774_p1(13 - 1 downto 0);
        else 
            B_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    B_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            B_ce0 <= ap_const_logic_1;
        else 
            B_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_ce1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            B_ce1 <= ap_const_logic_1;
        else 
            B_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln25_fu_228_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten59_load) + unsigned(ap_const_lv13_1));
    add_ln28_fu_719_p2 <= std_logic_vector(unsigned(indvar_flatten34_load_reg_867) + unsigned(ap_const_lv10_1));
    add_ln30_10_fu_563_p2 <= std_logic_vector(unsigned(p_shl2_fu_543_p3) + unsigned(zext_ln30_9_fu_559_p1));
    add_ln30_11_fu_587_p2 <= std_logic_vector(unsigned(add_ln30_2_fu_311_p2) + unsigned(zext_ln30_10_fu_583_p1));
    add_ln30_12_fu_617_p2 <= std_logic_vector(unsigned(p_shl3_fu_597_p3) + unsigned(zext_ln30_11_fu_613_p1));
    add_ln30_13_fu_635_p2 <= std_logic_vector(unsigned(add_ln30_2_fu_311_p2) + unsigned(zext_ln30_12_fu_631_p1));
    add_ln30_14_fu_665_p2 <= std_logic_vector(unsigned(p_shl4_fu_645_p3) + unsigned(zext_ln30_13_fu_661_p1));
    add_ln30_15_fu_675_p2 <= std_logic_vector(unsigned(add_ln30_6_fu_491_p2) + unsigned(zext_ln30_14_fu_671_p1));
    add_ln30_16_fu_681_p2 <= std_logic_vector(unsigned(add_ln30_8_fu_527_p2) + unsigned(zext_ln30_14_fu_671_p1));
    add_ln30_17_fu_687_p2 <= std_logic_vector(unsigned(add_ln30_10_fu_563_p2) + unsigned(zext_ln30_14_fu_671_p1));
    add_ln30_18_fu_693_p2 <= std_logic_vector(unsigned(add_ln30_12_fu_617_p2) + unsigned(zext_ln30_14_fu_671_p1));
    add_ln30_19_fu_699_p2 <= std_logic_vector(unsigned(add_ln30_14_fu_665_p2) + unsigned(zext_ln30_14_fu_671_p1));
    add_ln30_1_fu_755_p2 <= std_logic_vector(unsigned(select_ln28_reg_899) + unsigned(ap_const_lv5_1F));
    add_ln30_20_fu_750_p2 <= std_logic_vector(unsigned(add_ln30_6_reg_905) + unsigned(zext_ln30_20_fu_746_p1));
    add_ln30_21_fu_764_p2 <= std_logic_vector(unsigned(add_ln30_6_reg_905) + unsigned(zext_ln30_22_fu_760_p1));
    add_ln30_2_fu_311_p2 <= std_logic_vector(unsigned(zext_ln30_fu_295_p1) + unsigned(zext_ln30_1_fu_307_p1));
    add_ln30_3_fu_352_p2 <= std_logic_vector(unsigned(zext_ln30_2_fu_336_p1) + unsigned(zext_ln30_3_fu_348_p1));
    add_ln30_4_fu_393_p2 <= std_logic_vector(unsigned(zext_ln30_4_fu_377_p1) + unsigned(zext_ln30_5_fu_389_p1));
    add_ln30_5_fu_461_p2 <= std_logic_vector(unsigned(add_ln30_2_fu_311_p2) + unsigned(zext_ln30_6_fu_457_p1));
    add_ln30_6_fu_491_p2 <= std_logic_vector(unsigned(p_shl_fu_471_p3) + unsigned(zext_ln30_7_fu_487_p1));
    add_ln30_7_fu_497_p2 <= std_logic_vector(unsigned(add_ln30_3_fu_352_p2) + unsigned(zext_ln30_6_fu_457_p1));
    add_ln30_8_fu_527_p2 <= std_logic_vector(unsigned(p_shl1_fu_507_p3) + unsigned(zext_ln30_8_fu_523_p1));
    add_ln30_9_fu_533_p2 <= std_logic_vector(unsigned(add_ln30_4_fu_393_p2) + unsigned(zext_ln30_6_fu_457_p1));
    add_ln30_fu_741_p2 <= std_logic_vector(unsigned(select_ln28_reg_899) + unsigned(ap_const_lv5_1));
    and_ln25_fu_424_p2 <= (xor_ln25_fu_413_p2 and icmp_ln29_fu_418_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage2_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage3_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone, icmp_ln25_reg_863)
    begin
        if (((icmp_ln25_reg_863 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter10_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, icmp_ln25_reg_863_pp0_iter9_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln25_reg_863_pp0_iter9_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter10_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter10_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter10_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to9_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to9 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to11_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to11 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to11 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage3;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_86)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv5_1;
        else 
            ap_sig_allocacmp_i_load <= i_fu_86;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten34_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten34_fu_82)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten34_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_indvar_flatten34_load <= indvar_flatten34_fu_82;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten59_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten59_fu_90)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten59_load <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_indvar_flatten59_load <= indvar_flatten59_fu_90;
        end if; 
    end process;

    bitcast_ln30_1_fu_736_p1 <= reg_190;
    bitcast_ln30_2_fu_811_p1 <= B_load_2_reg_1019;
    bitcast_ln30_3_fu_790_p1 <= B_load_3_reg_977;
    bitcast_ln30_4_fu_815_p1 <= B_load_4_reg_1024;
    bitcast_ln30_5_fu_794_p1 <= reg_190;
    bitcast_ln30_6_fu_819_p1 <= reg_190;
    bitcast_ln30_fu_786_p1 <= B_load_reg_972;
    empty_10_fu_358_p2 <= std_logic_vector(unsigned(i_load_reg_872) + unsigned(ap_const_lv5_1F));
    empty_fu_266_p2 <= std_logic_vector(unsigned(j_fu_78) + unsigned(ap_const_lv5_1F));
    grp_fu_103_p_ce <= ap_const_logic_1;
    grp_fu_103_p_din0 <= grp_fu_176_p0;
    grp_fu_103_p_din1 <= grp_fu_176_p1;
    grp_fu_103_p_opcode <= grp_fu_176_opcode;
    grp_fu_107_p_ce <= ap_const_logic_1;
    grp_fu_107_p_din0 <= grp_fu_180_p0;
    grp_fu_107_p_din1 <= grp_fu_180_p1;
    grp_fu_107_p_opcode <= grp_fu_180_opcode;
    grp_fu_111_p_ce <= ap_const_logic_1;
    grp_fu_111_p_din0 <= grp_fu_184_p0;
    grp_fu_111_p_din1 <= grp_fu_184_p1;

    grp_fu_172_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_172_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_172_opcode <= ap_const_lv2_0;
        else 
            grp_fu_172_opcode <= "XX";
        end if; 
    end process;


    grp_fu_172_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, bitcast_ln30_fu_786_p1, sub3_reg_1034, mul5_reg_1079, add8_reg_1094, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_172_p0 <= add8_reg_1094;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_172_p0 <= mul5_reg_1079;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_172_p0 <= sub3_reg_1034;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_172_p0 <= bitcast_ln30_fu_786_p1;
        else 
            grp_fu_172_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_172_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul4_reg_987, bitcast_ln30_2_fu_811_p1, mul6_reg_1084, mul7_reg_1089_pp0_iter7_reg, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_172_p1 <= mul7_reg_1089_pp0_iter7_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_172_p1 <= mul6_reg_1084;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_172_p1 <= bitcast_ln30_2_fu_811_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_172_p1 <= mul4_reg_987;
        else 
            grp_fu_172_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_176_opcode_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage1_00001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_176_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_176_opcode <= ap_const_lv2_0;
        else 
            grp_fu_176_opcode <= "XX";
        end if; 
    end process;


    grp_fu_176_p0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, bitcast_ln30_3_fu_790_p1, sub4_reg_1039, add_reg_1099, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_176_p0 <= add_reg_1099;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_176_p0 <= sub4_reg_1039;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_176_p0 <= bitcast_ln30_3_fu_790_p1;
        else 
            grp_fu_176_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_176_p1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, bitcast_ln30_1_reg_946_pp0_iter9_reg, mul4_reg_987, bitcast_ln30_4_fu_815_p1, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_176_p1 <= bitcast_ln30_1_reg_946_pp0_iter9_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_176_p1 <= bitcast_ln30_4_fu_815_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_176_p1 <= mul4_reg_987;
        else 
            grp_fu_176_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_180_opcode_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage1_00001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_180_opcode <= ap_const_lv2_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_180_opcode <= ap_const_lv2_0;
        else 
            grp_fu_180_opcode <= "XX";
        end if; 
    end process;


    grp_fu_180_p0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, bitcast_ln30_5_fu_794_p1, sub5_reg_1044, ap_block_pp0_stage2, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_180_p0 <= sub5_reg_1044;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_180_p0 <= bitcast_ln30_5_fu_794_p1;
        else 
            grp_fu_180_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_180_p1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul4_reg_987, bitcast_ln30_6_fu_819_p1, ap_block_pp0_stage2, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_180_p1 <= bitcast_ln30_6_fu_819_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_180_p1 <= mul4_reg_987;
        else 
            grp_fu_180_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_184_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, bitcast_ln30_1_fu_736_p1, add6_reg_1064, add7_reg_1069, add9_reg_1074, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_184_p0 <= add9_reg_1074;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_184_p0 <= add7_reg_1069;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_184_p0 <= add6_reg_1064;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_184_p0 <= bitcast_ln30_1_fu_736_p1;
        else 
            grp_fu_184_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_184_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_184_p1 <= ap_const_lv64_3FC0000000000000;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_184_p1 <= ap_const_lv64_4000000000000000;
        else 
            grp_fu_184_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_99_p_ce <= ap_const_logic_1;
    grp_fu_99_p_din0 <= grp_fu_172_p0;
    grp_fu_99_p_din1 <= grp_fu_172_p1;
    grp_fu_99_p_opcode <= grp_fu_172_opcode;
    icmp_ln25_fu_222_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten59_load = ap_const_lv13_16C8) else "0";
    icmp_ln28_fu_240_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten34_load = ap_const_lv10_144) else "0";
    icmp_ln29_fu_418_p2 <= "1" when (k_fu_74 = ap_const_lv5_13) else "0";
    indvars_iv_next66_dup_fu_430_p2 <= std_logic_vector(unsigned(select_ln25_fu_275_p3) + unsigned(ap_const_lv5_1));
    indvars_iv_next66_fu_260_p2 <= std_logic_vector(unsigned(j_fu_78) + unsigned(ap_const_lv5_1));
    indvars_iv_next66_mid1_fu_569_p2 <= std_logic_vector(unsigned(select_ln25_fu_275_p3) + unsigned(ap_const_lv5_2));
    indvars_iv_next7047_fu_246_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv5_1));
    indvars_iv_next70_mid1_fu_317_p2 <= std_logic_vector(unsigned(i_load_reg_872) + unsigned(ap_const_lv5_2));
    or_ln28_fu_436_p2 <= (icmp_ln28_reg_880 or and_ln25_fu_424_p2);
    p_shl1_fu_507_p3 <= (trunc_ln30_1_fu_503_p1 & ap_const_lv4_0);
    p_shl2_fu_543_p3 <= (trunc_ln30_2_fu_539_p1 & ap_const_lv4_0);
    p_shl3_fu_597_p3 <= (trunc_ln30_3_fu_593_p1 & ap_const_lv4_0);
    p_shl4_fu_645_p3 <= (trunc_ln30_4_fu_641_p1 & ap_const_lv4_0);
    p_shl_fu_471_p3 <= (trunc_ln30_fu_467_p1 & ap_const_lv4_0);
    select_ln25_1_fu_282_p3 <= 
        indvars_iv_next7047_reg_893 when (icmp_ln28_reg_880(0) = '1') else 
        i_load_reg_872;
    select_ln25_2_fu_322_p3 <= 
        indvars_iv_next70_mid1_fu_317_p2 when (icmp_ln28_reg_880(0) = '1') else 
        indvars_iv_next7047_reg_893;
    select_ln25_3_fu_363_p3 <= 
        i_load_reg_872 when (icmp_ln28_reg_880(0) = '1') else 
        empty_10_fu_358_p2;
    select_ln25_4_fu_399_p3 <= 
        ap_const_lv5_2 when (icmp_ln28_reg_880(0) = '1') else 
        indvars_iv_next66_fu_260_p2;
    select_ln25_5_fu_406_p3 <= 
        ap_const_lv5_0 when (icmp_ln28_reg_880(0) = '1') else 
        empty_fu_266_p2;
    select_ln25_fu_275_p3 <= 
        ap_const_lv5_1 when (icmp_ln28_reg_880(0) = '1') else 
        j_fu_78;
    select_ln28_1_fu_449_p3 <= 
        indvars_iv_next66_dup_fu_430_p2 when (and_ln25_fu_424_p2(0) = '1') else 
        select_ln25_fu_275_p3;
    select_ln28_2_fu_575_p3 <= 
        indvars_iv_next66_mid1_fu_569_p2 when (and_ln25_fu_424_p2(0) = '1') else 
        select_ln25_4_fu_399_p3;
    select_ln28_3_fu_623_p3 <= 
        select_ln25_fu_275_p3 when (and_ln25_fu_424_p2(0) = '1') else 
        select_ln25_5_fu_406_p3;
    select_ln28_4_fu_724_p3 <= 
        ap_const_lv10_1 when (icmp_ln28_reg_880(0) = '1') else 
        add_ln28_fu_719_p2;
    select_ln28_fu_441_p3 <= 
        ap_const_lv5_1 when (or_ln28_fu_436_p2(0) = '1') else 
        k_fu_74;
    tmp_1_fu_299_p3 <= (select_ln25_1_fu_282_p3 & ap_const_lv2_0);
    tmp_2_fu_328_p3 <= (select_ln25_2_fu_322_p3 & ap_const_lv4_0);
    tmp_3_fu_340_p3 <= (select_ln25_2_fu_322_p3 & ap_const_lv2_0);
    tmp_4_fu_369_p3 <= (select_ln25_3_fu_363_p3 & ap_const_lv4_0);
    tmp_5_fu_381_p3 <= (select_ln25_3_fu_363_p3 & ap_const_lv2_0);
    tmp_6_fu_515_p3 <= (add_ln30_7_fu_497_p2 & ap_const_lv2_0);
    tmp_7_fu_551_p3 <= (add_ln30_9_fu_533_p2 & ap_const_lv2_0);
    tmp_8_fu_605_p3 <= (add_ln30_11_fu_587_p2 & ap_const_lv2_0);
    tmp_9_fu_653_p3 <= (add_ln30_13_fu_635_p2 & ap_const_lv2_0);
    tmp_fu_479_p3 <= (add_ln30_5_fu_461_p2 & ap_const_lv2_0);
    tmp_s_fu_287_p3 <= (select_ln25_1_fu_282_p3 & ap_const_lv4_0);
    trunc_ln30_1_fu_503_p1 <= add_ln30_7_fu_497_p2(9 - 1 downto 0);
    trunc_ln30_2_fu_539_p1 <= add_ln30_9_fu_533_p2(9 - 1 downto 0);
    trunc_ln30_3_fu_593_p1 <= add_ln30_11_fu_587_p2(9 - 1 downto 0);
    trunc_ln30_4_fu_641_p1 <= add_ln30_13_fu_635_p2(9 - 1 downto 0);
    trunc_ln30_fu_467_p1 <= add_ln30_5_fu_461_p2(9 - 1 downto 0);
    xor_ln25_fu_413_p2 <= (icmp_ln28_reg_880 xor ap_const_lv1_1);
    zext_ln30_10_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln28_2_fu_575_p3),10));
    zext_ln30_11_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_605_p3),13));
    zext_ln30_12_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln28_3_fu_623_p3),10));
    zext_ln30_13_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_653_p3),13));
    zext_ln30_14_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln28_fu_441_p3),13));
    zext_ln30_15_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_15_reg_911),64));
    zext_ln30_16_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_16_reg_916),64));
    zext_ln30_17_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_17_reg_921_pp0_iter2_reg),64));
    zext_ln30_18_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_18_reg_926),64));
    zext_ln30_19_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_19_reg_931_pp0_iter2_reg),64));
    zext_ln30_1_fu_307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_299_p3),10));
    zext_ln30_20_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_fu_741_p2),13));
    zext_ln30_21_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_20_reg_952),64));
    zext_ln30_22_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_1_fu_755_p2),13));
    zext_ln30_23_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_21_reg_957_pp0_iter2_reg),64));
    zext_ln30_2_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_328_p3),10));
    zext_ln30_3_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_340_p3),10));
    zext_ln30_4_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_369_p3),10));
    zext_ln30_5_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_381_p3),10));
    zext_ln30_6_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln28_1_fu_449_p3),10));
    zext_ln30_7_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_479_p3),13));
    zext_ln30_8_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_515_p3),13));
    zext_ln30_9_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_551_p3),13));
    zext_ln30_fu_295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_287_p3),10));
end behav;
