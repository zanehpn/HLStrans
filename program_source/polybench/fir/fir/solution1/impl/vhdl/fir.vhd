-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fir is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r : IN STD_LOGIC_VECTOR (31 downto 0);
    output_r : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_r_ap_vld : OUT STD_LOGIC;
    taps_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    taps_ce0 : OUT STD_LOGIC;
    taps_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of fir is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fir_fir,hls_ip_2022_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.624000,HLS_SYN_LAT=17,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=252,HLS_SYN_LUT=360,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal delay_lane_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_lane_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_lane_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal delay_lane_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_start : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_done : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_idle : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_ready : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_1_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_1_o_ap_vld : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_2_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_2_o_ap_vld : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_3_ap_vld : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_start : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_done : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_idle : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_ready : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_taps_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_taps_ce0 : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_result_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_result_out_ap_vld : STD_LOGIC;
    signal grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fir_fir_Pipeline_VITIS_LOOP_9_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        delay_lane_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
        delay_lane_1_i : IN STD_LOGIC_VECTOR (31 downto 0);
        delay_lane_1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        delay_lane_1_o_ap_vld : OUT STD_LOGIC;
        delay_lane_2_i : IN STD_LOGIC_VECTOR (31 downto 0);
        delay_lane_2_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        delay_lane_2_o_ap_vld : OUT STD_LOGIC;
        delay_lane_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        delay_lane_3_ap_vld : OUT STD_LOGIC );
    end component;


    component fir_fir_Pipeline_VITIS_LOOP_14_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        delay_lane_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        delay_lane_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r : IN STD_LOGIC_VECTOR (31 downto 0);
        delay_lane_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
        taps_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        taps_ce0 : OUT STD_LOGIC;
        taps_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        result_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59 : component fir_fir_Pipeline_VITIS_LOOP_9_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_start,
        ap_done => grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_done,
        ap_idle => grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_idle,
        ap_ready => grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_ready,
        delay_lane_0_load => delay_lane_0,
        delay_lane_1_i => delay_lane_1,
        delay_lane_1_o => grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_1_o,
        delay_lane_1_o_ap_vld => grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_1_o_ap_vld,
        delay_lane_2_i => delay_lane_2,
        delay_lane_2_o => grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_2_o,
        delay_lane_2_o_ap_vld => grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_2_o_ap_vld,
        delay_lane_3 => grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_3,
        delay_lane_3_ap_vld => grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_3_ap_vld);

    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70 : component fir_fir_Pipeline_VITIS_LOOP_14_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_start,
        ap_done => grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_done,
        ap_idle => grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_idle,
        ap_ready => grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_ready,
        delay_lane_2_load_1 => delay_lane_2,
        delay_lane_1_load_1 => delay_lane_1,
        input_r => input_r,
        delay_lane_3_load => delay_lane_3,
        taps_address0 => grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_taps_address0,
        taps_ce0 => grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_taps_ce0,
        taps_q0 => taps_q0,
        result_out => grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_result_out,
        result_out_ap_vld => grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_result_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_ready = ap_const_logic_1)) then 
                    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_ready = ap_const_logic_1)) then 
                    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                delay_lane_0 <= input_r;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                delay_lane_1 <= grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_1_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                delay_lane_2 <= grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_2_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_3_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                delay_lane_3 <= grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_delay_lane_3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_done, grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_done)
    begin
        if ((grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_done)
    begin
        if ((grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_start <= grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_ap_start_reg;
    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_start <= grp_fir_Pipeline_VITIS_LOOP_9_1_fu_59_ap_start_reg;
    output_r <= grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_result_out;

    output_r_ap_vld_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_r_ap_vld <= ap_const_logic_1;
        else 
            output_r_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    taps_address0 <= grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_taps_address0;
    taps_ce0 <= grp_fir_Pipeline_VITIS_LOOP_14_2_fu_70_taps_ce0;
end behav;
