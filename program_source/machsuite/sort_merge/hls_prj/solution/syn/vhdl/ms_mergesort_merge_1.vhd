-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ms_mergesort_merge_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    a_ce0 : OUT STD_LOGIC;
    a_we0 : OUT STD_LOGIC;
    a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    start_r : IN STD_LOGIC_VECTOR (31 downto 0);
    m : IN STD_LOGIC_VECTOR (31 downto 0);
    stop : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ms_mergesort_merge_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv33_1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal add_ln7_fu_92_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln7_reg_144 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln12_fu_99_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln12_reg_149 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal j_fu_107_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_159 : STD_LOGIC_VECTOR (31 downto 0);
    signal add9_fu_118_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add9_reg_164 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln12_fu_125_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln12_reg_169 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal temp_ce0 : STD_LOGIC;
    signal temp_we0 : STD_LOGIC;
    signal temp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_ce1 : STD_LOGIC;
    signal temp_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_merge_1_Pipeline_merge_label1_fu_56_ap_start : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label1_fu_56_ap_done : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label1_fu_56_ap_idle : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label1_fu_56_ap_ready : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label1_fu_56_a_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_merge_1_Pipeline_merge_label1_fu_56_a_ce0 : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label1_fu_56_temp_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_merge_1_Pipeline_merge_label1_fu_56_temp_ce0 : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label1_fu_56_temp_we0 : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label1_fu_56_temp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_merge_1_Pipeline_merge_label2_fu_67_ap_start : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label2_fu_67_ap_done : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label2_fu_67_ap_idle : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label2_fu_67_ap_ready : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label2_fu_67_a_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_merge_1_Pipeline_merge_label2_fu_67_a_ce0 : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label2_fu_67_temp_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_merge_1_Pipeline_merge_label2_fu_67_temp_ce0 : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label2_fu_67_temp_we0 : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label2_fu_67_temp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_merge_1_Pipeline_merge_label3_fu_77_ap_start : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label3_fu_77_ap_done : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label3_fu_77_ap_idle : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label3_fu_77_ap_ready : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label3_fu_77_temp_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_merge_1_Pipeline_merge_label3_fu_77_temp_ce0 : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label3_fu_77_temp_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_merge_1_Pipeline_merge_label3_fu_77_temp_ce1 : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label3_fu_77_a_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_merge_1_Pipeline_merge_label3_fu_77_a_ce0 : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label3_fu_77_a_we0 : STD_LOGIC;
    signal grp_merge_1_Pipeline_merge_label3_fu_77_a_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_merge_1_Pipeline_merge_label1_fu_56_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_merge_1_Pipeline_merge_label2_fu_67_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_merge_1_Pipeline_merge_label3_fu_77_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm_state5 : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal sext_ln7_fu_88_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln7_fu_88_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln12_fu_99_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_fu_107_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln5_fu_113_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_fu_103_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component ms_mergesort_merge_1_Pipeline_merge_label1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_r : IN STD_LOGIC_VECTOR (31 downto 0);
        add_ln7 : IN STD_LOGIC_VECTOR (32 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        temp_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        temp_ce0 : OUT STD_LOGIC;
        temp_we0 : OUT STD_LOGIC;
        temp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ms_mergesort_merge_1_Pipeline_merge_label2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln12 : IN STD_LOGIC_VECTOR (31 downto 0);
        sext_ln12_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        add9 : IN STD_LOGIC_VECTOR (10 downto 0);
        temp_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        temp_ce0 : OUT STD_LOGIC;
        temp_we0 : OUT STD_LOGIC;
        temp_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ms_mergesort_merge_1_Pipeline_merge_label3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sext_ln7 : IN STD_LOGIC_VECTOR (31 downto 0);
        stop : IN STD_LOGIC_VECTOR (31 downto 0);
        start_r : IN STD_LOGIC_VECTOR (31 downto 0);
        sext_ln12_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        temp_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        temp_ce0 : OUT STD_LOGIC;
        temp_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        temp_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        temp_ce1 : OUT STD_LOGIC;
        temp_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_we0 : OUT STD_LOGIC;
        a_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ms_mergesort_merge_1_temp_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    temp_U : component ms_mergesort_merge_1_temp_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_address0,
        ce0 => temp_ce0,
        we0 => temp_we0,
        d0 => temp_d0,
        q0 => temp_q0,
        address1 => grp_merge_1_Pipeline_merge_label3_fu_77_temp_address1,
        ce1 => temp_ce1,
        q1 => temp_q1);

    grp_merge_1_Pipeline_merge_label1_fu_56 : component ms_mergesort_merge_1_Pipeline_merge_label1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_merge_1_Pipeline_merge_label1_fu_56_ap_start,
        ap_done => grp_merge_1_Pipeline_merge_label1_fu_56_ap_done,
        ap_idle => grp_merge_1_Pipeline_merge_label1_fu_56_ap_idle,
        ap_ready => grp_merge_1_Pipeline_merge_label1_fu_56_ap_ready,
        start_r => start_r,
        add_ln7 => add_ln7_reg_144,
        a_address0 => grp_merge_1_Pipeline_merge_label1_fu_56_a_address0,
        a_ce0 => grp_merge_1_Pipeline_merge_label1_fu_56_a_ce0,
        a_q0 => a_q0,
        temp_address0 => grp_merge_1_Pipeline_merge_label1_fu_56_temp_address0,
        temp_ce0 => grp_merge_1_Pipeline_merge_label1_fu_56_temp_ce0,
        temp_we0 => grp_merge_1_Pipeline_merge_label1_fu_56_temp_we0,
        temp_d0 => grp_merge_1_Pipeline_merge_label1_fu_56_temp_d0);

    grp_merge_1_Pipeline_merge_label2_fu_67 : component ms_mergesort_merge_1_Pipeline_merge_label2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_merge_1_Pipeline_merge_label2_fu_67_ap_start,
        ap_done => grp_merge_1_Pipeline_merge_label2_fu_67_ap_done,
        ap_idle => grp_merge_1_Pipeline_merge_label2_fu_67_ap_idle,
        ap_ready => grp_merge_1_Pipeline_merge_label2_fu_67_ap_ready,
        sext_ln12 => j_reg_159,
        sext_ln12_1 => add_ln12_reg_169,
        a_address0 => grp_merge_1_Pipeline_merge_label2_fu_67_a_address0,
        a_ce0 => grp_merge_1_Pipeline_merge_label2_fu_67_a_ce0,
        a_q0 => a_q0,
        add9 => add9_reg_164,
        temp_address0 => grp_merge_1_Pipeline_merge_label2_fu_67_temp_address0,
        temp_ce0 => grp_merge_1_Pipeline_merge_label2_fu_67_temp_ce0,
        temp_we0 => grp_merge_1_Pipeline_merge_label2_fu_67_temp_we0,
        temp_d0 => grp_merge_1_Pipeline_merge_label2_fu_67_temp_d0);

    grp_merge_1_Pipeline_merge_label3_fu_77 : component ms_mergesort_merge_1_Pipeline_merge_label3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_merge_1_Pipeline_merge_label3_fu_77_ap_start,
        ap_done => grp_merge_1_Pipeline_merge_label3_fu_77_ap_done,
        ap_idle => grp_merge_1_Pipeline_merge_label3_fu_77_ap_idle,
        ap_ready => grp_merge_1_Pipeline_merge_label3_fu_77_ap_ready,
        sext_ln7 => start_r,
        stop => stop,
        start_r => start_r,
        sext_ln12_1 => add_ln12_reg_169,
        temp_address0 => grp_merge_1_Pipeline_merge_label3_fu_77_temp_address0,
        temp_ce0 => grp_merge_1_Pipeline_merge_label3_fu_77_temp_ce0,
        temp_q0 => temp_q0,
        temp_address1 => grp_merge_1_Pipeline_merge_label3_fu_77_temp_address1,
        temp_ce1 => grp_merge_1_Pipeline_merge_label3_fu_77_temp_ce1,
        temp_q1 => temp_q1,
        a_address0 => grp_merge_1_Pipeline_merge_label3_fu_77_a_address0,
        a_ce0 => grp_merge_1_Pipeline_merge_label3_fu_77_a_ce0,
        a_we0 => grp_merge_1_Pipeline_merge_label3_fu_77_a_we0,
        a_d0 => grp_merge_1_Pipeline_merge_label3_fu_77_a_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_merge_1_Pipeline_merge_label1_fu_56_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_merge_1_Pipeline_merge_label1_fu_56_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_merge_1_Pipeline_merge_label1_fu_56_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_merge_1_Pipeline_merge_label1_fu_56_ap_ready = ap_const_logic_1)) then 
                    grp_merge_1_Pipeline_merge_label1_fu_56_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_merge_1_Pipeline_merge_label2_fu_67_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_merge_1_Pipeline_merge_label2_fu_67_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_merge_1_Pipeline_merge_label2_fu_67_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_merge_1_Pipeline_merge_label2_fu_67_ap_ready = ap_const_logic_1)) then 
                    grp_merge_1_Pipeline_merge_label2_fu_67_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_merge_1_Pipeline_merge_label3_fu_77_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_merge_1_Pipeline_merge_label3_fu_77_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state5) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_merge_1_Pipeline_merge_label3_fu_77_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_merge_1_Pipeline_merge_label3_fu_77_ap_ready = ap_const_logic_1)) then 
                    grp_merge_1_Pipeline_merge_label3_fu_77_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add9_reg_164 <= add9_fu_118_p2;
                add_ln12_reg_169 <= add_ln12_fu_125_p2;
                j_reg_159 <= j_fu_107_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                add_ln7_reg_144 <= add_ln7_fu_92_p2;
                trunc_ln12_reg_149 <= trunc_ln12_fu_99_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_merge_1_Pipeline_merge_label1_fu_56_ap_done, grp_merge_1_Pipeline_merge_label2_fu_67_ap_done, grp_merge_1_Pipeline_merge_label3_fu_77_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_merge_1_Pipeline_merge_label1_fu_56_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_merge_1_Pipeline_merge_label2_fu_67_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_merge_1_Pipeline_merge_label3_fu_77_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    a_address0_assign_proc : process(grp_merge_1_Pipeline_merge_label1_fu_56_a_address0, grp_merge_1_Pipeline_merge_label2_fu_67_a_address0, grp_merge_1_Pipeline_merge_label3_fu_77_a_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            a_address0 <= grp_merge_1_Pipeline_merge_label3_fu_77_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_address0 <= grp_merge_1_Pipeline_merge_label2_fu_67_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_address0 <= grp_merge_1_Pipeline_merge_label1_fu_56_a_address0;
        else 
            a_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    a_ce0_assign_proc : process(grp_merge_1_Pipeline_merge_label1_fu_56_a_ce0, grp_merge_1_Pipeline_merge_label2_fu_67_a_ce0, grp_merge_1_Pipeline_merge_label3_fu_77_a_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            a_ce0 <= grp_merge_1_Pipeline_merge_label3_fu_77_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_ce0 <= grp_merge_1_Pipeline_merge_label2_fu_67_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            a_ce0 <= grp_merge_1_Pipeline_merge_label1_fu_56_a_ce0;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    a_d0 <= grp_merge_1_Pipeline_merge_label3_fu_77_a_d0;

    a_we0_assign_proc : process(grp_merge_1_Pipeline_merge_label3_fu_77_a_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            a_we0 <= grp_merge_1_Pipeline_merge_label3_fu_77_a_we0;
        else 
            a_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add9_fu_118_p2 <= std_logic_vector(unsigned(add_ln5_fu_113_p2) + unsigned(empty_fu_103_p1));
    add_ln12_fu_125_p2 <= std_logic_vector(unsigned(stop) + unsigned(ap_const_lv32_1));
    add_ln5_fu_113_p2 <= std_logic_vector(unsigned(trunc_ln12_reg_149) + unsigned(ap_const_lv11_1));
    add_ln7_fu_92_p2 <= std_logic_vector(signed(sext_ln7_fu_88_p1) + signed(ap_const_lv33_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_NS_fsm_state5 <= ap_NS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_merge_1_Pipeline_merge_label1_fu_56_ap_done)
    begin
        if ((grp_merge_1_Pipeline_merge_label1_fu_56_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_merge_1_Pipeline_merge_label2_fu_67_ap_done)
    begin
        if ((grp_merge_1_Pipeline_merge_label2_fu_67_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_merge_1_Pipeline_merge_label3_fu_77_ap_done)
    begin
        if ((grp_merge_1_Pipeline_merge_label3_fu_77_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_merge_1_Pipeline_merge_label3_fu_77_ap_done, ap_CS_fsm_state6)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_merge_1_Pipeline_merge_label3_fu_77_ap_done = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_merge_1_Pipeline_merge_label3_fu_77_ap_done, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_merge_1_Pipeline_merge_label3_fu_77_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_103_p1 <= stop(11 - 1 downto 0);
    grp_merge_1_Pipeline_merge_label1_fu_56_ap_start <= grp_merge_1_Pipeline_merge_label1_fu_56_ap_start_reg;
    grp_merge_1_Pipeline_merge_label2_fu_67_ap_start <= grp_merge_1_Pipeline_merge_label2_fu_67_ap_start_reg;
    grp_merge_1_Pipeline_merge_label3_fu_77_ap_start <= grp_merge_1_Pipeline_merge_label3_fu_77_ap_start_reg;
    j_fu_107_p0 <= m;
    j_fu_107_p2 <= std_logic_vector(signed(j_fu_107_p0) + signed(ap_const_lv32_1));
    sext_ln7_fu_88_p0 <= m;
        sext_ln7_fu_88_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln7_fu_88_p0),33));


    temp_address0_assign_proc : process(grp_merge_1_Pipeline_merge_label1_fu_56_temp_address0, grp_merge_1_Pipeline_merge_label2_fu_67_temp_address0, grp_merge_1_Pipeline_merge_label3_fu_77_temp_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            temp_address0 <= grp_merge_1_Pipeline_merge_label3_fu_77_temp_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            temp_address0 <= grp_merge_1_Pipeline_merge_label2_fu_67_temp_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            temp_address0 <= grp_merge_1_Pipeline_merge_label1_fu_56_temp_address0;
        else 
            temp_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    temp_ce0_assign_proc : process(grp_merge_1_Pipeline_merge_label1_fu_56_temp_ce0, grp_merge_1_Pipeline_merge_label2_fu_67_temp_ce0, grp_merge_1_Pipeline_merge_label3_fu_77_temp_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            temp_ce0 <= grp_merge_1_Pipeline_merge_label3_fu_77_temp_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            temp_ce0 <= grp_merge_1_Pipeline_merge_label2_fu_67_temp_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            temp_ce0 <= grp_merge_1_Pipeline_merge_label1_fu_56_temp_ce0;
        else 
            temp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_ce1_assign_proc : process(grp_merge_1_Pipeline_merge_label3_fu_77_temp_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            temp_ce1 <= grp_merge_1_Pipeline_merge_label3_fu_77_temp_ce1;
        else 
            temp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temp_d0_assign_proc : process(grp_merge_1_Pipeline_merge_label1_fu_56_temp_d0, grp_merge_1_Pipeline_merge_label2_fu_67_temp_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            temp_d0 <= grp_merge_1_Pipeline_merge_label2_fu_67_temp_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            temp_d0 <= grp_merge_1_Pipeline_merge_label1_fu_56_temp_d0;
        else 
            temp_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    temp_we0_assign_proc : process(grp_merge_1_Pipeline_merge_label1_fu_56_temp_we0, grp_merge_1_Pipeline_merge_label2_fu_67_temp_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            temp_we0 <= grp_merge_1_Pipeline_merge_label2_fu_67_temp_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            temp_we0 <= grp_merge_1_Pipeline_merge_label1_fu_56_temp_we0;
        else 
            temp_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln12_fu_99_p0 <= m;
    trunc_ln12_fu_99_p1 <= trunc_ln12_fu_99_p0(11 - 1 downto 0);
end behav;
