-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity latnrm_latnrm_Pipeline_VITIS_LOOP_24_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    empty_24 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_25 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_26 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_27 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_28 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_29 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_30 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_31 : IN STD_LOGIC_VECTOR (31 downto 0);
    int_state_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    int_state_V_ce0 : OUT STD_LOGIC;
    int_state_V_we0 : OUT STD_LOGIC;
    int_state_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    int_state_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    int_state_V_ce1 : OUT STD_LOGIC;
    int_state_V_we1 : OUT STD_LOGIC;
    int_state_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    empty_32 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_33 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_34 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_35 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_36 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_37 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_38 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_39 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_40 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_41 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_42 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_43 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_44 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_45 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_46 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_47 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_48 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_49 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_50 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_51 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_52 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_53 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_54 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_55 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of latnrm_latnrm_Pipeline_VITIS_LOOP_24_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv12_C02 : STD_LOGIC_VECTOR (11 downto 0) := "110000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv12_11 : STD_LOGIC_VECTOR (11 downto 0) := "000000010001";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln24_1_reg_3057 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_3042 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal j_reg_3034 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_reg_3034_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln24_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_3042_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal d_assign_1_fu_435_p35 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_1_reg_3046 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln24_fu_508_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln24_reg_3052 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln24_reg_3052_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln24_1_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_1_reg_3057_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal d_assign_3_fu_520_p31 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_3_reg_3061 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_6_fu_585_p31 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_6_reg_3067 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_6_reg_3067_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_8_fu_649_p31 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_8_reg_3073 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_8_reg_3073_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal neg_src_95_fu_721_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_95_reg_3079 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal man_V_15_fu_765_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_15_reg_3085 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln560_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln560_reg_3091 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_779_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_3097 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln570_1_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_1_reg_3103 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_803_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_3108 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln572_fu_811_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln572_reg_3114 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_302_reg_3120 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln570_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_reg_3125 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_reg_3130 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_fu_863_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos1_reg_3135 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_307_reg_3141 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_fu_881_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_reg_3146 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_fu_897_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_reg_3151 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_13_fu_941_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_13_reg_3157 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln560_1_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln560_1_reg_3163 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_1_fu_955_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_reg_3169 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln570_2_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_2_reg_3175 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_fu_979_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_3180 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln572_1_fu_987_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln572_1_reg_3186 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_310_reg_3192 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln570_3_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_3_reg_3197 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_1_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_1_reg_3202 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_1_fu_1039_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos1_1_reg_3207 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_315_reg_3213 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_3_fu_1057_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_3_reg_3218 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_199_fu_1187_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_199_reg_3223 : STD_LOGIC_VECTOR (31 downto 0);
    signal overflow_fu_1402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_reg_3228 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_fu_1425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_reg_3233 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_201_fu_1543_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_201_reg_3238 : STD_LOGIC_VECTOR (31 downto 0);
    signal overflow_93_fu_1758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_93_reg_3243 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_1_fu_1781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_1_reg_3248 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_93_fu_1795_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_93_reg_3253 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_fu_1839_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_reg_3259 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln560_2_fu_1847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln560_2_reg_3265 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_2_fu_1853_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_reg_3271 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln570_4_fu_1859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_4_reg_3277 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_2_fu_1877_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_2_reg_3282 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln572_2_fu_1885_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln572_2_reg_3288 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_318_reg_3294 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln570_5_fu_1909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_5_reg_3299 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_2_fu_1931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_2_reg_3304 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_2_fu_1937_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos1_2_reg_3309 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_323_reg_3315 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_5_fu_1955_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_5_reg_3320 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_94_fu_1971_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_94_reg_3325 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_14_fu_2015_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_14_reg_3331 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln560_3_fu_2023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln560_3_reg_3337 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_3_fu_2029_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_3_reg_3343 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln570_6_fu_2035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_6_reg_3349 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_3_fu_2053_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_3_reg_3354 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln572_3_fu_2061_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln572_3_reg_3360 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_326_reg_3366 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln570_7_fu_2085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_7_reg_3371 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_3_fu_2107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_3_reg_3376 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_3_fu_2113_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos1_3_reg_3381 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_331_reg_3387 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_7_fu_2131_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_7_reg_3392 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_203_fu_2333_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_203_reg_3397 : STD_LOGIC_VECTOR (31 downto 0);
    signal overflow_94_fu_2548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_94_reg_3402 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_2_fu_2571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_2_reg_3407 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_205_fu_2689_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_205_reg_3412 : STD_LOGIC_VECTOR (31 downto 0);
    signal overflow_95_fu_2904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_95_reg_3417 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_3_fu_2927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_3_reg_3422 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_condition_exit_pp0_iter1_stage1 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal trunc_ln26_cast_fu_2139_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln24_fu_2180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln26_fu_2938_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln26_1_fu_2985_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_1_fu_172 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln24_fu_1065_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln560_fu_2172_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln560_1_fu_2213_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln560_2_fu_2972_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln560_3_fu_3019_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_415_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_418_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_415_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_3_fu_713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_729_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln554_fu_743_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_231_fu_747_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln558_fu_755_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_4_fu_759_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln544_fu_717_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_fu_739_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln570_fu_791_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln570_fu_797_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_304_fu_825_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln601_fu_841_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_305_fu_847_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln607_fu_869_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_fu_889_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_1_fu_905_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln554_1_fu_919_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_s_fu_923_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln558_1_fu_931_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_7_fu_935_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln544_1_fu_893_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_1_fu_915_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln570_1_fu_967_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln570_1_fu_973_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_312_fu_1001_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln601_1_fu_1017_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_313_fu_1023_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln607_1_fu_1045_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln570_fu_1075_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln575_fu_1093_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln575_fu_1097_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln724_fu_1106_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_303_fu_1109_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln570_fu_1143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln574_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_fu_1148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln575_fu_1102_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_fu_1130_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln574_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_2_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln577_fu_1117_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_fu_1154_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln592_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln592_fu_1182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln593_fu_1125_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_2_fu_1174_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln610_2_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_fu_1195_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln624_fu_1240_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln624_fu_1244_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_2_fu_1248_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_fu_1253_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_308_fu_1265_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_2_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_1259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_3_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_4_fu_1279_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_19_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln630_fu_1299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln631_fu_1311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_18_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln610_fu_1208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_fu_1317_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln610_fu_1333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_fu_1228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_fu_1345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_2_fu_1351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln630_fu_1305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_fu_1339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_2_fu_1325_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_3_fu_1365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_232_fu_1200_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1357_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_fu_1385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln647_fu_1391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_2_fu_1397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_1371_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln648_fu_1408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_4_fu_1379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln648_fu_1414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_1420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln570_1_fu_1431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln575_1_fu_1449_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln575_1_fu_1453_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln724_2_fu_1462_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_311_fu_1465_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_1_fu_1434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_1_fu_1493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln570_1_fu_1499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln574_1_fu_1439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_3_fu_1504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln575_1_fu_1458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_1_fu_1486_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln574_1_fu_1518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_4_fu_1524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln577_1_fu_1473_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_3_fu_1510_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln592_1_fu_1444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln592_1_fu_1538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln593_1_fu_1481_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_4_fu_1530_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln610_4_fu_1574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_1_fu_1551_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln624_1_fu_1596_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln624_1_fu_1600_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_4_fu_1604_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_371_fu_1609_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_316_fu_1621_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_4_fu_1590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_5_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_6_fu_1629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_7_fu_1635_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_13_fu_1579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln630_1_fu_1655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_4_fu_1649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln631_1_fu_1667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_12_fu_1569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln610_3_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_3_fu_1673_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln610_2_fu_1689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_3_fu_1584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_3_fu_1701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_4_fu_1707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln630_1_fu_1661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_5_fu_1695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_4_fu_1681_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_5_fu_1643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_6_fu_1721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_226_fu_1556_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_1713_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_3_fu_1741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln647_1_fu_1747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_4_fu_1753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_1_fu_1727_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln648_3_fu_1764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_7_fu_1735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln648_1_fu_1770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_93_fu_1776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ireg_1_fu_1787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_2_fu_1803_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln554_2_fu_1817_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_227_fu_1821_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln558_2_fu_1829_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_8_fu_1833_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln544_2_fu_1791_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_2_fu_1813_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln570_2_fu_1865_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln570_2_fu_1871_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_320_fu_1899_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln601_2_fu_1915_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_321_fu_1921_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln607_2_fu_1943_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_2_fu_1963_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_3_fu_1979_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln554_3_fu_1993_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_229_fu_1997_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln558_3_fu_2005_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_11_fu_2009_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln544_3_fu_1967_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_3_fu_1989_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln570_3_fu_2041_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln570_3_fu_2047_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_328_fu_2075_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln601_3_fu_2091_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_329_fu_2097_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln607_3_fu_2119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln560_fu_2150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_fu_2155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_2_fu_2160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_1_fu_2143_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln302_fu_2165_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln560_1_fu_2191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_3_fu_2196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_4_fu_2201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_5_fu_2184_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln302_1_fu_2206_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln570_2_fu_2221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln575_2_fu_2239_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln575_2_fu_2243_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln724_4_fu_2252_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_319_fu_2255_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_2_fu_2224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_2_fu_2283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln570_2_fu_2289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln574_2_fu_2229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_5_fu_2294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln575_2_fu_2248_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_2_fu_2276_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln574_2_fu_2308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_6_fu_2314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln577_2_fu_2263_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_5_fu_2300_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln592_2_fu_2234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln592_2_fu_2328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln593_2_fu_2271_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_6_fu_2320_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln610_6_fu_2364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_2_fu_2341_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln624_2_fu_2386_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln624_2_fu_2390_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_6_fu_2394_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_372_fu_2399_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_324_fu_2411_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_6_fu_2380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_8_fu_2405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_9_fu_2419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_10_fu_2425_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_15_fu_2369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln630_2_fu_2445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_6_fu_2439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln631_2_fu_2457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_14_fu_2359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln610_5_fu_2354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_5_fu_2463_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln610_4_fu_2479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_5_fu_2374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_5_fu_2491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_6_fu_2497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln630_2_fu_2451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_8_fu_2485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_6_fu_2471_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_8_fu_2433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_9_fu_2511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_228_fu_2346_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_2503_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_5_fu_2531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln647_2_fu_2537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_6_fu_2543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_2_fu_2517_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln648_5_fu_2554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_10_fu_2525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln648_2_fu_2560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_94_fu_2566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln570_3_fu_2577_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln575_3_fu_2595_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln575_3_fu_2599_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln724_6_fu_2608_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_327_fu_2611_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_3_fu_2580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_3_fu_2639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln570_3_fu_2645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln574_3_fu_2585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_7_fu_2650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln575_3_fu_2604_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_3_fu_2632_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln574_3_fu_2664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_8_fu_2670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln577_3_fu_2619_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_7_fu_2656_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln592_3_fu_2590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln592_3_fu_2684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln593_3_fu_2627_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_8_fu_2676_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln610_8_fu_2720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_3_fu_2697_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln624_3_fu_2742_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln624_3_fu_2746_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_8_fu_2750_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_373_fu_2755_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_332_fu_2767_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_8_fu_2736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_11_fu_2761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_12_fu_2775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_13_fu_2781_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_17_fu_2725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln630_3_fu_2801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_8_fu_2795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln631_3_fu_2813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_16_fu_2715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln610_7_fu_2710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_7_fu_2819_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln610_6_fu_2835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_7_fu_2730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_7_fu_2847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_8_fu_2853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln630_3_fu_2807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_11_fu_2841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_8_fu_2827_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_11_fu_2789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_12_fu_2867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_230_fu_2702_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_3_fu_2859_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_7_fu_2887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln647_3_fu_2893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_8_fu_2899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_3_fu_2873_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln648_7_fu_2910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_13_fu_2881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln648_3_fu_2916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_95_fu_2922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln24_1_fu_2933_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln560_2_fu_2950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_5_fu_2955_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_6_fu_2960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_12_fu_2943_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln302_2_fu_2965_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln24_2_fu_2980_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln560_3_fu_2997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_7_fu_3002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_8_fu_3007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_14_fu_2990_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln302_3_fu_3012_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component latnrm_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component latnrm_mux_336_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component latnrm_mux_296_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component latnrm_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fpext_32ns_64_2_no_dsp_1_U74 : component latnrm_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_415_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_415_p1);

    fpext_32ns_64_2_no_dsp_1_U75 : component latnrm_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_418_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_418_p1);

    mux_336_32_1_1_U76 : component latnrm_mux_336_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => empty_48,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => empty_49,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => empty_50,
        din9 => ap_const_lv32_0,
        din10 => ap_const_lv32_0,
        din11 => ap_const_lv32_0,
        din12 => empty_51,
        din13 => ap_const_lv32_0,
        din14 => ap_const_lv32_0,
        din15 => ap_const_lv32_0,
        din16 => empty_52,
        din17 => ap_const_lv32_0,
        din18 => ap_const_lv32_0,
        din19 => ap_const_lv32_0,
        din20 => empty_53,
        din21 => ap_const_lv32_0,
        din22 => ap_const_lv32_0,
        din23 => ap_const_lv32_0,
        din24 => empty_54,
        din25 => ap_const_lv32_0,
        din26 => ap_const_lv32_0,
        din27 => ap_const_lv32_0,
        din28 => empty_55,
        din29 => ap_const_lv32_0,
        din30 => ap_const_lv32_0,
        din31 => ap_const_lv32_0,
        din32 => empty,
        din33 => ap_sig_allocacmp_j,
        dout => d_assign_1_fu_435_p35);

    mux_296_32_1_1_U77 : component latnrm_mux_296_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => empty_24,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => empty_25,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => empty_26,
        din9 => ap_const_lv32_0,
        din10 => ap_const_lv32_0,
        din11 => ap_const_lv32_0,
        din12 => empty_27,
        din13 => ap_const_lv32_0,
        din14 => ap_const_lv32_0,
        din15 => ap_const_lv32_0,
        din16 => empty_28,
        din17 => ap_const_lv32_0,
        din18 => ap_const_lv32_0,
        din19 => ap_const_lv32_0,
        din20 => empty_29,
        din21 => ap_const_lv32_0,
        din22 => ap_const_lv32_0,
        din23 => ap_const_lv32_0,
        din24 => empty_30,
        din25 => ap_const_lv32_0,
        din26 => ap_const_lv32_0,
        din27 => ap_const_lv32_0,
        din28 => empty_31,
        din29 => ap_sig_allocacmp_j,
        dout => d_assign_3_fu_520_p31);

    mux_296_32_1_1_U78 : component latnrm_mux_296_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => empty_32,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => empty_33,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => empty_34,
        din9 => ap_const_lv32_0,
        din10 => ap_const_lv32_0,
        din11 => ap_const_lv32_0,
        din12 => empty_35,
        din13 => ap_const_lv32_0,
        din14 => ap_const_lv32_0,
        din15 => ap_const_lv32_0,
        din16 => empty_36,
        din17 => ap_const_lv32_0,
        din18 => ap_const_lv32_0,
        din19 => ap_const_lv32_0,
        din20 => empty_37,
        din21 => ap_const_lv32_0,
        din22 => ap_const_lv32_0,
        din23 => ap_const_lv32_0,
        din24 => empty_38,
        din25 => ap_const_lv32_0,
        din26 => ap_const_lv32_0,
        din27 => ap_const_lv32_0,
        din28 => empty_39,
        din29 => ap_sig_allocacmp_j,
        dout => d_assign_6_fu_585_p31);

    mux_296_32_1_1_U79 : component latnrm_mux_296_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => empty_40,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => empty_41,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => empty_42,
        din9 => ap_const_lv32_0,
        din10 => ap_const_lv32_0,
        din11 => ap_const_lv32_0,
        din12 => empty_43,
        din13 => ap_const_lv32_0,
        din14 => ap_const_lv32_0,
        din15 => ap_const_lv32_0,
        din16 => empty_44,
        din17 => ap_const_lv32_0,
        din18 => ap_const_lv32_0,
        din19 => ap_const_lv32_0,
        din20 => empty_45,
        din21 => ap_const_lv32_0,
        din22 => ap_const_lv32_0,
        din23 => ap_const_lv32_0,
        din24 => empty_46,
        din25 => ap_const_lv32_0,
        din26 => ap_const_lv32_0,
        din27 => ap_const_lv32_0,
        din28 => empty_47,
        din29 => ap_sig_allocacmp_j,
        dout => d_assign_8_fu_649_p31);

    flow_control_loop_pipe_sequential_init_U : component latnrm_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage1) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    j_1_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_1_fu_172 <= ap_const_lv6_0;
            elsif (((icmp_ln24_reg_3042 = ap_const_lv1_1) and (icmp_ln24_1_reg_3057 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                j_1_fu_172 <= add_ln24_fu_1065_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_reg_3042 = ap_const_lv1_1) and (icmp_ln24_1_reg_3057 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                F2_1_reg_3169 <= F2_1_fu_955_p2;
                icmp_ln560_1_reg_3163 <= icmp_ln560_1_fu_949_p2;
                icmp_ln570_2_reg_3175 <= icmp_ln570_2_fu_961_p2;
                icmp_ln570_3_reg_3197 <= icmp_ln570_3_fu_1011_p2;
                icmp_ln600_1_reg_3202 <= icmp_ln600_1_fu_1033_p2;
                lD_3_reg_3218 <= lD_3_fu_1057_p3;
                man_V_13_reg_3157 <= man_V_13_fu_941_p3;
                neg_src_reg_3151 <= ireg_fu_889_p1(63 downto 63);
                pos1_1_reg_3207 <= pos1_1_fu_1039_p2;
                sh_amt_1_reg_3180 <= sh_amt_1_fu_979_p3;
                tmp_310_reg_3192 <= sh_amt_1_fu_979_p3(11 downto 5);
                tmp_315_reg_3213 <= pos1_1_fu_1039_p2(11 downto 11);
                trunc_ln572_1_reg_3186 <= trunc_ln572_1_fu_987_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_reg_3042 = ap_const_lv1_1) and (icmp_ln24_1_reg_3057 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                F2_2_reg_3271 <= F2_2_fu_1853_p2;
                F2_3_reg_3343 <= F2_3_fu_2029_p2;
                icmp_ln560_2_reg_3265 <= icmp_ln560_2_fu_1847_p2;
                icmp_ln560_3_reg_3337 <= icmp_ln560_3_fu_2023_p2;
                icmp_ln570_4_reg_3277 <= icmp_ln570_4_fu_1859_p2;
                icmp_ln570_5_reg_3299 <= icmp_ln570_5_fu_1909_p2;
                icmp_ln570_6_reg_3349 <= icmp_ln570_6_fu_2035_p2;
                icmp_ln570_7_reg_3371 <= icmp_ln570_7_fu_2085_p2;
                icmp_ln600_2_reg_3304 <= icmp_ln600_2_fu_1931_p2;
                icmp_ln600_3_reg_3376 <= icmp_ln600_3_fu_2107_p2;
                lD_5_reg_3320 <= lD_5_fu_1955_p3;
                lD_7_reg_3392 <= lD_7_fu_2131_p3;
                man_V_14_reg_3331 <= man_V_14_fu_2015_p3;
                man_V_reg_3259 <= man_V_fu_1839_p3;
                neg_src_93_reg_3253 <= ireg_1_fu_1787_p1(63 downto 63);
                neg_src_94_reg_3325 <= ireg_2_fu_1963_p1(63 downto 63);
                pos1_2_reg_3309 <= pos1_2_fu_1937_p2;
                pos1_3_reg_3381 <= pos1_3_fu_2113_p2;
                sh_amt_2_reg_3282 <= sh_amt_2_fu_1877_p3;
                sh_amt_3_reg_3354 <= sh_amt_3_fu_2053_p3;
                tmp_318_reg_3294 <= sh_amt_2_fu_1877_p3(11 downto 5);
                tmp_323_reg_3315 <= pos1_2_fu_1937_p2(11 downto 11);
                tmp_326_reg_3366 <= sh_amt_3_fu_2053_p3(11 downto 5);
                tmp_331_reg_3387 <= pos1_3_fu_2113_p2(11 downto 11);
                trunc_ln572_2_reg_3288 <= trunc_ln572_2_fu_1885_p1;
                trunc_ln572_3_reg_3360 <= trunc_ln572_3_fu_2061_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_reg_3042 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                F2_reg_3097 <= F2_fu_779_p2;
                icmp_ln560_reg_3091 <= icmp_ln560_fu_773_p2;
                icmp_ln570_1_reg_3103 <= icmp_ln570_1_fu_785_p2;
                icmp_ln570_reg_3125 <= icmp_ln570_fu_835_p2;
                icmp_ln600_reg_3130 <= icmp_ln600_fu_857_p2;
                lD_reg_3146 <= lD_fu_881_p3;
                man_V_15_reg_3085 <= man_V_15_fu_765_p3;
                neg_src_95_reg_3079 <= ireg_3_fu_713_p1(63 downto 63);
                pos1_reg_3135 <= pos1_fu_863_p2;
                sh_amt_reg_3108 <= sh_amt_fu_803_p3;
                tmp_302_reg_3120 <= sh_amt_fu_803_p3(11 downto 5);
                tmp_307_reg_3141 <= pos1_fu_863_p2(11 downto 11);
                trunc_ln572_reg_3114 <= trunc_ln572_fu_811_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln24_fu_429_p2 = ap_const_lv1_1))) then
                d_assign_1_reg_3046 <= d_assign_1_fu_435_p35;
                icmp_ln24_1_reg_3057 <= icmp_ln24_1_fu_514_p2;
                    or_ln24_reg_3052(5 downto 1) <= or_ln24_fu_508_p2(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln24_1_fu_514_p2 = ap_const_lv1_1) and (icmp_ln24_fu_429_p2 = ap_const_lv1_1))) then
                d_assign_3_reg_3061 <= d_assign_3_fu_520_p31;
                d_assign_6_reg_3067 <= d_assign_6_fu_585_p31;
                d_assign_8_reg_3073 <= d_assign_8_fu_649_p31;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                d_assign_6_reg_3067_pp0_iter1_reg <= d_assign_6_reg_3067;
                d_assign_8_reg_3073_pp0_iter1_reg <= d_assign_8_reg_3073;
                icmp_ln24_1_reg_3057_pp0_iter1_reg <= icmp_ln24_1_reg_3057;
                icmp_ln24_reg_3042 <= icmp_ln24_fu_429_p2;
                icmp_ln24_reg_3042_pp0_iter1_reg <= icmp_ln24_reg_3042;
                j_reg_3034 <= ap_sig_allocacmp_j;
                j_reg_3034_pp0_iter1_reg <= j_reg_3034;
                    or_ln24_reg_3052_pp0_iter1_reg(5 downto 1) <= or_ln24_reg_3052(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_reg_3042 = ap_const_lv1_1) and (icmp_ln24_1_reg_3057 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln560_1_reg_3163 = ap_const_lv1_0))) then
                or_ln302_1_reg_3248 <= or_ln302_1_fu_1781_p2;
                overflow_93_reg_3243 <= overflow_93_fu_1758_p2;
                p_Val2_201_reg_3238 <= p_Val2_201_fu_1543_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln560_2_reg_3265 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_1_reg_3057_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln24_reg_3042_pp0_iter1_reg = ap_const_lv1_1))) then
                or_ln302_2_reg_3407 <= or_ln302_2_fu_2571_p2;
                overflow_94_reg_3402 <= overflow_94_fu_2548_p2;
                p_Val2_203_reg_3397 <= p_Val2_203_fu_2333_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln560_3_reg_3337 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_1_reg_3057_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln24_reg_3042_pp0_iter1_reg = ap_const_lv1_1))) then
                or_ln302_3_reg_3422 <= or_ln302_3_fu_2927_p2;
                overflow_95_reg_3417 <= overflow_95_fu_2904_p2;
                p_Val2_205_reg_3412 <= p_Val2_205_fu_2689_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_reg_3042 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln560_reg_3091 = ap_const_lv1_0))) then
                or_ln302_reg_3233 <= or_ln302_fu_1425_p2;
                overflow_reg_3228 <= overflow_fu_1402_p2;
                p_Val2_199_reg_3223 <= p_Val2_199_fu_1187_p3;
            end if;
        end if;
    end process;
    or_ln24_reg_3052(0) <= '1';
    or_ln24_reg_3052_pp0_iter1_reg(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_done_pending_pp0, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    F2_1_fu_955_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_1_fu_915_p1));
    F2_2_fu_1853_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_2_fu_1813_p1));
    F2_3_fu_2029_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_3_fu_1989_p1));
    F2_fu_779_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_fu_739_p1));
    Range1_all_ones_11_fu_2789_p2 <= (Range2_all_ones_13_fu_2781_p3 and Range1_all_ones_17_fu_2725_p2);
    Range1_all_ones_12_fu_1569_p2 <= (tmp_315_reg_3213 xor ap_const_lv1_1);
    Range1_all_ones_13_fu_1579_p2 <= (lD_3_reg_3218 and icmp_ln610_4_fu_1574_p2);
    Range1_all_ones_14_fu_2359_p2 <= (tmp_323_reg_3315 xor ap_const_lv1_1);
    Range1_all_ones_15_fu_2369_p2 <= (lD_5_reg_3320 and icmp_ln610_6_fu_2364_p2);
    Range1_all_ones_16_fu_2715_p2 <= (tmp_331_reg_3387 xor ap_const_lv1_1);
    Range1_all_ones_17_fu_2725_p2 <= (lD_7_reg_3392 and icmp_ln610_8_fu_2720_p2);
    Range1_all_ones_18_fu_1213_p2 <= (tmp_307_reg_3141 xor ap_const_lv1_1);
    Range1_all_ones_19_fu_1223_p2 <= (lD_reg_3146 and icmp_ln610_2_fu_1218_p2);
    Range1_all_ones_5_fu_1643_p2 <= (Range2_all_ones_7_fu_1635_p3 and Range1_all_ones_13_fu_1579_p2);
    Range1_all_ones_8_fu_2433_p2 <= (Range2_all_ones_10_fu_2425_p3 and Range1_all_ones_15_fu_2369_p2);
    Range1_all_ones_fu_1287_p2 <= (Range2_all_ones_4_fu_1279_p3 and Range1_all_ones_19_fu_1223_p2);
    Range1_all_zeros_2_fu_1293_p2 <= (ap_const_lv1_1 xor Range1_all_ones_19_fu_1223_p2);
    Range1_all_zeros_4_fu_1649_p2 <= (ap_const_lv1_1 xor Range1_all_ones_13_fu_1579_p2);
    Range1_all_zeros_6_fu_2439_p2 <= (ap_const_lv1_1 xor Range1_all_ones_15_fu_2369_p2);
    Range1_all_zeros_8_fu_2795_p2 <= (ap_const_lv1_1 xor Range1_all_ones_17_fu_2725_p2);
    Range2_V_2_fu_1248_p2 <= std_logic_vector(shift_right(unsigned(man_V_15_reg_3085),to_integer(unsigned('0' & zext_ln624_fu_1244_p1(31-1 downto 0)))));
    Range2_V_4_fu_1604_p2 <= std_logic_vector(shift_right(unsigned(man_V_13_reg_3157),to_integer(unsigned('0' & zext_ln624_1_fu_1600_p1(31-1 downto 0)))));
    Range2_V_6_fu_2394_p2 <= std_logic_vector(shift_right(unsigned(man_V_reg_3259),to_integer(unsigned('0' & zext_ln624_2_fu_2390_p1(31-1 downto 0)))));
    Range2_V_8_fu_2750_p2 <= std_logic_vector(shift_right(unsigned(man_V_14_reg_3331),to_integer(unsigned('0' & zext_ln624_3_fu_2746_p1(31-1 downto 0)))));
    Range2_all_ones_10_fu_2425_p3 <= 
        Range2_all_ones_8_fu_2405_p2 when (icmp_ln620_6_fu_2380_p2(0) = '1') else 
        Range2_all_ones_9_fu_2419_p2;
    Range2_all_ones_11_fu_2761_p2 <= "1" when (Range2_V_8_fu_2750_p2 = r_V_373_fu_2755_p2) else "0";
    Range2_all_ones_12_fu_2775_p2 <= (tmp_332_fu_2767_p3 xor ap_const_lv1_1);
    Range2_all_ones_13_fu_2781_p3 <= 
        Range2_all_ones_11_fu_2761_p2 when (icmp_ln620_8_fu_2736_p2(0) = '1') else 
        Range2_all_ones_12_fu_2775_p2;
    Range2_all_ones_3_fu_1273_p2 <= (tmp_308_fu_1265_p3 xor ap_const_lv1_1);
    Range2_all_ones_4_fu_1279_p3 <= 
        Range2_all_ones_fu_1259_p2 when (icmp_ln620_2_fu_1234_p2(0) = '1') else 
        Range2_all_ones_3_fu_1273_p2;
    Range2_all_ones_5_fu_1615_p2 <= "1" when (Range2_V_4_fu_1604_p2 = r_V_371_fu_1609_p2) else "0";
    Range2_all_ones_6_fu_1629_p2 <= (tmp_316_fu_1621_p3 xor ap_const_lv1_1);
    Range2_all_ones_7_fu_1635_p3 <= 
        Range2_all_ones_5_fu_1615_p2 when (icmp_ln620_4_fu_1590_p2(0) = '1') else 
        Range2_all_ones_6_fu_1629_p2;
    Range2_all_ones_8_fu_2405_p2 <= "1" when (Range2_V_6_fu_2394_p2 = r_V_372_fu_2399_p2) else "0";
    Range2_all_ones_9_fu_2419_p2 <= (tmp_324_fu_2411_p3 xor ap_const_lv1_1);
    Range2_all_ones_fu_1259_p2 <= "1" when (Range2_V_2_fu_1248_p2 = r_V_fu_1253_p2) else "0";
    add_ln24_fu_1065_p2 <= std_logic_vector(unsigned(j_reg_3034) + unsigned(ap_const_lv6_4));
    add_ln570_1_fu_967_p2 <= std_logic_vector(unsigned(F2_1_fu_955_p2) + unsigned(ap_const_lv12_FF0));
    add_ln570_2_fu_1865_p2 <= std_logic_vector(unsigned(F2_2_fu_1853_p2) + unsigned(ap_const_lv12_FF0));
    add_ln570_3_fu_2041_p2 <= std_logic_vector(unsigned(F2_3_fu_2029_p2) + unsigned(ap_const_lv12_FF0));
    add_ln570_fu_791_p2 <= std_logic_vector(unsigned(F2_fu_779_p2) + unsigned(ap_const_lv12_FF0));
    add_ln601_1_fu_1017_p2 <= std_logic_vector(unsigned(zext_ln455_1_fu_915_p1) + unsigned(ap_const_lv12_C02));
    add_ln601_2_fu_1915_p2 <= std_logic_vector(unsigned(zext_ln455_2_fu_1813_p1) + unsigned(ap_const_lv12_C02));
    add_ln601_3_fu_2091_p2 <= std_logic_vector(unsigned(zext_ln455_3_fu_1989_p1) + unsigned(ap_const_lv12_C02));
    add_ln601_fu_841_p2 <= std_logic_vector(unsigned(zext_ln455_fu_739_p1) + unsigned(ap_const_lv12_C02));
    and_ln302_2_fu_2160_p2 <= (icmp_ln600_reg_3130 and and_ln302_fu_2155_p2);
    and_ln302_3_fu_2196_p2 <= (xor_ln560_1_fu_2191_p2 and or_ln302_1_reg_3248);
    and_ln302_4_fu_2201_p2 <= (icmp_ln600_1_reg_3202 and and_ln302_3_fu_2196_p2);
    and_ln302_5_fu_2955_p2 <= (xor_ln560_2_fu_2950_p2 and or_ln302_2_reg_3407);
    and_ln302_6_fu_2960_p2 <= (icmp_ln600_2_reg_3304 and and_ln302_5_fu_2955_p2);
    and_ln302_7_fu_3002_p2 <= (xor_ln560_3_fu_2997_p2 and or_ln302_3_reg_3422);
    and_ln302_8_fu_3007_p2 <= (icmp_ln600_3_reg_3376 and and_ln302_7_fu_3002_p2);
    and_ln302_fu_2155_p2 <= (xor_ln560_fu_2150_p2 and or_ln302_reg_3233);
    and_ln570_1_fu_1499_p2 <= (xor_ln571_1_fu_1493_p2 and icmp_ln570_2_reg_3175);
    and_ln570_2_fu_2289_p2 <= (xor_ln571_2_fu_2283_p2 and icmp_ln570_4_reg_3277);
    and_ln570_3_fu_2645_p2 <= (xor_ln571_3_fu_2639_p2 and icmp_ln570_6_reg_3349);
    and_ln570_fu_1143_p2 <= (xor_ln571_fu_1137_p2 and icmp_ln570_1_reg_3103);
    and_ln574_2_fu_1168_p2 <= (xor_ln574_fu_1162_p2 and and_ln570_fu_1143_p2);
    and_ln574_3_fu_1504_p2 <= (icmp_ln574_1_fu_1439_p2 and and_ln570_1_fu_1499_p2);
    and_ln574_4_fu_1524_p2 <= (xor_ln574_1_fu_1518_p2 and and_ln570_1_fu_1499_p2);
    and_ln574_5_fu_2294_p2 <= (icmp_ln574_2_fu_2229_p2 and and_ln570_2_fu_2289_p2);
    and_ln574_6_fu_2314_p2 <= (xor_ln574_2_fu_2308_p2 and and_ln570_2_fu_2289_p2);
    and_ln574_7_fu_2650_p2 <= (icmp_ln574_3_fu_2585_p2 and and_ln570_3_fu_2645_p2);
    and_ln574_8_fu_2670_p2 <= (xor_ln574_3_fu_2664_p2 and and_ln570_3_fu_2645_p2);
    and_ln574_fu_1148_p2 <= (icmp_ln574_fu_1083_p2 and and_ln570_fu_1143_p2);
    and_ln592_1_fu_1538_p2 <= (icmp_ln592_1_fu_1444_p2 and icmp_ln570_3_reg_3197);
    and_ln592_2_fu_2328_p2 <= (icmp_ln592_2_fu_2234_p2 and icmp_ln570_5_reg_3299);
    and_ln592_3_fu_2684_p2 <= (icmp_ln592_3_fu_2590_p2 and icmp_ln570_7_reg_3371);
    and_ln592_fu_1182_p2 <= (icmp_ln592_fu_1088_p2 and icmp_ln570_reg_3125);
    and_ln628_2_fu_1351_p2 <= (and_ln628_fu_1345_p2 and Range1_all_ones_18_fu_1213_p2);
    and_ln628_3_fu_1701_p2 <= (icmp_ln620_3_fu_1584_p2 and icmp_ln610_3_fu_1564_p2);
    and_ln628_4_fu_1707_p2 <= (and_ln628_3_fu_1701_p2 and Range1_all_ones_12_fu_1569_p2);
    and_ln628_5_fu_2491_p2 <= (icmp_ln620_5_fu_2374_p2 and icmp_ln610_5_fu_2354_p2);
    and_ln628_6_fu_2497_p2 <= (and_ln628_5_fu_2491_p2 and Range1_all_ones_14_fu_2359_p2);
    and_ln628_7_fu_2847_p2 <= (icmp_ln620_7_fu_2730_p2 and icmp_ln610_7_fu_2710_p2);
    and_ln628_8_fu_2853_p2 <= (and_ln628_7_fu_2847_p2 and Range1_all_ones_16_fu_2715_p2);
    and_ln628_fu_1345_p2 <= (icmp_ln620_fu_1228_p2 and icmp_ln610_fu_1208_p2);
    and_ln630_1_fu_1661_p2 <= (icmp_ln630_1_fu_1655_p2 and Range1_all_zeros_4_fu_1649_p2);
    and_ln630_2_fu_2451_p2 <= (icmp_ln630_2_fu_2445_p2 and Range1_all_zeros_6_fu_2439_p2);
    and_ln630_3_fu_2807_p2 <= (icmp_ln630_3_fu_2801_p2 and Range1_all_zeros_8_fu_2795_p2);
    and_ln630_fu_1305_p2 <= (icmp_ln630_fu_1299_p2 and Range1_all_zeros_2_fu_1293_p2);
    and_ln648_3_fu_1764_p2 <= (p_Result_226_fu_1556_p3 and deleted_ones_1_fu_1727_p3);
    and_ln648_5_fu_2554_p2 <= (p_Result_228_fu_2346_p3 and deleted_ones_2_fu_2517_p3);
    and_ln648_7_fu_2910_p2 <= (p_Result_230_fu_2702_p3 and deleted_ones_3_fu_2873_p3);
    and_ln648_fu_1408_p2 <= (p_Result_232_fu_1200_p3 and deleted_ones_fu_1371_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln24_1_reg_3057, icmp_ln24_reg_3042)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and ((icmp_ln24_reg_3042 = ap_const_lv1_0) or (icmp_ln24_1_reg_3057 = ap_const_lv1_0)))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln24_reg_3042_pp0_iter1_reg, icmp_ln24_1_reg_3057_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and ((icmp_ln24_1_reg_3057_pp0_iter1_reg = ap_const_lv1_0) or (icmp_ln24_reg_3042_pp0_iter1_reg = ap_const_lv1_0)))) then 
            ap_condition_exit_pp0_iter1_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_1_fu_172, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_j <= j_1_fu_172;
        end if; 
    end process;

    ashr_ln575_1_fu_1453_p2 <= std_logic_vector(shift_right(signed(man_V_13_reg_3157),to_integer(unsigned('0' & zext_ln575_1_fu_1449_p1(31-1 downto 0)))));
    ashr_ln575_2_fu_2243_p2 <= std_logic_vector(shift_right(signed(man_V_reg_3259),to_integer(unsigned('0' & zext_ln575_2_fu_2239_p1(31-1 downto 0)))));
    ashr_ln575_3_fu_2599_p2 <= std_logic_vector(shift_right(signed(man_V_14_reg_3331),to_integer(unsigned('0' & zext_ln575_3_fu_2595_p1(31-1 downto 0)))));
    ashr_ln575_fu_1097_p2 <= std_logic_vector(shift_right(signed(man_V_15_reg_3085),to_integer(unsigned('0' & zext_ln575_fu_1093_p1(31-1 downto 0)))));
    bitcast_ln724_2_fu_1462_p1 <= d_assign_3_reg_3061;
    bitcast_ln724_4_fu_2252_p1 <= d_assign_6_reg_3067_pp0_iter1_reg;
    bitcast_ln724_6_fu_2608_p1 <= d_assign_8_reg_3073_pp0_iter1_reg;
    bitcast_ln724_fu_1106_p1 <= d_assign_1_reg_3046;
    deleted_ones_1_fu_1727_p3 <= 
        Range1_all_ones_5_fu_1643_p2 when (and_ln628_4_fu_1707_p2(0) = '1') else 
        or_ln610_6_fu_1721_p2;
    deleted_ones_2_fu_2517_p3 <= 
        Range1_all_ones_8_fu_2433_p2 when (and_ln628_6_fu_2497_p2(0) = '1') else 
        or_ln610_9_fu_2511_p2;
    deleted_ones_3_fu_2873_p3 <= 
        Range1_all_ones_11_fu_2789_p2 when (and_ln628_8_fu_2853_p2(0) = '1') else 
        or_ln610_12_fu_2867_p2;
    deleted_ones_fu_1371_p3 <= 
        Range1_all_ones_fu_1287_p2 when (and_ln628_2_fu_1351_p2(0) = '1') else 
        or_ln610_3_fu_1365_p2;
    deleted_zeros_1_fu_1713_p3 <= 
        and_ln630_1_fu_1661_p2 when (and_ln628_4_fu_1707_p2(0) = '1') else 
        or_ln610_5_fu_1695_p2;
    deleted_zeros_2_fu_2503_p3 <= 
        and_ln630_2_fu_2451_p2 when (and_ln628_6_fu_2497_p2(0) = '1') else 
        or_ln610_8_fu_2485_p2;
    deleted_zeros_3_fu_2859_p3 <= 
        and_ln630_3_fu_2807_p2 when (and_ln628_8_fu_2853_p2(0) = '1') else 
        or_ln610_11_fu_2841_p2;
    deleted_zeros_fu_1357_p3 <= 
        and_ln630_fu_1305_p2 when (and_ln628_2_fu_1351_p2(0) = '1') else 
        or_ln610_fu_1339_p2;
    exp_tmp_1_fu_905_p4 <= ireg_fu_889_p1(62 downto 52);
    exp_tmp_2_fu_1803_p4 <= ireg_1_fu_1787_p1(62 downto 52);
    exp_tmp_3_fu_1979_p4 <= ireg_2_fu_1963_p1(62 downto 52);
    exp_tmp_fu_729_p4 <= ireg_3_fu_713_p1(62 downto 52);

    grp_fu_415_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, d_assign_1_fu_435_p35, d_assign_6_reg_3067, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_415_p0 <= d_assign_6_reg_3067;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_415_p0 <= d_assign_1_fu_435_p35;
            else 
                grp_fu_415_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_415_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_418_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, d_assign_3_fu_520_p31, d_assign_8_reg_3073, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_418_p0 <= d_assign_8_reg_3073;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_418_p0 <= d_assign_3_fu_520_p31;
            else 
                grp_fu_418_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_418_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln24_1_fu_514_p2 <= "1" when (unsigned(or_ln24_fu_508_p2) < unsigned(ap_const_lv6_21)) else "0";
    icmp_ln24_fu_429_p2 <= "1" when (unsigned(ap_sig_allocacmp_j) < unsigned(ap_const_lv6_21)) else "0";
    icmp_ln560_1_fu_949_p2 <= "1" when (trunc_ln544_1_fu_893_p1 = ap_const_lv63_0) else "0";
    icmp_ln560_2_fu_1847_p2 <= "1" when (trunc_ln544_2_fu_1791_p1 = ap_const_lv63_0) else "0";
    icmp_ln560_3_fu_2023_p2 <= "1" when (trunc_ln544_3_fu_1967_p1 = ap_const_lv63_0) else "0";
    icmp_ln560_fu_773_p2 <= "1" when (trunc_ln544_fu_717_p1 = ap_const_lv63_0) else "0";
    icmp_ln570_1_fu_785_p2 <= "1" when (signed(F2_fu_779_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln570_2_fu_961_p2 <= "1" when (signed(F2_1_fu_955_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln570_3_fu_1011_p2 <= "1" when (signed(tmp_312_fu_1001_p4) < signed(ap_const_lv8_1)) else "0";
    icmp_ln570_4_fu_1859_p2 <= "1" when (signed(F2_2_fu_1853_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln570_5_fu_1909_p2 <= "1" when (signed(tmp_320_fu_1899_p4) < signed(ap_const_lv8_1)) else "0";
    icmp_ln570_6_fu_2035_p2 <= "1" when (signed(F2_3_fu_2029_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln570_7_fu_2085_p2 <= "1" when (signed(tmp_328_fu_2075_p4) < signed(ap_const_lv8_1)) else "0";
    icmp_ln570_fu_835_p2 <= "1" when (signed(tmp_304_fu_825_p4) < signed(ap_const_lv8_1)) else "0";
    icmp_ln571_1_fu_1434_p2 <= "1" when (F2_1_reg_3169 = ap_const_lv12_10) else "0";
    icmp_ln571_2_fu_2224_p2 <= "1" when (F2_2_reg_3271 = ap_const_lv12_10) else "0";
    icmp_ln571_3_fu_2580_p2 <= "1" when (F2_3_reg_3343 = ap_const_lv12_10) else "0";
    icmp_ln571_fu_1078_p2 <= "1" when (F2_reg_3097 = ap_const_lv12_10) else "0";
    icmp_ln574_1_fu_1439_p2 <= "1" when (unsigned(sh_amt_1_reg_3180) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln574_2_fu_2229_p2 <= "1" when (unsigned(sh_amt_2_reg_3282) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln574_3_fu_2585_p2 <= "1" when (unsigned(sh_amt_3_reg_3354) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln574_fu_1083_p2 <= "1" when (unsigned(sh_amt_reg_3108) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln592_1_fu_1444_p2 <= "1" when (tmp_310_reg_3192 = ap_const_lv7_0) else "0";
    icmp_ln592_2_fu_2234_p2 <= "1" when (tmp_318_reg_3294 = ap_const_lv7_0) else "0";
    icmp_ln592_3_fu_2590_p2 <= "1" when (tmp_326_reg_3366 = ap_const_lv7_0) else "0";
    icmp_ln592_fu_1088_p2 <= "1" when (tmp_302_reg_3120 = ap_const_lv7_0) else "0";
    icmp_ln600_1_fu_1033_p2 <= "1" when (signed(tmp_313_fu_1023_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln600_2_fu_1931_p2 <= "1" when (signed(tmp_321_fu_1921_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln600_3_fu_2107_p2 <= "1" when (signed(tmp_329_fu_2097_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln600_fu_857_p2 <= "1" when (signed(tmp_305_fu_847_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln610_2_fu_1218_p2 <= "1" when (unsigned(pos1_reg_3135) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln610_3_fu_1564_p2 <= "1" when (signed(pos1_1_reg_3207) < signed(ap_const_lv12_36)) else "0";
    icmp_ln610_4_fu_1574_p2 <= "1" when (unsigned(pos1_1_reg_3207) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln610_5_fu_2354_p2 <= "1" when (signed(pos1_2_reg_3309) < signed(ap_const_lv12_36)) else "0";
    icmp_ln610_6_fu_2364_p2 <= "1" when (unsigned(pos1_2_reg_3309) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln610_7_fu_2710_p2 <= "1" when (signed(pos1_3_reg_3381) < signed(ap_const_lv12_36)) else "0";
    icmp_ln610_8_fu_2720_p2 <= "1" when (unsigned(pos1_3_reg_3381) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln610_fu_1208_p2 <= "1" when (signed(pos1_reg_3135) < signed(ap_const_lv12_36)) else "0";
    icmp_ln620_2_fu_1234_p2 <= "1" when (unsigned(pos2_fu_1195_p2) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln620_3_fu_1584_p2 <= "1" when (signed(pos2_1_fu_1551_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln620_4_fu_1590_p2 <= "1" when (unsigned(pos2_1_fu_1551_p2) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln620_5_fu_2374_p2 <= "1" when (signed(pos2_2_fu_2341_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln620_6_fu_2380_p2 <= "1" when (unsigned(pos2_2_fu_2341_p2) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln620_7_fu_2730_p2 <= "1" when (signed(pos2_3_fu_2697_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln620_8_fu_2736_p2 <= "1" when (unsigned(pos2_3_fu_2697_p2) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln620_fu_1228_p2 <= "1" when (signed(pos2_fu_1195_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln630_1_fu_1655_p2 <= "1" when (Range2_V_4_fu_1604_p2 = ap_const_lv54_0) else "0";
    icmp_ln630_2_fu_2445_p2 <= "1" when (Range2_V_6_fu_2394_p2 = ap_const_lv54_0) else "0";
    icmp_ln630_3_fu_2801_p2 <= "1" when (Range2_V_8_fu_2750_p2 = ap_const_lv54_0) else "0";
    icmp_ln630_fu_1299_p2 <= "1" when (Range2_V_2_fu_1248_p2 = ap_const_lv54_0) else "0";
    icmp_ln631_1_fu_1667_p2 <= "1" when (pos2_1_fu_1551_p2 = ap_const_lv12_36) else "0";
    icmp_ln631_2_fu_2457_p2 <= "1" when (pos2_2_fu_2341_p2 = ap_const_lv12_36) else "0";
    icmp_ln631_3_fu_2813_p2 <= "1" when (pos2_3_fu_2697_p2 = ap_const_lv12_36) else "0";
    icmp_ln631_fu_1311_p2 <= "1" when (pos2_fu_1195_p2 = ap_const_lv12_36) else "0";

    int_state_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln24_fu_2180_p1, ap_block_pp0_stage0, zext_ln26_1_fu_2985_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            int_state_V_address0 <= zext_ln26_1_fu_2985_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            int_state_V_address0 <= zext_ln24_fu_2180_p1(6 - 1 downto 0);
        else 
            int_state_V_address0 <= "XXXXXX";
        end if; 
    end process;


    int_state_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, trunc_ln26_cast_fu_2139_p1, ap_block_pp0_stage1, zext_ln26_fu_2938_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            int_state_V_address1 <= zext_ln26_fu_2938_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            int_state_V_address1 <= trunc_ln26_cast_fu_2139_p1(6 - 1 downto 0);
        else 
            int_state_V_address1 <= "XXXXXX";
        end if; 
    end process;


    int_state_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            int_state_V_ce0 <= ap_const_logic_1;
        else 
            int_state_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    int_state_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            int_state_V_ce1 <= ap_const_logic_1;
        else 
            int_state_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    int_state_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, select_ln560_1_fu_2213_p3, select_ln560_3_fu_3019_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            int_state_V_d0 <= select_ln560_3_fu_3019_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            int_state_V_d0 <= select_ln560_1_fu_2213_p3;
        else 
            int_state_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    int_state_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, select_ln560_fu_2172_p3, select_ln560_2_fu_2972_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            int_state_V_d1 <= select_ln560_2_fu_2972_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            int_state_V_d1 <= select_ln560_fu_2172_p3;
        else 
            int_state_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    int_state_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, icmp_ln24_reg_3042_pp0_iter1_reg, icmp_ln24_1_reg_3057_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_1_reg_3057_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln24_reg_3042_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            int_state_V_we0 <= ap_const_logic_1;
        else 
            int_state_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    int_state_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, icmp_ln24_reg_3042_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln24_reg_3042_pp0_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            int_state_V_we1 <= ap_const_logic_1;
        else 
            int_state_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ireg_1_fu_1787_p1 <= grp_fu_415_p1;
    ireg_2_fu_1963_p1 <= grp_fu_418_p1;
    ireg_3_fu_713_p1 <= grp_fu_415_p1;
    ireg_fu_889_p1 <= grp_fu_418_p1;
    lD_3_fu_1057_p3 <= man_V_13_fu_941_p3(to_integer(unsigned(sext_ln607_1_fu_1045_p1)) downto to_integer(unsigned(sext_ln607_1_fu_1045_p1))) when (to_integer(unsigned(sext_ln607_1_fu_1045_p1)) >= 0 and to_integer(unsigned(sext_ln607_1_fu_1045_p1)) <=53) else "-";
    lD_5_fu_1955_p3 <= man_V_fu_1839_p3(to_integer(unsigned(sext_ln607_2_fu_1943_p1)) downto to_integer(unsigned(sext_ln607_2_fu_1943_p1))) when (to_integer(unsigned(sext_ln607_2_fu_1943_p1)) >= 0 and to_integer(unsigned(sext_ln607_2_fu_1943_p1)) <=53) else "-";
    lD_7_fu_2131_p3 <= man_V_14_fu_2015_p3(to_integer(unsigned(sext_ln607_3_fu_2119_p1)) downto to_integer(unsigned(sext_ln607_3_fu_2119_p1))) when (to_integer(unsigned(sext_ln607_3_fu_2119_p1)) >= 0 and to_integer(unsigned(sext_ln607_3_fu_2119_p1)) <=53) else "-";
    lD_fu_881_p3 <= man_V_15_fu_765_p3(to_integer(unsigned(sext_ln607_fu_869_p1)) downto to_integer(unsigned(sext_ln607_fu_869_p1))) when (to_integer(unsigned(sext_ln607_fu_869_p1)) >= 0 and to_integer(unsigned(sext_ln607_fu_869_p1)) <=53) else "-";
    man_V_11_fu_2009_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln558_3_fu_2005_p1));
    man_V_13_fu_941_p3 <= 
        man_V_7_fu_935_p2 when (neg_src_fu_897_p3(0) = '1') else 
        zext_ln558_1_fu_931_p1;
    man_V_14_fu_2015_p3 <= 
        man_V_11_fu_2009_p2 when (neg_src_94_fu_1971_p3(0) = '1') else 
        zext_ln558_3_fu_2005_p1;
    man_V_15_fu_765_p3 <= 
        man_V_4_fu_759_p2 when (neg_src_95_fu_721_p3(0) = '1') else 
        zext_ln558_fu_755_p1;
    man_V_4_fu_759_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln558_fu_755_p1));
    man_V_7_fu_935_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln558_1_fu_931_p1));
    man_V_8_fu_1833_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln558_2_fu_1829_p1));
    man_V_fu_1839_p3 <= 
        man_V_8_fu_1833_p2 when (neg_src_93_fu_1795_p3(0) = '1') else 
        zext_ln558_2_fu_1829_p1;
    neg_src_93_fu_1795_p3 <= ireg_1_fu_1787_p1(63 downto 63);
    neg_src_94_fu_1971_p3 <= ireg_2_fu_1963_p1(63 downto 63);
    neg_src_95_fu_721_p3 <= ireg_3_fu_713_p1(63 downto 63);
    neg_src_fu_897_p3 <= ireg_fu_889_p1(63 downto 63);
    or_ln24_1_fu_2933_p2 <= (j_reg_3034_pp0_iter1_reg or ap_const_lv6_2);
    or_ln24_2_fu_2980_p2 <= (j_reg_3034_pp0_iter1_reg or ap_const_lv6_3);
    or_ln24_fu_508_p2 <= (ap_sig_allocacmp_j or ap_const_lv6_1);
    or_ln302_1_fu_1781_p2 <= (underflow_93_fu_1776_p2 or overflow_93_fu_1758_p2);
    or_ln302_2_fu_2571_p2 <= (underflow_94_fu_2566_p2 or overflow_94_fu_2548_p2);
    or_ln302_3_fu_2927_p2 <= (underflow_95_fu_2922_p2 or overflow_95_fu_2904_p2);
    or_ln302_fu_1425_p2 <= (underflow_fu_1420_p2 or overflow_fu_1402_p2);
    or_ln610_10_fu_2525_p2 <= (p_Result_228_fu_2346_p3 or icmp_ln610_5_fu_2354_p2);
    or_ln610_11_fu_2841_p2 <= (xor_ln610_6_fu_2835_p2 or select_ln631_7_fu_2819_p3);
    or_ln610_12_fu_2867_p2 <= (xor_ln610_6_fu_2835_p2 or select_ln631_8_fu_2827_p3);
    or_ln610_13_fu_2881_p2 <= (p_Result_230_fu_2702_p3 or icmp_ln610_7_fu_2710_p2);
    or_ln610_3_fu_1365_p2 <= (xor_ln610_fu_1333_p2 or select_ln631_2_fu_1325_p3);
    or_ln610_4_fu_1379_p2 <= (p_Result_232_fu_1200_p3 or icmp_ln610_fu_1208_p2);
    or_ln610_5_fu_1695_p2 <= (xor_ln610_2_fu_1689_p2 or select_ln631_3_fu_1673_p3);
    or_ln610_6_fu_1721_p2 <= (xor_ln610_2_fu_1689_p2 or select_ln631_4_fu_1681_p3);
    or_ln610_7_fu_1735_p2 <= (p_Result_226_fu_1556_p3 or icmp_ln610_3_fu_1564_p2);
    or_ln610_8_fu_2485_p2 <= (xor_ln610_4_fu_2479_p2 or select_ln631_5_fu_2463_p3);
    or_ln610_9_fu_2511_p2 <= (xor_ln610_4_fu_2479_p2 or select_ln631_6_fu_2471_p3);
    or_ln610_fu_1339_p2 <= (xor_ln610_fu_1333_p2 or select_ln631_fu_1317_p3);
    or_ln647_1_fu_1747_p2 <= (xor_ln647_3_fu_1741_p2 or p_Result_226_fu_1556_p3);
    or_ln647_2_fu_2537_p2 <= (xor_ln647_5_fu_2531_p2 or p_Result_228_fu_2346_p3);
    or_ln647_3_fu_2893_p2 <= (xor_ln647_7_fu_2887_p2 or p_Result_230_fu_2702_p3);
    or_ln647_fu_1391_p2 <= (xor_ln647_fu_1385_p2 or p_Result_232_fu_1200_p3);
    overflow_93_fu_1758_p2 <= (xor_ln647_4_fu_1753_p2 and or_ln647_1_fu_1747_p2);
    overflow_94_fu_2548_p2 <= (xor_ln647_6_fu_2543_p2 and or_ln647_2_fu_2537_p2);
    overflow_95_fu_2904_p2 <= (xor_ln647_8_fu_2899_p2 and or_ln647_3_fu_2893_p2);
    overflow_fu_1402_p2 <= (xor_ln647_2_fu_1397_p2 and or_ln647_fu_1391_p2);
    p_Result_226_fu_1556_p3 <= p_Val2_201_fu_1543_p3(31 downto 31);
    p_Result_227_fu_1821_p3 <= (ap_const_lv1_1 & trunc_ln554_2_fu_1817_p1);
    p_Result_228_fu_2346_p3 <= p_Val2_203_fu_2333_p3(31 downto 31);
    p_Result_229_fu_1997_p3 <= (ap_const_lv1_1 & trunc_ln554_3_fu_1993_p1);
    p_Result_230_fu_2702_p3 <= p_Val2_205_fu_2689_p3(31 downto 31);
    p_Result_231_fu_747_p3 <= (ap_const_lv1_1 & trunc_ln554_fu_743_p1);
    p_Result_232_fu_1200_p3 <= p_Val2_199_fu_1187_p3(31 downto 31);
    p_Result_s_fu_923_p3 <= (ap_const_lv1_1 & trunc_ln554_1_fu_919_p1);
    p_Val2_199_fu_1187_p3 <= 
        shl_ln593_fu_1125_p2 when (and_ln592_fu_1182_p2(0) = '1') else 
        select_ln574_2_fu_1174_p3;
    p_Val2_201_fu_1543_p3 <= 
        shl_ln593_1_fu_1481_p2 when (and_ln592_1_fu_1538_p2(0) = '1') else 
        select_ln574_4_fu_1530_p3;
    p_Val2_203_fu_2333_p3 <= 
        shl_ln593_2_fu_2271_p2 when (and_ln592_2_fu_2328_p2(0) = '1') else 
        select_ln574_6_fu_2320_p3;
    p_Val2_205_fu_2689_p3 <= 
        shl_ln593_3_fu_2627_p2 when (and_ln592_3_fu_2684_p2(0) = '1') else 
        select_ln574_8_fu_2676_p3;
    pos1_1_fu_1039_p2 <= std_logic_vector(unsigned(F2_1_fu_955_p2) + unsigned(ap_const_lv12_10));
    pos1_2_fu_1937_p2 <= std_logic_vector(unsigned(F2_2_fu_1853_p2) + unsigned(ap_const_lv12_10));
    pos1_3_fu_2113_p2 <= std_logic_vector(unsigned(F2_3_fu_2029_p2) + unsigned(ap_const_lv12_10));
    pos1_fu_863_p2 <= std_logic_vector(unsigned(F2_fu_779_p2) + unsigned(ap_const_lv12_10));
    pos2_1_fu_1551_p2 <= std_logic_vector(unsigned(F2_1_reg_3169) + unsigned(ap_const_lv12_11));
    pos2_2_fu_2341_p2 <= std_logic_vector(unsigned(F2_2_reg_3271) + unsigned(ap_const_lv12_11));
    pos2_3_fu_2697_p2 <= std_logic_vector(unsigned(F2_3_reg_3343) + unsigned(ap_const_lv12_11));
    pos2_fu_1195_p2 <= std_logic_vector(unsigned(F2_reg_3097) + unsigned(ap_const_lv12_11));
    r_V_371_fu_1609_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln624_1_fu_1600_p1(31-1 downto 0)))));
    r_V_372_fu_2399_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln624_2_fu_2390_p1(31-1 downto 0)))));
    r_V_373_fu_2755_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln624_3_fu_2746_p1(31-1 downto 0)))));
    r_V_fu_1253_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln624_fu_1244_p1(31-1 downto 0)))));
    select_ln302_1_fu_2206_p3 <= 
        select_ln346_5_fu_2184_p3 when (and_ln302_4_fu_2201_p2(0) = '1') else 
        p_Val2_201_reg_3238;
    select_ln302_2_fu_2965_p3 <= 
        select_ln346_12_fu_2943_p3 when (and_ln302_6_fu_2960_p2(0) = '1') else 
        p_Val2_203_reg_3397;
    select_ln302_3_fu_3012_p3 <= 
        select_ln346_14_fu_2990_p3 when (and_ln302_8_fu_3007_p2(0) = '1') else 
        p_Val2_205_reg_3412;
    select_ln302_fu_2165_p3 <= 
        select_ln346_1_fu_2143_p3 when (and_ln302_2_fu_2160_p2(0) = '1') else 
        p_Val2_199_reg_3223;
    select_ln346_12_fu_2943_p3 <= 
        ap_const_lv32_7FFFFFFF when (overflow_94_reg_3402(0) = '1') else 
        ap_const_lv32_80000000;
    select_ln346_14_fu_2990_p3 <= 
        ap_const_lv32_7FFFFFFF when (overflow_95_reg_3417(0) = '1') else 
        ap_const_lv32_80000000;
    select_ln346_1_fu_2143_p3 <= 
        ap_const_lv32_7FFFFFFF when (overflow_reg_3228(0) = '1') else 
        ap_const_lv32_80000000;
    select_ln346_5_fu_2184_p3 <= 
        ap_const_lv32_7FFFFFFF when (overflow_93_reg_3243(0) = '1') else 
        ap_const_lv32_80000000;
    select_ln560_1_fu_2213_p3 <= 
        ap_const_lv32_0 when (icmp_ln560_1_reg_3163(0) = '1') else 
        select_ln302_1_fu_2206_p3;
    select_ln560_2_fu_2972_p3 <= 
        ap_const_lv32_0 when (icmp_ln560_2_reg_3265(0) = '1') else 
        select_ln302_2_fu_2965_p3;
    select_ln560_3_fu_3019_p3 <= 
        ap_const_lv32_0 when (icmp_ln560_3_reg_3337(0) = '1') else 
        select_ln302_3_fu_3012_p3;
    select_ln560_fu_2172_p3 <= 
        ap_const_lv32_0 when (icmp_ln560_reg_3091(0) = '1') else 
        select_ln302_fu_2165_p3;
    select_ln571_1_fu_1486_p3 <= 
        trunc_ln572_1_reg_3186 when (icmp_ln571_1_fu_1434_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln571_2_fu_2276_p3 <= 
        trunc_ln572_2_reg_3288 when (icmp_ln571_2_fu_2224_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln571_3_fu_2632_p3 <= 
        trunc_ln572_3_reg_3360 when (icmp_ln571_3_fu_2580_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln571_fu_1130_p3 <= 
        trunc_ln572_reg_3114 when (icmp_ln571_fu_1078_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln574_2_fu_1174_p3 <= 
        select_ln577_fu_1117_p3 when (and_ln574_2_fu_1168_p2(0) = '1') else 
        select_ln574_fu_1154_p3;
    select_ln574_3_fu_1510_p3 <= 
        trunc_ln575_1_fu_1458_p1 when (and_ln574_3_fu_1504_p2(0) = '1') else 
        select_ln571_1_fu_1486_p3;
    select_ln574_4_fu_1530_p3 <= 
        select_ln577_1_fu_1473_p3 when (and_ln574_4_fu_1524_p2(0) = '1') else 
        select_ln574_3_fu_1510_p3;
    select_ln574_5_fu_2300_p3 <= 
        trunc_ln575_2_fu_2248_p1 when (and_ln574_5_fu_2294_p2(0) = '1') else 
        select_ln571_2_fu_2276_p3;
    select_ln574_6_fu_2320_p3 <= 
        select_ln577_2_fu_2263_p3 when (and_ln574_6_fu_2314_p2(0) = '1') else 
        select_ln574_5_fu_2300_p3;
    select_ln574_7_fu_2656_p3 <= 
        trunc_ln575_3_fu_2604_p1 when (and_ln574_7_fu_2650_p2(0) = '1') else 
        select_ln571_3_fu_2632_p3;
    select_ln574_8_fu_2676_p3 <= 
        select_ln577_3_fu_2619_p3 when (and_ln574_8_fu_2670_p2(0) = '1') else 
        select_ln574_7_fu_2656_p3;
    select_ln574_fu_1154_p3 <= 
        trunc_ln575_fu_1102_p1 when (and_ln574_fu_1148_p2(0) = '1') else 
        select_ln571_fu_1130_p3;
    select_ln577_1_fu_1473_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_311_fu_1465_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln577_2_fu_2263_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_319_fu_2255_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln577_3_fu_2619_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_327_fu_2611_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln577_fu_1117_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_303_fu_1109_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln631_2_fu_1325_p3 <= 
        Range1_all_ones_19_fu_1223_p2 when (icmp_ln631_fu_1311_p2(0) = '1') else 
        Range1_all_ones_18_fu_1213_p2;
    select_ln631_3_fu_1673_p3 <= 
        Range1_all_zeros_4_fu_1649_p2 when (icmp_ln631_1_fu_1667_p2(0) = '1') else 
        Range1_all_ones_12_fu_1569_p2;
    select_ln631_4_fu_1681_p3 <= 
        Range1_all_ones_13_fu_1579_p2 when (icmp_ln631_1_fu_1667_p2(0) = '1') else 
        Range1_all_ones_12_fu_1569_p2;
    select_ln631_5_fu_2463_p3 <= 
        Range1_all_zeros_6_fu_2439_p2 when (icmp_ln631_2_fu_2457_p2(0) = '1') else 
        Range1_all_ones_14_fu_2359_p2;
    select_ln631_6_fu_2471_p3 <= 
        Range1_all_ones_15_fu_2369_p2 when (icmp_ln631_2_fu_2457_p2(0) = '1') else 
        Range1_all_ones_14_fu_2359_p2;
    select_ln631_7_fu_2819_p3 <= 
        Range1_all_zeros_8_fu_2795_p2 when (icmp_ln631_3_fu_2813_p2(0) = '1') else 
        Range1_all_ones_16_fu_2715_p2;
    select_ln631_8_fu_2827_p3 <= 
        Range1_all_ones_17_fu_2725_p2 when (icmp_ln631_3_fu_2813_p2(0) = '1') else 
        Range1_all_ones_16_fu_2715_p2;
    select_ln631_fu_1317_p3 <= 
        Range1_all_zeros_2_fu_1293_p2 when (icmp_ln631_fu_1311_p2(0) = '1') else 
        Range1_all_ones_18_fu_1213_p2;
        sext_ln570_1_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_3180),32));

        sext_ln570_2_fu_2221_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_2_reg_3282),32));

        sext_ln570_3_fu_2577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_3_reg_3354),32));

        sext_ln570_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_3108),32));

        sext_ln607_1_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_1_fu_1039_p2),32));

        sext_ln607_2_fu_1943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_2_fu_1937_p2),32));

        sext_ln607_3_fu_2119_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_3_fu_2113_p2),32));

        sext_ln607_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_fu_863_p2),32));

        sext_ln624_1_fu_1596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_1_fu_1551_p2),32));

        sext_ln624_2_fu_2386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_2_fu_2341_p2),32));

        sext_ln624_3_fu_2742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_3_fu_2697_p2),32));

        sext_ln624_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_fu_1195_p2),32));

    sh_amt_1_fu_979_p3 <= 
        add_ln570_1_fu_967_p2 when (icmp_ln570_2_fu_961_p2(0) = '1') else 
        sub_ln570_1_fu_973_p2;
    sh_amt_2_fu_1877_p3 <= 
        add_ln570_2_fu_1865_p2 when (icmp_ln570_4_fu_1859_p2(0) = '1') else 
        sub_ln570_2_fu_1871_p2;
    sh_amt_3_fu_2053_p3 <= 
        add_ln570_3_fu_2041_p2 when (icmp_ln570_6_fu_2035_p2(0) = '1') else 
        sub_ln570_3_fu_2047_p2;
    sh_amt_fu_803_p3 <= 
        add_ln570_fu_791_p2 when (icmp_ln570_1_fu_785_p2(0) = '1') else 
        sub_ln570_fu_797_p2;
    shl_ln593_1_fu_1481_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln572_1_reg_3186),to_integer(unsigned('0' & sext_ln570_1_fu_1431_p1(31-1 downto 0)))));
    shl_ln593_2_fu_2271_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln572_2_reg_3288),to_integer(unsigned('0' & sext_ln570_2_fu_2221_p1(31-1 downto 0)))));
    shl_ln593_3_fu_2627_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln572_3_reg_3360),to_integer(unsigned('0' & sext_ln570_3_fu_2577_p1(31-1 downto 0)))));
    shl_ln593_fu_1125_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln572_reg_3114),to_integer(unsigned('0' & sext_ln570_fu_1075_p1(31-1 downto 0)))));
    sub_ln570_1_fu_973_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_1_fu_955_p2));
    sub_ln570_2_fu_1871_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_2_fu_1853_p2));
    sub_ln570_3_fu_2047_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_3_fu_2029_p2));
    sub_ln570_fu_797_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_779_p2));
    tmp_303_fu_1109_p3 <= bitcast_ln724_fu_1106_p1(31 downto 31);
    tmp_304_fu_825_p4 <= F2_fu_779_p2(11 downto 4);
    tmp_305_fu_847_p4 <= add_ln601_fu_841_p2(11 downto 4);
    tmp_308_fu_1265_p3 <= pos2_fu_1195_p2(11 downto 11);
    tmp_311_fu_1465_p3 <= bitcast_ln724_2_fu_1462_p1(31 downto 31);
    tmp_312_fu_1001_p4 <= F2_1_fu_955_p2(11 downto 4);
    tmp_313_fu_1023_p4 <= add_ln601_1_fu_1017_p2(11 downto 4);
    tmp_316_fu_1621_p3 <= pos2_1_fu_1551_p2(11 downto 11);
    tmp_319_fu_2255_p3 <= bitcast_ln724_4_fu_2252_p1(31 downto 31);
    tmp_320_fu_1899_p4 <= F2_2_fu_1853_p2(11 downto 4);
    tmp_321_fu_1921_p4 <= add_ln601_2_fu_1915_p2(11 downto 4);
    tmp_324_fu_2411_p3 <= pos2_2_fu_2341_p2(11 downto 11);
    tmp_327_fu_2611_p3 <= bitcast_ln724_6_fu_2608_p1(31 downto 31);
    tmp_328_fu_2075_p4 <= F2_3_fu_2029_p2(11 downto 4);
    tmp_329_fu_2097_p4 <= add_ln601_3_fu_2091_p2(11 downto 4);
    tmp_332_fu_2767_p3 <= pos2_3_fu_2697_p2(11 downto 11);
    trunc_ln26_cast_fu_2139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_3034_pp0_iter1_reg),64));
    trunc_ln544_1_fu_893_p1 <= ireg_fu_889_p1(63 - 1 downto 0);
    trunc_ln544_2_fu_1791_p1 <= ireg_1_fu_1787_p1(63 - 1 downto 0);
    trunc_ln544_3_fu_1967_p1 <= ireg_2_fu_1963_p1(63 - 1 downto 0);
    trunc_ln544_fu_717_p1 <= ireg_3_fu_713_p1(63 - 1 downto 0);
    trunc_ln554_1_fu_919_p1 <= ireg_fu_889_p1(52 - 1 downto 0);
    trunc_ln554_2_fu_1817_p1 <= ireg_1_fu_1787_p1(52 - 1 downto 0);
    trunc_ln554_3_fu_1993_p1 <= ireg_2_fu_1963_p1(52 - 1 downto 0);
    trunc_ln554_fu_743_p1 <= ireg_3_fu_713_p1(52 - 1 downto 0);
    trunc_ln572_1_fu_987_p1 <= man_V_13_fu_941_p3(32 - 1 downto 0);
    trunc_ln572_2_fu_1885_p1 <= man_V_fu_1839_p3(32 - 1 downto 0);
    trunc_ln572_3_fu_2061_p1 <= man_V_14_fu_2015_p3(32 - 1 downto 0);
    trunc_ln572_fu_811_p1 <= man_V_15_fu_765_p3(32 - 1 downto 0);
    trunc_ln575_1_fu_1458_p1 <= ashr_ln575_1_fu_1453_p2(32 - 1 downto 0);
    trunc_ln575_2_fu_2248_p1 <= ashr_ln575_2_fu_2243_p2(32 - 1 downto 0);
    trunc_ln575_3_fu_2604_p1 <= ashr_ln575_3_fu_2599_p2(32 - 1 downto 0);
    trunc_ln575_fu_1102_p1 <= ashr_ln575_fu_1097_p2(32 - 1 downto 0);
    underflow_93_fu_1776_p2 <= (xor_ln648_1_fu_1770_p2 and neg_src_reg_3151);
    underflow_94_fu_2566_p2 <= (xor_ln648_2_fu_2560_p2 and neg_src_93_reg_3253);
    underflow_95_fu_2922_p2 <= (xor_ln648_3_fu_2916_p2 and neg_src_94_reg_3325);
    underflow_fu_1420_p2 <= (xor_ln648_fu_1414_p2 and neg_src_95_reg_3079);
    xor_ln560_1_fu_2191_p2 <= (icmp_ln560_1_reg_3163 xor ap_const_lv1_1);
    xor_ln560_2_fu_2950_p2 <= (icmp_ln560_2_reg_3265 xor ap_const_lv1_1);
    xor_ln560_3_fu_2997_p2 <= (icmp_ln560_3_reg_3337 xor ap_const_lv1_1);
    xor_ln560_fu_2150_p2 <= (icmp_ln560_reg_3091 xor ap_const_lv1_1);
    xor_ln571_1_fu_1493_p2 <= (icmp_ln571_1_fu_1434_p2 xor ap_const_lv1_1);
    xor_ln571_2_fu_2283_p2 <= (icmp_ln571_2_fu_2224_p2 xor ap_const_lv1_1);
    xor_ln571_3_fu_2639_p2 <= (icmp_ln571_3_fu_2580_p2 xor ap_const_lv1_1);
    xor_ln571_fu_1137_p2 <= (icmp_ln571_fu_1078_p2 xor ap_const_lv1_1);
    xor_ln574_1_fu_1518_p2 <= (icmp_ln574_1_fu_1439_p2 xor ap_const_lv1_1);
    xor_ln574_2_fu_2308_p2 <= (icmp_ln574_2_fu_2229_p2 xor ap_const_lv1_1);
    xor_ln574_3_fu_2664_p2 <= (icmp_ln574_3_fu_2585_p2 xor ap_const_lv1_1);
    xor_ln574_fu_1162_p2 <= (icmp_ln574_fu_1083_p2 xor ap_const_lv1_1);
    xor_ln610_2_fu_1689_p2 <= (icmp_ln610_3_fu_1564_p2 xor ap_const_lv1_1);
    xor_ln610_4_fu_2479_p2 <= (icmp_ln610_5_fu_2354_p2 xor ap_const_lv1_1);
    xor_ln610_6_fu_2835_p2 <= (icmp_ln610_7_fu_2710_p2 xor ap_const_lv1_1);
    xor_ln610_fu_1333_p2 <= (icmp_ln610_fu_1208_p2 xor ap_const_lv1_1);
    xor_ln647_2_fu_1397_p2 <= (neg_src_95_reg_3079 xor ap_const_lv1_1);
    xor_ln647_3_fu_1741_p2 <= (deleted_zeros_1_fu_1713_p3 xor ap_const_lv1_1);
    xor_ln647_4_fu_1753_p2 <= (neg_src_reg_3151 xor ap_const_lv1_1);
    xor_ln647_5_fu_2531_p2 <= (deleted_zeros_2_fu_2503_p3 xor ap_const_lv1_1);
    xor_ln647_6_fu_2543_p2 <= (neg_src_93_reg_3253 xor ap_const_lv1_1);
    xor_ln647_7_fu_2887_p2 <= (deleted_zeros_3_fu_2859_p3 xor ap_const_lv1_1);
    xor_ln647_8_fu_2899_p2 <= (neg_src_94_reg_3325 xor ap_const_lv1_1);
    xor_ln647_fu_1385_p2 <= (deleted_zeros_fu_1357_p3 xor ap_const_lv1_1);
    xor_ln648_1_fu_1770_p2 <= (or_ln610_7_fu_1735_p2 xor and_ln648_3_fu_1764_p2);
    xor_ln648_2_fu_2560_p2 <= (or_ln610_10_fu_2525_p2 xor and_ln648_5_fu_2554_p2);
    xor_ln648_3_fu_2916_p2 <= (or_ln610_13_fu_2881_p2 xor and_ln648_7_fu_2910_p2);
    xor_ln648_fu_1414_p2 <= (or_ln610_4_fu_1379_p2 xor and_ln648_fu_1408_p2);
    zext_ln24_fu_2180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln24_reg_3052_pp0_iter1_reg),64));
    zext_ln26_1_fu_2985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln24_2_fu_2980_p2),64));
    zext_ln26_fu_2938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln24_1_fu_2933_p2),64));
    zext_ln455_1_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_1_fu_905_p4),12));
    zext_ln455_2_fu_1813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_2_fu_1803_p4),12));
    zext_ln455_3_fu_1989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_3_fu_1979_p4),12));
    zext_ln455_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_729_p4),12));
    zext_ln558_1_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_923_p3),54));
    zext_ln558_2_fu_1829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_227_fu_1821_p3),54));
    zext_ln558_3_fu_2005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_229_fu_1997_p3),54));
    zext_ln558_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_231_fu_747_p3),54));
    zext_ln575_1_fu_1449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln570_1_fu_1431_p1),54));
    zext_ln575_2_fu_2239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln570_2_fu_2221_p1),54));
    zext_ln575_3_fu_2595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln570_3_fu_2577_p1),54));
    zext_ln575_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln570_fu_1075_p1),54));
    zext_ln624_1_fu_1600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln624_1_fu_1596_p1),54));
    zext_ln624_2_fu_2390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln624_2_fu_2386_p1),54));
    zext_ln624_3_fu_2746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln624_3_fu_2742_p1),54));
    zext_ln624_fu_1244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln624_fu_1240_p1),54));
end behav;
