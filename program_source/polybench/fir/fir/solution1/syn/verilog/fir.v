// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fir_fir,hls_ip_2022_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.170000,HLS_SYN_LAT=50,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=195,HLS_SYN_LUT=333,HLS_VERSION=2022_2_2}" *)

module fir (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r,
        output_r,
        output_r_ap_vld,
        taps_address0,
        taps_ce0,
        taps_q0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] input_r;
output  [31:0] output_r;
output   output_r_ap_vld;
output  [4:0] taps_address0;
output   taps_ce0;
input  [31:0] taps_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg output_r_ap_vld;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] delay_lane_address0;
reg    delay_lane_ce0;
reg    delay_lane_we0;
reg   [31:0] delay_lane_d0;
wire   [31:0] delay_lane_q0;
reg    delay_lane_ce1;
wire   [31:0] delay_lane_q1;
wire    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_start;
wire    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_done;
wire    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_idle;
wire    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_ready;
wire   [4:0] grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_address0;
wire    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_ce0;
wire    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_we0;
wire   [31:0] grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_d0;
wire   [4:0] grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_address1;
wire    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_ce1;
wire    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_start;
wire    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_done;
wire    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_idle;
wire    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_ready;
wire   [4:0] grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_taps_address0;
wire    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_taps_ce0;
wire   [31:0] grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_result_out;
wire    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_result_out_ap_vld;
wire   [4:0] grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_delay_lane_address0;
wire    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_delay_lane_ce0;
reg    grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state3;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_start_reg = 1'b0;
#0 grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_start_reg = 1'b0;
end

fir_delay_lane_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
delay_lane_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(delay_lane_address0),
    .ce0(delay_lane_ce0),
    .we0(delay_lane_we0),
    .d0(delay_lane_d0),
    .q0(delay_lane_q0),
    .address1(grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_address1),
    .ce1(delay_lane_ce1),
    .q1(delay_lane_q1)
);

fir_fir_Pipeline_VITIS_LOOP_9_1 grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_start),
    .ap_done(grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_done),
    .ap_idle(grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_idle),
    .ap_ready(grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_ready),
    .delay_lane_address0(grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_address0),
    .delay_lane_ce0(grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_ce0),
    .delay_lane_we0(grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_we0),
    .delay_lane_d0(grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_d0),
    .delay_lane_address1(grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_address1),
    .delay_lane_ce1(grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_ce1),
    .delay_lane_q1(delay_lane_q1)
);

fir_fir_Pipeline_VITIS_LOOP_14_2 grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_start),
    .ap_done(grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_done),
    .ap_idle(grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_idle),
    .ap_ready(grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_ready),
    .taps_address0(grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_taps_address0),
    .taps_ce0(grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_taps_ce0),
    .taps_q0(taps_q0),
    .result_out(grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_result_out),
    .result_out_ap_vld(grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_result_out_ap_vld),
    .delay_lane_address0(grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_delay_lane_address0),
    .delay_lane_ce0(grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_delay_lane_ce0),
    .delay_lane_q0(delay_lane_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_start_reg <= 1'b1;
        end else if ((grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_ready == 1'b1)) begin
            grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_start_reg <= 1'b1;
        end else if ((grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_ready == 1'b1)) begin
            grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        delay_lane_address0 = 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        delay_lane_address0 = grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_delay_lane_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        delay_lane_address0 = grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_address0;
    end else begin
        delay_lane_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        delay_lane_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        delay_lane_ce0 = grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_delay_lane_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        delay_lane_ce0 = grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_ce0;
    end else begin
        delay_lane_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        delay_lane_ce1 = grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_ce1;
    end else begin
        delay_lane_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        delay_lane_d0 = input_r;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        delay_lane_d0 = grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_d0;
    end else begin
        delay_lane_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        delay_lane_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        delay_lane_we0 = grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_delay_lane_we0;
    end else begin
        delay_lane_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_ap_vld = 1'b1;
    end else begin
        output_r_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_start = grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_ap_start_reg;

assign grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_start = grp_fir_Pipeline_VITIS_LOOP_9_1_fu_62_ap_start_reg;

assign output_r = grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_result_out;

assign taps_address0 = grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_taps_address0;

assign taps_ce0 = grp_fir_Pipeline_VITIS_LOOP_14_2_fu_68_taps_ce0;

endmodule //fir
