-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity durbin is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    r_ce0 : OUT STD_LOGIC;
    r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    y_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    y_ce0 : OUT STD_LOGIC;
    y_we0 : OUT STD_LOGIC;
    y_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    y_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    y_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    y_ce1 : OUT STD_LOGIC;
    y_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of durbin is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "durbin_durbin,hls_ip_2022_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.610000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2115,HLS_SYN_LUT=2049,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (43 downto 0) := "00000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (43 downto 0) := "00000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (43 downto 0) := "00000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (43 downto 0) := "00000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (43 downto 0) := "00000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (43 downto 0) := "00000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (43 downto 0) := "00001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (43 downto 0) := "00010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (43 downto 0) := "00100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (43 downto 0) := "01000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (43 downto 0) := "10000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_144_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_152 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_fu_139_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_158 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal k_1_reg_292 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln18_fu_215_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln18_reg_306 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_fu_227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_148_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal alpha_2_reg_332 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal z_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal z_ce0 : STD_LOGIC;
    signal z_we0 : STD_LOGIC;
    signal z_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_start : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_done : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_idle : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_ready : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_r_ce0 : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_y_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_y_ce0 : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_sum_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_sum_out_ap_vld : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_ce : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_339_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_339_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_339_p_ce : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_start : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_done : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_idle : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_ready : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_ce0 : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_ce1 : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_ce0 : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_we0 : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_ce : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_339_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_339_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_339_p_ce : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_start : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_done : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_idle : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_ready : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_z_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_z_ce0 : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_ce0 : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_we0 : STD_LOGIC;
    signal grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln18_fu_193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal beta_fu_48 : STD_LOGIC_VECTOR (63 downto 0);
    signal alpha_1_fu_52 : STD_LOGIC_VECTOR (63 downto 0);
    signal alpha_fu_180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_fu_56 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln18_fu_204_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln14_fu_173_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln32_fu_256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_139_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_139_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_fu_144_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_144_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_148_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln24_1_fu_232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln24_fu_236_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_139_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_139_ce : STD_LOGIC;
    signal grp_fu_144_ce : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_fu_339_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_339_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_339_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_339_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component durbin_durbin_Pipeline_VITIS_LOOP_21_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        k : IN STD_LOGIC_VECTOR (5 downto 0);
        r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        r_ce0 : OUT STD_LOGIC;
        r_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        y_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        y_ce0 : OUT STD_LOGIC;
        y_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        sum_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        sum_out_ap_vld : OUT STD_LOGIC;
        grp_fu_139_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_139_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_139_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_139_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_139_p_ce : OUT STD_LOGIC;
        grp_fu_339_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_339_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_339_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_339_p_ce : OUT STD_LOGIC );
    end component;


    component durbin_durbin_Pipeline_VITIS_LOOP_26_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        k : IN STD_LOGIC_VECTOR (5 downto 0);
        y_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        y_ce0 : OUT STD_LOGIC;
        y_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        y_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        y_ce1 : OUT STD_LOGIC;
        y_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        alpha_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        z_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        z_ce0 : OUT STD_LOGIC;
        z_we0 : OUT STD_LOGIC;
        z_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_139_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_139_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_139_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_139_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_139_p_ce : OUT STD_LOGIC;
        grp_fu_339_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_339_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_339_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_339_p_ce : OUT STD_LOGIC );
    end component;


    component durbin_durbin_Pipeline_VITIS_LOOP_29_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        k : IN STD_LOGIC_VECTOR (5 downto 0);
        z_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        z_ce0 : OUT STD_LOGIC;
        z_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        y_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        y_ce0 : OUT STD_LOGIC;
        y_we0 : OUT STD_LOGIC;
        y_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component durbin_dadddsub_64ns_64ns_64_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component durbin_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component durbin_ddiv_64ns_64ns_64_22_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component durbin_z_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    z_U : component durbin_z_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z_address0,
        ce0 => z_ce0,
        we0 => z_we0,
        d0 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_d0,
        q0 => z_q0);

    grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112 : component durbin_durbin_Pipeline_VITIS_LOOP_21_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_start,
        ap_done => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_done,
        ap_idle => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_idle,
        ap_ready => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_ready,
        k => k_1_reg_292,
        r_address0 => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_r_address0,
        r_ce0 => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_r_ce0,
        r_q0 => r_q0,
        y_address0 => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_y_address0,
        y_ce0 => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_y_ce0,
        y_q0 => y_q0,
        sum_out => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_sum_out,
        sum_out_ap_vld => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_sum_out_ap_vld,
        grp_fu_139_p_din0 => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_din0,
        grp_fu_139_p_din1 => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_din1,
        grp_fu_139_p_opcode => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_opcode,
        grp_fu_139_p_dout0 => grp_fu_139_p2,
        grp_fu_139_p_ce => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_ce,
        grp_fu_339_p_din0 => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_339_p_din0,
        grp_fu_339_p_din1 => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_339_p_din1,
        grp_fu_339_p_dout0 => grp_fu_339_p2,
        grp_fu_339_p_ce => grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_339_p_ce);

    grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122 : component durbin_durbin_Pipeline_VITIS_LOOP_26_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_start,
        ap_done => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_done,
        ap_idle => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_idle,
        ap_ready => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_ready,
        k => k_1_reg_292,
        y_address0 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_address0,
        y_ce0 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_ce0,
        y_q0 => y_q0,
        y_address1 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_address1,
        y_ce1 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_ce1,
        y_q1 => y_q1,
        alpha_2 => alpha_2_reg_332,
        z_address0 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_address0,
        z_ce0 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_ce0,
        z_we0 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_we0,
        z_d0 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_d0,
        grp_fu_139_p_din0 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_din0,
        grp_fu_139_p_din1 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_din1,
        grp_fu_139_p_opcode => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_opcode,
        grp_fu_139_p_dout0 => grp_fu_139_p2,
        grp_fu_139_p_ce => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_ce,
        grp_fu_339_p_din0 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_339_p_din0,
        grp_fu_339_p_din1 => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_339_p_din1,
        grp_fu_339_p_dout0 => grp_fu_339_p2,
        grp_fu_339_p_ce => grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_339_p_ce);

    grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131 : component durbin_durbin_Pipeline_VITIS_LOOP_29_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_start,
        ap_done => grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_done,
        ap_idle => grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_idle,
        ap_ready => grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_ready,
        k => k_1_reg_292,
        z_address0 => grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_z_address0,
        z_ce0 => grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_z_ce0,
        z_q0 => z_q0,
        y_address0 => grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_address0,
        y_ce0 => grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_ce0,
        y_we0 => grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_we0,
        y_d0 => grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_d0);

    dadddsub_64ns_64ns_64_5_full_dsp_1_U16 : component durbin_dadddsub_64ns_64ns_64_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_139_p0,
        din1 => grp_fu_139_p1,
        opcode => grp_fu_139_opcode,
        ce => grp_fu_139_ce,
        dout => grp_fu_139_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U17 : component durbin_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_144_p0,
        din1 => grp_fu_144_p1,
        ce => grp_fu_144_ce,
        dout => grp_fu_144_p2);

    ddiv_64ns_64ns_64_22_no_dsp_1_U18 : component durbin_ddiv_64ns_64ns_64_22_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 22,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_148_p0,
        din1 => reg_152,
        ce => ap_const_logic_1,
        dout => grp_fu_148_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U19 : component durbin_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_339_p0,
        din1 => grp_fu_339_p1,
        ce => grp_fu_339_ce,
        dout => grp_fu_339_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln18_fu_193_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_ready = ap_const_logic_1)) then 
                    grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                    grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_ready = ap_const_logic_1)) then 
                    grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                    grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_ready = ap_const_logic_1)) then 
                    grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    alpha_1_fu_52_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                alpha_1_fu_52 <= alpha_fu_180_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                alpha_1_fu_52 <= alpha_2_reg_332;
            end if; 
        end if;
    end process;

    beta_fu_48_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                beta_fu_48 <= ap_const_lv64_3FF0000000000000;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                beta_fu_48 <= reg_152;
            end if; 
        end if;
    end process;

    k_fu_56_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                k_fu_56 <= ap_const_lv6_1;
            elsif (((icmp_ln18_fu_193_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                k_fu_56 <= add_ln18_fu_204_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                alpha_2_reg_332 <= grp_fu_148_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                k_1_reg_292 <= k_fu_56;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state7))) then
                reg_152 <= grp_fu_144_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state17))) then
                reg_158 <= grp_fu_139_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                    zext_ln18_reg_306(5 downto 0) <= zext_ln18_fu_215_p1(5 downto 0);
            end if;
        end if;
    end process;
    zext_ln18_reg_306(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_done, grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_done, grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_done, icmp_ln18_fu_193_p2, ap_CS_fsm_state4, ap_CS_fsm_state41, ap_CS_fsm_state43)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln18_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state41) and (grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if (((grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln18_fu_204_p2 <= std_logic_vector(unsigned(k_fu_56) + unsigned(ap_const_lv6_1));
    alpha_fu_180_p1 <= xor_ln14_fu_173_p2;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;

    ap_ST_fsm_state41_blk_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_done)
    begin
        if ((grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state41_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state41_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state42_blk <= ap_const_logic_0;

    ap_ST_fsm_state43_blk_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_done)
    begin
        if ((grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state43_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state43_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state44_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_done)
    begin
        if ((grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state3, icmp_ln18_fu_193_p2)
    begin
        if (((icmp_ln18_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, icmp_ln18_fu_193_p2)
    begin
        if (((icmp_ln18_fu_193_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln24_1_fu_232_p1 <= reg_158;
    bitcast_ln24_fu_227_p1 <= r_q0;
    bitcast_ln32_fu_256_p1 <= alpha_2_reg_332;
    grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_start <= grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_start_reg;
    grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_start <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_ap_start_reg;
    grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_start <= grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_ap_start_reg;

    grp_fu_139_ce_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_ce, grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_139_ce <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_139_ce <= grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_ce;
        else 
            grp_fu_139_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_139_opcode_assign_proc : process(ap_CS_fsm_state13, grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_opcode, grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_opcode, ap_CS_fsm_state4, ap_CS_fsm_state41, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_139_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_139_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_139_opcode <= ap_const_lv2_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_139_opcode <= ap_const_lv2_0;
        else 
            grp_fu_139_opcode <= "XX";
        end if; 
    end process;


    grp_fu_139_p0_assign_proc : process(bitcast_ln24_fu_227_p1, ap_CS_fsm_state13, grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_din0, grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state41, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_139_p0 <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_139_p0 <= grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_139_p0 <= bitcast_ln24_fu_227_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_139_p0 <= ap_const_lv64_3FF0000000000000;
        else 
            grp_fu_139_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_139_p1_assign_proc : process(reg_152, ap_CS_fsm_state13, grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_sum_out, grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_din1, grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state41, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_139_p1 <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_139_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_139_p1 <= grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_139_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_139_p1 <= grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_sum_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_139_p1 <= reg_152;
        else 
            grp_fu_139_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_144_ce_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state17, ap_CS_fsm_state3, ap_CS_fsm_state13, grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_done, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_ap_done = ap_const_logic_1)))) then 
            grp_fu_144_ce <= ap_const_logic_1;
        else 
            grp_fu_144_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_144_p0_assign_proc : process(reg_158, ap_CS_fsm_state3, ap_CS_fsm_state13, alpha_1_fu_52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_144_p0 <= reg_158;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_144_p0 <= alpha_1_fu_52;
        else 
            grp_fu_144_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_144_p1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state13, beta_fu_48, alpha_1_fu_52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_144_p1 <= beta_fu_48;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_144_p1 <= alpha_1_fu_52;
        else 
            grp_fu_144_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_148_p0 <= xor_ln24_fu_236_p2;

    grp_fu_339_ce_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_339_p_ce, grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_339_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_339_ce <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_339_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_339_ce <= grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_339_p_ce;
        else 
            grp_fu_339_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_339_p0_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_339_p_din0, grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_339_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_339_p0 <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_339_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_339_p0 <= grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_339_p_din0;
        else 
            grp_fu_339_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_339_p1_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_339_p_din1, grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_339_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_339_p1 <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_grp_fu_339_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_339_p1 <= grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_grp_fu_339_p_din1;
        else 
            grp_fu_339_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln18_fu_193_p2 <= "1" when (k_fu_56 = ap_const_lv6_28) else "0";

    r_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state12, zext_ln18_fu_215_p1, grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_r_address0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_address0 <= zext_ln18_fu_215_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            r_address0 <= ap_const_lv64_0(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_address0 <= grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_r_address0;
        else 
            r_address0 <= "XXXXXX";
        end if; 
    end process;


    r_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state12, grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_r_ce0, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            r_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_ce0 <= grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_r_ce0;
        else 
            r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln14_fu_173_p2 <= (r_q0 xor ap_const_lv64_8000000000000000);
    xor_ln24_fu_236_p2 <= (bitcast_ln24_1_fu_232_p1 xor ap_const_lv64_8000000000000000);

    y_address0_assign_proc : process(zext_ln18_reg_306, grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_y_address0, grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_address0, grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_address0, ap_CS_fsm_state4, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state2, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            y_address0 <= zext_ln18_reg_306(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            y_address0 <= ap_const_lv64_0(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            y_address0 <= grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            y_address0 <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            y_address0 <= grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_y_address0;
        else 
            y_address0 <= "XXXXXX";
        end if; 
    end process;

    y_address1 <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_address1;

    y_ce0_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_y_ce0, grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_ce0, grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_ce0, ap_CS_fsm_state4, ap_CS_fsm_state41, ap_CS_fsm_state43, ap_CS_fsm_state2, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            y_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            y_ce0 <= grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            y_ce0 <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            y_ce0 <= grp_durbin_Pipeline_VITIS_LOOP_21_2_fu_112_y_ce0;
        else 
            y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    y_ce1_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_ce1, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            y_ce1 <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_y_ce1;
        else 
            y_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    y_d0_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_d0, ap_CS_fsm_state43, ap_CS_fsm_state2, ap_CS_fsm_state44, xor_ln14_fu_173_p2, bitcast_ln32_fu_256_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            y_d0 <= bitcast_ln32_fu_256_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            y_d0 <= xor_ln14_fu_173_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            y_d0 <= grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_d0;
        else 
            y_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_we0_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_we0, ap_CS_fsm_state43, ap_CS_fsm_state2, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            y_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            y_we0 <= grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_y_we0;
        else 
            y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    z_address0_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_address0, grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_z_address0, ap_CS_fsm_state41, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            z_address0 <= grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_z_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            z_address0 <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_address0;
        else 
            z_address0 <= "XXXXXX";
        end if; 
    end process;


    z_ce0_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_ce0, grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_z_ce0, ap_CS_fsm_state41, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            z_ce0 <= grp_durbin_Pipeline_VITIS_LOOP_29_4_fu_131_z_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            z_ce0 <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_ce0;
        else 
            z_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z_we0_assign_proc : process(grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_we0, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            z_we0 <= grp_durbin_Pipeline_VITIS_LOOP_26_3_fu_122_z_we0;
        else 
            z_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln18_fu_215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_292),64));
end behav;
