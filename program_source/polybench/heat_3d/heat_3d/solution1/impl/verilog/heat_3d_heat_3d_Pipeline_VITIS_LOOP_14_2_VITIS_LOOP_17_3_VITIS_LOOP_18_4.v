// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module heat_3d_heat_3d_Pipeline_VITIS_LOOP_14_2_VITIS_LOOP_17_3_VITIS_LOOP_18_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_address0,
        A_ce0,
        A_q0,
        A_address1,
        A_ce1,
        A_q1,
        B_address0,
        B_ce0,
        B_we0,
        B_d0,
        grp_fu_99_p_din0,
        grp_fu_99_p_din1,
        grp_fu_99_p_opcode,
        grp_fu_99_p_dout0,
        grp_fu_99_p_ce,
        grp_fu_103_p_din0,
        grp_fu_103_p_din1,
        grp_fu_103_p_opcode,
        grp_fu_103_p_dout0,
        grp_fu_103_p_ce,
        grp_fu_107_p_din0,
        grp_fu_107_p_din1,
        grp_fu_107_p_opcode,
        grp_fu_107_p_dout0,
        grp_fu_107_p_ce,
        grp_fu_111_p_din0,
        grp_fu_111_p_din1,
        grp_fu_111_p_dout0,
        grp_fu_111_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] A_address0;
output   A_ce0;
input  [63:0] A_q0;
output  [12:0] A_address1;
output   A_ce1;
input  [63:0] A_q1;
output  [12:0] B_address0;
output   B_ce0;
output   B_we0;
output  [63:0] B_d0;
output  [63:0] grp_fu_99_p_din0;
output  [63:0] grp_fu_99_p_din1;
output  [1:0] grp_fu_99_p_opcode;
input  [63:0] grp_fu_99_p_dout0;
output   grp_fu_99_p_ce;
output  [63:0] grp_fu_103_p_din0;
output  [63:0] grp_fu_103_p_din1;
output  [1:0] grp_fu_103_p_opcode;
input  [63:0] grp_fu_103_p_dout0;
output   grp_fu_103_p_ce;
output  [63:0] grp_fu_107_p_din0;
output  [63:0] grp_fu_107_p_din1;
output  [1:0] grp_fu_107_p_opcode;
input  [63:0] grp_fu_107_p_dout0;
output   grp_fu_107_p_ce;
output  [63:0] grp_fu_111_p_din0;
output  [63:0] grp_fu_111_p_din1;
input  [63:0] grp_fu_111_p_dout0;
output   grp_fu_111_p_ce;

reg ap_idle;
reg[12:0] A_address0;
reg A_ce0;
reg[12:0] A_address1;
reg A_ce1;
reg B_ce0;
reg B_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_state16_pp0_stage3_iter3;
wire    ap_block_state20_pp0_stage3_iter4;
wire    ap_block_state24_pp0_stage3_iter5;
wire    ap_block_state28_pp0_stage3_iter6;
wire    ap_block_state32_pp0_stage3_iter7;
wire    ap_block_state36_pp0_stage3_iter8;
wire    ap_block_state40_pp0_stage3_iter9;
wire    ap_block_state44_pp0_stage3_iter10;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln14_reg_863;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [63:0] reg_190;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_state17_pp0_stage0_iter4;
wire    ap_block_state21_pp0_stage0_iter5;
wire    ap_block_state25_pp0_stage0_iter6;
wire    ap_block_state29_pp0_stage0_iter7;
wire    ap_block_state33_pp0_stage0_iter8;
wire    ap_block_state37_pp0_stage0_iter9;
wire    ap_block_state41_pp0_stage0_iter10;
wire    ap_block_state45_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state14_pp0_stage1_iter3;
wire    ap_block_state18_pp0_stage1_iter4;
wire    ap_block_state22_pp0_stage1_iter5;
wire    ap_block_state26_pp0_stage1_iter6;
wire    ap_block_state30_pp0_stage1_iter7;
wire    ap_block_state34_pp0_stage1_iter8;
wire    ap_block_state38_pp0_stage1_iter9;
wire    ap_block_state42_pp0_stage1_iter10;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln14_fu_222_p2;
reg   [0:0] icmp_ln14_reg_863_pp0_iter1_reg;
reg   [0:0] icmp_ln14_reg_863_pp0_iter2_reg;
reg   [0:0] icmp_ln14_reg_863_pp0_iter3_reg;
reg   [0:0] icmp_ln14_reg_863_pp0_iter4_reg;
reg   [0:0] icmp_ln14_reg_863_pp0_iter5_reg;
reg   [0:0] icmp_ln14_reg_863_pp0_iter6_reg;
reg   [0:0] icmp_ln14_reg_863_pp0_iter7_reg;
reg   [0:0] icmp_ln14_reg_863_pp0_iter8_reg;
reg   [0:0] icmp_ln14_reg_863_pp0_iter9_reg;
reg   [9:0] indvar_flatten_load_reg_867;
reg   [4:0] i_load_reg_872;
wire   [0:0] icmp_ln17_fu_240_p2;
reg   [0:0] icmp_ln17_reg_880;
wire   [4:0] indvars_iv_next5832_fu_246_p2;
reg   [4:0] indvars_iv_next5832_reg_893;
wire   [4:0] select_ln17_fu_441_p3;
reg   [4:0] select_ln17_reg_899;
wire   [12:0] add_ln19_8_fu_527_p2;
reg   [12:0] add_ln19_8_reg_905;
wire   [12:0] add_ln19_15_fu_675_p2;
reg   [12:0] add_ln19_15_reg_911;
wire   [12:0] add_ln19_16_fu_681_p2;
reg   [12:0] add_ln19_16_reg_916;
wire   [12:0] add_ln19_17_fu_687_p2;
reg   [12:0] add_ln19_17_reg_921;
reg   [12:0] add_ln19_17_reg_921_pp0_iter1_reg;
reg   [12:0] add_ln19_17_reg_921_pp0_iter2_reg;
wire   [12:0] add_ln19_18_fu_693_p2;
reg   [12:0] add_ln19_18_reg_926;
wire   [12:0] add_ln19_19_fu_699_p2;
reg   [12:0] add_ln19_19_reg_931;
reg   [12:0] add_ln19_19_reg_931_pp0_iter1_reg;
reg   [12:0] add_ln19_19_reg_931_pp0_iter2_reg;
wire   [63:0] zext_ln19_16_fu_715_p1;
reg   [63:0] zext_ln19_16_reg_936;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state15_pp0_stage2_iter3;
wire    ap_block_state19_pp0_stage2_iter4;
wire    ap_block_state23_pp0_stage2_iter5;
wire    ap_block_state27_pp0_stage2_iter6;
wire    ap_block_state31_pp0_stage2_iter7;
wire    ap_block_state35_pp0_stage2_iter8;
wire    ap_block_state39_pp0_stage2_iter9;
wire    ap_block_state43_pp0_stage2_iter10;
wire    ap_block_pp0_stage2_11001;
reg   [63:0] zext_ln19_16_reg_936_pp0_iter1_reg;
reg   [63:0] zext_ln19_16_reg_936_pp0_iter2_reg;
reg   [63:0] zext_ln19_16_reg_936_pp0_iter3_reg;
reg   [63:0] zext_ln19_16_reg_936_pp0_iter4_reg;
reg   [63:0] zext_ln19_16_reg_936_pp0_iter5_reg;
reg   [63:0] zext_ln19_16_reg_936_pp0_iter6_reg;
reg   [63:0] zext_ln19_16_reg_936_pp0_iter7_reg;
reg   [63:0] zext_ln19_16_reg_936_pp0_iter8_reg;
reg   [63:0] zext_ln19_16_reg_936_pp0_iter9_reg;
reg   [63:0] zext_ln19_16_reg_936_pp0_iter10_reg;
wire   [63:0] bitcast_ln19_1_fu_736_p1;
reg   [63:0] bitcast_ln19_1_reg_946;
reg   [63:0] bitcast_ln19_1_reg_946_pp0_iter2_reg;
reg   [63:0] bitcast_ln19_1_reg_946_pp0_iter3_reg;
reg   [63:0] bitcast_ln19_1_reg_946_pp0_iter4_reg;
reg   [63:0] bitcast_ln19_1_reg_946_pp0_iter5_reg;
reg   [63:0] bitcast_ln19_1_reg_946_pp0_iter6_reg;
reg   [63:0] bitcast_ln19_1_reg_946_pp0_iter7_reg;
reg   [63:0] bitcast_ln19_1_reg_946_pp0_iter8_reg;
reg   [63:0] bitcast_ln19_1_reg_946_pp0_iter9_reg;
wire   [12:0] add_ln19_20_fu_750_p2;
reg   [12:0] add_ln19_20_reg_952;
wire   [12:0] add_ln19_21_fu_764_p2;
reg   [12:0] add_ln19_21_reg_957;
reg   [12:0] add_ln19_21_reg_957_pp0_iter2_reg;
reg   [63:0] A_load_reg_972;
reg   [63:0] A_load_3_reg_977;
reg   [63:0] mul_reg_987;
wire   [63:0] bitcast_ln19_fu_786_p1;
wire   [63:0] bitcast_ln19_3_fu_790_p1;
wire   [63:0] bitcast_ln19_5_fu_794_p1;
reg   [63:0] A_load_2_reg_1019;
reg   [63:0] A_load_4_reg_1024;
reg   [63:0] sub_reg_1034;
reg   [63:0] sub1_reg_1039;
reg   [63:0] sub2_reg_1044;
wire   [63:0] bitcast_ln19_2_fu_811_p1;
wire   [63:0] bitcast_ln19_4_fu_815_p1;
wire   [63:0] bitcast_ln19_6_fu_819_p1;
reg   [63:0] add_reg_1064;
reg   [63:0] add1_reg_1069;
reg   [63:0] add3_reg_1074;
reg   [63:0] mul1_reg_1079;
reg   [63:0] mul2_reg_1084;
reg   [63:0] mul3_reg_1089;
reg   [63:0] mul3_reg_1089_pp0_iter7_reg;
reg   [63:0] add2_reg_1094;
reg   [63:0] add4_reg_1099;
reg   [63:0] add5_reg_1104;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln19_15_fu_774_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln19_18_fu_778_p1;
wire   [63:0] zext_ln19_21_fu_782_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln19_17_fu_799_p1;
wire   [63:0] zext_ln19_19_fu_803_p1;
wire   [63:0] zext_ln19_23_fu_807_p1;
wire    ap_block_pp0_stage0;
reg   [4:0] k_fu_74;
wire   [4:0] add_ln19_fu_741_p2;
wire    ap_loop_init;
reg   [4:0] j_fu_78;
wire   [4:0] select_ln17_1_fu_449_p3;
reg   [9:0] indvar_flatten_fu_82;
wire   [9:0] select_ln17_4_fu_724_p3;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [4:0] i_fu_86;
wire   [4:0] select_ln14_1_fu_282_p3;
reg   [4:0] ap_sig_allocacmp_i_load;
reg   [12:0] indvar_flatten24_fu_90;
wire   [12:0] add_ln14_fu_228_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten24_load;
reg   [63:0] grp_fu_172_p0;
reg   [63:0] grp_fu_172_p1;
reg   [63:0] grp_fu_176_p0;
reg   [63:0] grp_fu_176_p1;
reg   [63:0] grp_fu_180_p0;
reg   [63:0] grp_fu_180_p1;
reg   [63:0] grp_fu_184_p0;
reg   [63:0] grp_fu_184_p1;
wire   [8:0] tmp_fu_287_p3;
wire   [6:0] tmp_1_fu_299_p3;
wire   [9:0] zext_ln19_fu_295_p1;
wire   [9:0] zext_ln19_1_fu_307_p1;
wire   [4:0] indvars_iv_next58_mid1_fu_317_p2;
wire   [4:0] select_ln14_2_fu_322_p3;
wire   [8:0] tmp_2_fu_328_p3;
wire   [6:0] tmp_3_fu_340_p3;
wire   [9:0] zext_ln19_2_fu_336_p1;
wire   [9:0] zext_ln19_3_fu_348_p1;
wire   [4:0] empty_12_fu_358_p2;
wire   [4:0] select_ln14_3_fu_363_p3;
wire   [8:0] tmp_4_fu_369_p3;
wire   [6:0] tmp_5_fu_381_p3;
wire   [9:0] zext_ln19_4_fu_377_p1;
wire   [9:0] zext_ln19_5_fu_389_p1;
wire   [4:0] indvars_iv_next54_fu_260_p2;
wire   [4:0] empty_fu_266_p2;
wire   [0:0] icmp_ln18_fu_418_p2;
wire   [0:0] xor_ln14_fu_413_p2;
wire   [4:0] select_ln14_fu_275_p3;
wire   [0:0] and_ln14_fu_424_p2;
wire   [0:0] or_ln17_fu_436_p2;
wire   [4:0] indvars_iv_next54_dup_fu_430_p2;
wire   [9:0] add_ln19_3_fu_352_p2;
wire   [9:0] zext_ln19_6_fu_457_p1;
wire   [9:0] add_ln19_5_fu_461_p2;
wire   [8:0] trunc_ln19_fu_467_p1;
wire   [11:0] tmp_10_fu_479_p3;
wire   [12:0] p_shl8_fu_471_p3;
wire   [12:0] zext_ln19_7_fu_487_p1;
wire   [9:0] add_ln19_2_fu_311_p2;
wire   [9:0] add_ln19_7_fu_497_p2;
wire   [8:0] trunc_ln19_1_fu_503_p1;
wire   [11:0] tmp_11_fu_515_p3;
wire   [12:0] p_shl6_fu_507_p3;
wire   [12:0] zext_ln19_8_fu_523_p1;
wire   [9:0] add_ln19_4_fu_393_p2;
wire   [9:0] add_ln19_9_fu_533_p2;
wire   [8:0] trunc_ln19_2_fu_539_p1;
wire   [11:0] tmp_12_fu_551_p3;
wire   [12:0] p_shl4_fu_543_p3;
wire   [12:0] zext_ln19_9_fu_559_p1;
wire   [4:0] indvars_iv_next54_mid1_fu_569_p2;
wire   [4:0] select_ln14_4_fu_399_p3;
wire   [4:0] select_ln17_2_fu_575_p3;
wire   [9:0] zext_ln19_10_fu_583_p1;
wire   [9:0] add_ln19_11_fu_587_p2;
wire   [8:0] trunc_ln19_3_fu_593_p1;
wire   [11:0] tmp_13_fu_605_p3;
wire   [12:0] p_shl2_fu_597_p3;
wire   [12:0] zext_ln19_11_fu_613_p1;
wire   [4:0] select_ln14_5_fu_406_p3;
wire   [4:0] select_ln17_3_fu_623_p3;
wire   [9:0] zext_ln19_12_fu_631_p1;
wire   [9:0] add_ln19_13_fu_635_p2;
wire   [8:0] trunc_ln19_4_fu_641_p1;
wire   [11:0] tmp_14_fu_653_p3;
wire   [12:0] p_shl_fu_645_p3;
wire   [12:0] zext_ln19_13_fu_661_p1;
wire   [12:0] add_ln19_6_fu_491_p2;
wire   [12:0] zext_ln19_14_fu_671_p1;
wire   [12:0] add_ln19_10_fu_563_p2;
wire   [12:0] add_ln19_12_fu_617_p2;
wire   [12:0] add_ln19_14_fu_665_p2;
wire   [9:0] add_ln17_fu_719_p2;
wire   [12:0] zext_ln19_20_fu_746_p1;
wire   [4:0] add_ln19_1_fu_755_p2;
wire   [12:0] zext_ln19_22_fu_760_p1;
reg   [1:0] grp_fu_172_opcode;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
reg   [1:0] grp_fu_176_opcode;
reg   [1:0] grp_fu_180_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter10_stage0;
reg    ap_idle_pp0_0to9;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_1to11;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

heat_3d_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_86 <= 5'd1;
    end else if (((icmp_ln14_reg_863 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_86 <= select_ln14_1_fu_282_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_fu_222_p2 == 1'd0))) begin
            indvar_flatten24_fu_90 <= add_ln14_fu_228_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten24_fu_90 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_82 <= 10'd0;
    end else if (((icmp_ln14_reg_863 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        indvar_flatten_fu_82 <= select_ln17_4_fu_724_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_78 <= 5'd1;
    end else if (((icmp_ln14_reg_863 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_fu_78 <= select_ln17_1_fu_449_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_74 <= 5'd1;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            k_fu_74 <= add_ln19_fu_741_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        A_load_2_reg_1019 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        A_load_3_reg_977 <= A_q0;
        A_load_reg_972 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_load_4_reg_1024 <= A_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add1_reg_1069 <= grp_fu_103_p_dout0;
        add3_reg_1074 <= grp_fu_107_p_dout0;
        add_reg_1064 <= grp_fu_99_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add2_reg_1094 <= grp_fu_99_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add4_reg_1099 <= grp_fu_99_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add5_reg_1104 <= grp_fu_103_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_863 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln19_15_reg_911 <= add_ln19_15_fu_675_p2;
        add_ln19_16_reg_916 <= add_ln19_16_fu_681_p2;
        add_ln19_17_reg_921 <= add_ln19_17_fu_687_p2;
        add_ln19_18_reg_926 <= add_ln19_18_fu_693_p2;
        add_ln19_19_reg_931 <= add_ln19_19_fu_699_p2;
        add_ln19_8_reg_905[12 : 2] <= add_ln19_8_fu_527_p2[12 : 2];
        select_ln17_reg_899 <= select_ln17_fu_441_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln19_17_reg_921_pp0_iter1_reg <= add_ln19_17_reg_921;
        add_ln19_17_reg_921_pp0_iter2_reg <= add_ln19_17_reg_921_pp0_iter1_reg;
        add_ln19_19_reg_931_pp0_iter1_reg <= add_ln19_19_reg_931;
        add_ln19_19_reg_931_pp0_iter2_reg <= add_ln19_19_reg_931_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln19_20_reg_952 <= add_ln19_20_fu_750_p2;
        add_ln19_21_reg_957 <= add_ln19_21_fu_764_p2;
        add_ln19_21_reg_957_pp0_iter2_reg <= add_ln19_21_reg_957;
        bitcast_ln19_1_reg_946 <= bitcast_ln19_1_fu_736_p1;
        bitcast_ln19_1_reg_946_pp0_iter2_reg <= bitcast_ln19_1_reg_946;
        bitcast_ln19_1_reg_946_pp0_iter3_reg <= bitcast_ln19_1_reg_946_pp0_iter2_reg;
        bitcast_ln19_1_reg_946_pp0_iter4_reg <= bitcast_ln19_1_reg_946_pp0_iter3_reg;
        bitcast_ln19_1_reg_946_pp0_iter5_reg <= bitcast_ln19_1_reg_946_pp0_iter4_reg;
        bitcast_ln19_1_reg_946_pp0_iter6_reg <= bitcast_ln19_1_reg_946_pp0_iter5_reg;
        bitcast_ln19_1_reg_946_pp0_iter7_reg <= bitcast_ln19_1_reg_946_pp0_iter6_reg;
        bitcast_ln19_1_reg_946_pp0_iter8_reg <= bitcast_ln19_1_reg_946_pp0_iter7_reg;
        bitcast_ln19_1_reg_946_pp0_iter9_reg <= bitcast_ln19_1_reg_946_pp0_iter8_reg;
        icmp_ln14_reg_863 <= icmp_ln14_fu_222_p2;
        icmp_ln14_reg_863_pp0_iter1_reg <= icmp_ln14_reg_863;
        icmp_ln14_reg_863_pp0_iter2_reg <= icmp_ln14_reg_863_pp0_iter1_reg;
        icmp_ln14_reg_863_pp0_iter3_reg <= icmp_ln14_reg_863_pp0_iter2_reg;
        icmp_ln14_reg_863_pp0_iter4_reg <= icmp_ln14_reg_863_pp0_iter3_reg;
        icmp_ln14_reg_863_pp0_iter5_reg <= icmp_ln14_reg_863_pp0_iter4_reg;
        icmp_ln14_reg_863_pp0_iter6_reg <= icmp_ln14_reg_863_pp0_iter5_reg;
        icmp_ln14_reg_863_pp0_iter7_reg <= icmp_ln14_reg_863_pp0_iter6_reg;
        icmp_ln14_reg_863_pp0_iter8_reg <= icmp_ln14_reg_863_pp0_iter7_reg;
        icmp_ln14_reg_863_pp0_iter9_reg <= icmp_ln14_reg_863_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln14_fu_222_p2 == 1'd0))) begin
        i_load_reg_872 <= ap_sig_allocacmp_i_load;
        icmp_ln17_reg_880 <= icmp_ln17_fu_240_p2;
        indvar_flatten_load_reg_867 <= ap_sig_allocacmp_indvar_flatten_load;
        indvars_iv_next5832_reg_893 <= indvars_iv_next5832_fu_246_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul1_reg_1079 <= grp_fu_111_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul2_reg_1084 <= grp_fu_111_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul3_reg_1089 <= grp_fu_111_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul3_reg_1089_pp0_iter7_reg <= mul3_reg_1089;
        zext_ln19_16_reg_936_pp0_iter10_reg[12 : 0] <= zext_ln19_16_reg_936_pp0_iter9_reg[12 : 0];
        zext_ln19_16_reg_936_pp0_iter1_reg[12 : 0] <= zext_ln19_16_reg_936[12 : 0];
        zext_ln19_16_reg_936_pp0_iter2_reg[12 : 0] <= zext_ln19_16_reg_936_pp0_iter1_reg[12 : 0];
        zext_ln19_16_reg_936_pp0_iter3_reg[12 : 0] <= zext_ln19_16_reg_936_pp0_iter2_reg[12 : 0];
        zext_ln19_16_reg_936_pp0_iter4_reg[12 : 0] <= zext_ln19_16_reg_936_pp0_iter3_reg[12 : 0];
        zext_ln19_16_reg_936_pp0_iter5_reg[12 : 0] <= zext_ln19_16_reg_936_pp0_iter4_reg[12 : 0];
        zext_ln19_16_reg_936_pp0_iter6_reg[12 : 0] <= zext_ln19_16_reg_936_pp0_iter5_reg[12 : 0];
        zext_ln19_16_reg_936_pp0_iter7_reg[12 : 0] <= zext_ln19_16_reg_936_pp0_iter6_reg[12 : 0];
        zext_ln19_16_reg_936_pp0_iter8_reg[12 : 0] <= zext_ln19_16_reg_936_pp0_iter7_reg[12 : 0];
        zext_ln19_16_reg_936_pp0_iter9_reg[12 : 0] <= zext_ln19_16_reg_936_pp0_iter8_reg[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_reg_987 <= grp_fu_111_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln14_reg_863 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_190 <= A_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sub1_reg_1039 <= grp_fu_103_p_dout0;
        sub2_reg_1044 <= grp_fu_107_p_dout0;
        sub_reg_1034 <= grp_fu_99_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_reg_863 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        zext_ln19_16_reg_936[12 : 0] <= zext_ln19_16_fu_715_p1[12 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_address0 = zext_ln19_23_fu_807_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        A_address0 = zext_ln19_21_fu_782_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A_address0 = zext_ln19_18_fu_778_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        A_address0 = zext_ln19_16_fu_715_p1;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        A_address1 = zext_ln19_19_fu_803_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        A_address1 = zext_ln19_17_fu_799_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A_address1 = zext_ln19_15_fu_774_p1;
    end else begin
        A_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        A_ce1 = 1'b1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B_we0 = 1'b1;
    end else begin
        B_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_863 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln14_reg_863_pp0_iter9_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to9 = 1'b1;
    end else begin
        ap_idle_pp0_0to9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to11 = 1'b1;
    end else begin
        ap_idle_pp0_1to11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 5'd1;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten24_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten24_load = indvar_flatten24_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_82;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_172_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_172_opcode = 2'd0;
    end else begin
        grp_fu_172_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_172_p0 = add2_reg_1094;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_172_p0 = mul1_reg_1079;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_172_p0 = sub_reg_1034;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_172_p0 = bitcast_ln19_fu_786_p1;
    end else begin
        grp_fu_172_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_172_p1 = mul3_reg_1089_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_172_p1 = mul2_reg_1084;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_172_p1 = bitcast_ln19_2_fu_811_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_172_p1 = mul_reg_987;
    end else begin
        grp_fu_172_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_176_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_176_opcode = 2'd0;
    end else begin
        grp_fu_176_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_176_p0 = add4_reg_1099;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_176_p0 = sub1_reg_1039;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_176_p0 = bitcast_ln19_3_fu_790_p1;
    end else begin
        grp_fu_176_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_176_p1 = bitcast_ln19_1_reg_946_pp0_iter9_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_176_p1 = bitcast_ln19_4_fu_815_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_176_p1 = mul_reg_987;
    end else begin
        grp_fu_176_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_180_opcode = 2'd1;
    end else if (((1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_180_opcode = 2'd0;
    end else begin
        grp_fu_180_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_180_p0 = sub2_reg_1044;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_180_p0 = bitcast_ln19_5_fu_794_p1;
    end else begin
        grp_fu_180_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_180_p1 = bitcast_ln19_6_fu_819_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_180_p1 = mul_reg_987;
    end else begin
        grp_fu_180_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_184_p0 = add3_reg_1074;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_184_p0 = add1_reg_1069;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_184_p0 = add_reg_1064;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_184_p0 = bitcast_ln19_1_fu_736_p1;
    end else begin
        grp_fu_184_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_184_p1 = 64'd4593671619917905920;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_184_p1 = 64'd4611686018427387904;
    end else begin
        grp_fu_184_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to11 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_address0 = zext_ln19_16_reg_936_pp0_iter10_reg;

assign B_d0 = add5_reg_1104;

assign add_ln14_fu_228_p2 = (ap_sig_allocacmp_indvar_flatten24_load + 13'd1);

assign add_ln17_fu_719_p2 = (indvar_flatten_load_reg_867 + 10'd1);

assign add_ln19_10_fu_563_p2 = (p_shl4_fu_543_p3 + zext_ln19_9_fu_559_p1);

assign add_ln19_11_fu_587_p2 = (add_ln19_2_fu_311_p2 + zext_ln19_10_fu_583_p1);

assign add_ln19_12_fu_617_p2 = (p_shl2_fu_597_p3 + zext_ln19_11_fu_613_p1);

assign add_ln19_13_fu_635_p2 = (add_ln19_2_fu_311_p2 + zext_ln19_12_fu_631_p1);

assign add_ln19_14_fu_665_p2 = (p_shl_fu_645_p3 + zext_ln19_13_fu_661_p1);

assign add_ln19_15_fu_675_p2 = (add_ln19_6_fu_491_p2 + zext_ln19_14_fu_671_p1);

assign add_ln19_16_fu_681_p2 = (add_ln19_8_fu_527_p2 + zext_ln19_14_fu_671_p1);

assign add_ln19_17_fu_687_p2 = (add_ln19_10_fu_563_p2 + zext_ln19_14_fu_671_p1);

assign add_ln19_18_fu_693_p2 = (add_ln19_12_fu_617_p2 + zext_ln19_14_fu_671_p1);

assign add_ln19_19_fu_699_p2 = (add_ln19_14_fu_665_p2 + zext_ln19_14_fu_671_p1);

assign add_ln19_1_fu_755_p2 = ($signed(select_ln17_reg_899) + $signed(5'd31));

assign add_ln19_20_fu_750_p2 = (add_ln19_8_reg_905 + zext_ln19_20_fu_746_p1);

assign add_ln19_21_fu_764_p2 = (add_ln19_8_reg_905 + zext_ln19_22_fu_760_p1);

assign add_ln19_2_fu_311_p2 = (zext_ln19_fu_295_p1 + zext_ln19_1_fu_307_p1);

assign add_ln19_3_fu_352_p2 = (zext_ln19_2_fu_336_p1 + zext_ln19_3_fu_348_p1);

assign add_ln19_4_fu_393_p2 = (zext_ln19_4_fu_377_p1 + zext_ln19_5_fu_389_p1);

assign add_ln19_5_fu_461_p2 = (add_ln19_3_fu_352_p2 + zext_ln19_6_fu_457_p1);

assign add_ln19_6_fu_491_p2 = (p_shl8_fu_471_p3 + zext_ln19_7_fu_487_p1);

assign add_ln19_7_fu_497_p2 = (add_ln19_2_fu_311_p2 + zext_ln19_6_fu_457_p1);

assign add_ln19_8_fu_527_p2 = (p_shl6_fu_507_p3 + zext_ln19_8_fu_523_p1);

assign add_ln19_9_fu_533_p2 = (add_ln19_4_fu_393_p2 + zext_ln19_6_fu_457_p1);

assign add_ln19_fu_741_p2 = (select_ln17_reg_899 + 5'd1);

assign and_ln14_fu_424_p2 = (xor_ln14_fu_413_p2 & icmp_ln18_fu_418_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign bitcast_ln19_1_fu_736_p1 = reg_190;

assign bitcast_ln19_2_fu_811_p1 = A_load_2_reg_1019;

assign bitcast_ln19_3_fu_790_p1 = A_load_3_reg_977;

assign bitcast_ln19_4_fu_815_p1 = A_load_4_reg_1024;

assign bitcast_ln19_5_fu_794_p1 = reg_190;

assign bitcast_ln19_6_fu_819_p1 = reg_190;

assign bitcast_ln19_fu_786_p1 = A_load_reg_972;

assign empty_12_fu_358_p2 = ($signed(i_load_reg_872) + $signed(5'd31));

assign empty_fu_266_p2 = ($signed(j_fu_78) + $signed(5'd31));

assign grp_fu_103_p_ce = 1'b1;

assign grp_fu_103_p_din0 = grp_fu_176_p0;

assign grp_fu_103_p_din1 = grp_fu_176_p1;

assign grp_fu_103_p_opcode = grp_fu_176_opcode;

assign grp_fu_107_p_ce = 1'b1;

assign grp_fu_107_p_din0 = grp_fu_180_p0;

assign grp_fu_107_p_din1 = grp_fu_180_p1;

assign grp_fu_107_p_opcode = grp_fu_180_opcode;

assign grp_fu_111_p_ce = 1'b1;

assign grp_fu_111_p_din0 = grp_fu_184_p0;

assign grp_fu_111_p_din1 = grp_fu_184_p1;

assign grp_fu_99_p_ce = 1'b1;

assign grp_fu_99_p_din0 = grp_fu_172_p0;

assign grp_fu_99_p_din1 = grp_fu_172_p1;

assign grp_fu_99_p_opcode = grp_fu_172_opcode;

assign icmp_ln14_fu_222_p2 = ((ap_sig_allocacmp_indvar_flatten24_load == 13'd5832) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_240_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd324) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_418_p2 = ((k_fu_74 == 5'd19) ? 1'b1 : 1'b0);

assign indvars_iv_next54_dup_fu_430_p2 = (select_ln14_fu_275_p3 + 5'd1);

assign indvars_iv_next54_fu_260_p2 = (j_fu_78 + 5'd1);

assign indvars_iv_next54_mid1_fu_569_p2 = (select_ln14_fu_275_p3 + 5'd2);

assign indvars_iv_next5832_fu_246_p2 = (ap_sig_allocacmp_i_load + 5'd1);

assign indvars_iv_next58_mid1_fu_317_p2 = (i_load_reg_872 + 5'd2);

assign or_ln17_fu_436_p2 = (icmp_ln17_reg_880 | and_ln14_fu_424_p2);

assign p_shl2_fu_597_p3 = {{trunc_ln19_3_fu_593_p1}, {4'd0}};

assign p_shl4_fu_543_p3 = {{trunc_ln19_2_fu_539_p1}, {4'd0}};

assign p_shl6_fu_507_p3 = {{trunc_ln19_1_fu_503_p1}, {4'd0}};

assign p_shl8_fu_471_p3 = {{trunc_ln19_fu_467_p1}, {4'd0}};

assign p_shl_fu_645_p3 = {{trunc_ln19_4_fu_641_p1}, {4'd0}};

assign select_ln14_1_fu_282_p3 = ((icmp_ln17_reg_880[0:0] == 1'b1) ? indvars_iv_next5832_reg_893 : i_load_reg_872);

assign select_ln14_2_fu_322_p3 = ((icmp_ln17_reg_880[0:0] == 1'b1) ? indvars_iv_next58_mid1_fu_317_p2 : indvars_iv_next5832_reg_893);

assign select_ln14_3_fu_363_p3 = ((icmp_ln17_reg_880[0:0] == 1'b1) ? i_load_reg_872 : empty_12_fu_358_p2);

assign select_ln14_4_fu_399_p3 = ((icmp_ln17_reg_880[0:0] == 1'b1) ? 5'd2 : indvars_iv_next54_fu_260_p2);

assign select_ln14_5_fu_406_p3 = ((icmp_ln17_reg_880[0:0] == 1'b1) ? 5'd0 : empty_fu_266_p2);

assign select_ln14_fu_275_p3 = ((icmp_ln17_reg_880[0:0] == 1'b1) ? 5'd1 : j_fu_78);

assign select_ln17_1_fu_449_p3 = ((and_ln14_fu_424_p2[0:0] == 1'b1) ? indvars_iv_next54_dup_fu_430_p2 : select_ln14_fu_275_p3);

assign select_ln17_2_fu_575_p3 = ((and_ln14_fu_424_p2[0:0] == 1'b1) ? indvars_iv_next54_mid1_fu_569_p2 : select_ln14_4_fu_399_p3);

assign select_ln17_3_fu_623_p3 = ((and_ln14_fu_424_p2[0:0] == 1'b1) ? select_ln14_fu_275_p3 : select_ln14_5_fu_406_p3);

assign select_ln17_4_fu_724_p3 = ((icmp_ln17_reg_880[0:0] == 1'b1) ? 10'd1 : add_ln17_fu_719_p2);

assign select_ln17_fu_441_p3 = ((or_ln17_fu_436_p2[0:0] == 1'b1) ? 5'd1 : k_fu_74);

assign tmp_10_fu_479_p3 = {{add_ln19_5_fu_461_p2}, {2'd0}};

assign tmp_11_fu_515_p3 = {{add_ln19_7_fu_497_p2}, {2'd0}};

assign tmp_12_fu_551_p3 = {{add_ln19_9_fu_533_p2}, {2'd0}};

assign tmp_13_fu_605_p3 = {{add_ln19_11_fu_587_p2}, {2'd0}};

assign tmp_14_fu_653_p3 = {{add_ln19_13_fu_635_p2}, {2'd0}};

assign tmp_1_fu_299_p3 = {{select_ln14_1_fu_282_p3}, {2'd0}};

assign tmp_2_fu_328_p3 = {{select_ln14_2_fu_322_p3}, {4'd0}};

assign tmp_3_fu_340_p3 = {{select_ln14_2_fu_322_p3}, {2'd0}};

assign tmp_4_fu_369_p3 = {{select_ln14_3_fu_363_p3}, {4'd0}};

assign tmp_5_fu_381_p3 = {{select_ln14_3_fu_363_p3}, {2'd0}};

assign tmp_fu_287_p3 = {{select_ln14_1_fu_282_p3}, {4'd0}};

assign trunc_ln19_1_fu_503_p1 = add_ln19_7_fu_497_p2[8:0];

assign trunc_ln19_2_fu_539_p1 = add_ln19_9_fu_533_p2[8:0];

assign trunc_ln19_3_fu_593_p1 = add_ln19_11_fu_587_p2[8:0];

assign trunc_ln19_4_fu_641_p1 = add_ln19_13_fu_635_p2[8:0];

assign trunc_ln19_fu_467_p1 = add_ln19_5_fu_461_p2[8:0];

assign xor_ln14_fu_413_p2 = (icmp_ln17_reg_880 ^ 1'd1);

assign zext_ln19_10_fu_583_p1 = select_ln17_2_fu_575_p3;

assign zext_ln19_11_fu_613_p1 = tmp_13_fu_605_p3;

assign zext_ln19_12_fu_631_p1 = select_ln17_3_fu_623_p3;

assign zext_ln19_13_fu_661_p1 = tmp_14_fu_653_p3;

assign zext_ln19_14_fu_671_p1 = select_ln17_fu_441_p3;

assign zext_ln19_15_fu_774_p1 = add_ln19_15_reg_911;

assign zext_ln19_16_fu_715_p1 = add_ln19_16_reg_916;

assign zext_ln19_17_fu_799_p1 = add_ln19_17_reg_921_pp0_iter2_reg;

assign zext_ln19_18_fu_778_p1 = add_ln19_18_reg_926;

assign zext_ln19_19_fu_803_p1 = add_ln19_19_reg_931_pp0_iter2_reg;

assign zext_ln19_1_fu_307_p1 = tmp_1_fu_299_p3;

assign zext_ln19_20_fu_746_p1 = add_ln19_fu_741_p2;

assign zext_ln19_21_fu_782_p1 = add_ln19_20_reg_952;

assign zext_ln19_22_fu_760_p1 = add_ln19_1_fu_755_p2;

assign zext_ln19_23_fu_807_p1 = add_ln19_21_reg_957_pp0_iter2_reg;

assign zext_ln19_2_fu_336_p1 = tmp_2_fu_328_p3;

assign zext_ln19_3_fu_348_p1 = tmp_3_fu_340_p3;

assign zext_ln19_4_fu_377_p1 = tmp_4_fu_369_p3;

assign zext_ln19_5_fu_389_p1 = tmp_5_fu_381_p3;

assign zext_ln19_6_fu_457_p1 = select_ln17_1_fu_449_p3;

assign zext_ln19_7_fu_487_p1 = tmp_10_fu_479_p3;

assign zext_ln19_8_fu_523_p1 = tmp_11_fu_515_p3;

assign zext_ln19_9_fu_559_p1 = tmp_12_fu_551_p3;

assign zext_ln19_fu_295_p1 = tmp_fu_287_p3;

always @ (posedge ap_clk) begin
    add_ln19_8_reg_905[1:0] <= 2'b00;
    zext_ln19_16_reg_936[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln19_16_reg_936_pp0_iter1_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln19_16_reg_936_pp0_iter2_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln19_16_reg_936_pp0_iter3_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln19_16_reg_936_pp0_iter4_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln19_16_reg_936_pp0_iter5_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln19_16_reg_936_pp0_iter6_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln19_16_reg_936_pp0_iter7_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln19_16_reg_936_pp0_iter8_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln19_16_reg_936_pp0_iter9_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln19_16_reg_936_pp0_iter10_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //heat_3d_heat_3d_Pipeline_VITIS_LOOP_14_2_VITIS_LOOP_17_3_VITIS_LOOP_18_4
