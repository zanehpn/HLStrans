-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity syrk is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    alpha : IN STD_LOGIC_VECTOR (31 downto 0);
    beta : IN STD_LOGIC_VECTOR (31 downto 0);
    A_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    B_ce0 : OUT STD_LOGIC;
    B_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    C_out_ce0 : OUT STD_LOGIC;
    C_out_we0 : OUT STD_LOGIC;
    C_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of syrk is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "syrk_syrk,hls_ip_2022_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.517000,HLS_SYN_LAT=29023,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=24941,HLS_SYN_LUT=15572,HLS_VERSION=2022_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal buff_A0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal buff_A0_ce0 : STD_LOGIC;
    signal buff_A0_we0 : STD_LOGIC;
    signal buff_A0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce1 : STD_LOGIC;
    signal buff_A0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce2 : STD_LOGIC;
    signal buff_A0_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce3 : STD_LOGIC;
    signal buff_A0_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce4 : STD_LOGIC;
    signal buff_A0_q4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce5 : STD_LOGIC;
    signal buff_A0_q5 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce6 : STD_LOGIC;
    signal buff_A0_q6 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce7 : STD_LOGIC;
    signal buff_A0_q7 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce8 : STD_LOGIC;
    signal buff_A0_q8 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce9 : STD_LOGIC;
    signal buff_A0_q9 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce10 : STD_LOGIC;
    signal buff_A0_q10 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce11 : STD_LOGIC;
    signal buff_A0_q11 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce12 : STD_LOGIC;
    signal buff_A0_q12 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce13 : STD_LOGIC;
    signal buff_A0_q13 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce14 : STD_LOGIC;
    signal buff_A0_q14 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A0_ce15 : STD_LOGIC;
    signal buff_A0_q15 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal buff_A1_ce0 : STD_LOGIC;
    signal buff_A1_we0 : STD_LOGIC;
    signal buff_A1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce1 : STD_LOGIC;
    signal buff_A1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce2 : STD_LOGIC;
    signal buff_A1_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce3 : STD_LOGIC;
    signal buff_A1_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce4 : STD_LOGIC;
    signal buff_A1_q4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce5 : STD_LOGIC;
    signal buff_A1_q5 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce6 : STD_LOGIC;
    signal buff_A1_q6 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce7 : STD_LOGIC;
    signal buff_A1_q7 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce8 : STD_LOGIC;
    signal buff_A1_q8 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce9 : STD_LOGIC;
    signal buff_A1_q9 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce10 : STD_LOGIC;
    signal buff_A1_q10 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce11 : STD_LOGIC;
    signal buff_A1_q11 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce12 : STD_LOGIC;
    signal buff_A1_q12 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce13 : STD_LOGIC;
    signal buff_A1_q13 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce14 : STD_LOGIC;
    signal buff_A1_q14 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A1_ce15 : STD_LOGIC;
    signal buff_A1_q15 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_B_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal buff_B_ce0 : STD_LOGIC;
    signal buff_B_we0 : STD_LOGIC;
    signal buff_B_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_C_out_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal buff_C_out_ce0 : STD_LOGIC;
    signal buff_C_out_we0 : STD_LOGIC;
    signal buff_C_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_C_out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_C_out_ce1 : STD_LOGIC;
    signal buff_C_out_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_start : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_done : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_idle : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_ready : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_A_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_A_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_B_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_B_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_we0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_we0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_we0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_we0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_ap_start : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_ap_done : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_ap_idle : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_ap_ready : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce1 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce2 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce3 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce4 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address5 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce5 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address6 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce6 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address7 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce7 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address8 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce8 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address9 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce9 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address10 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce10 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address11 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce11 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address12 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce12 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address13 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce13 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address14 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce14 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address15 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce15 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce1 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce2 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce3 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce4 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address5 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce5 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address6 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce6 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address7 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce7 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address8 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce8 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address9 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce9 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address10 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce10 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address11 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce11 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address12 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce12 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address13 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce13 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address14 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce14 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address15 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce15 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_we0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_ce : STD_LOGIC;
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_122_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_122_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_122_p_ce : STD_LOGIC;
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_ap_start : STD_LOGIC;
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_ap_done : STD_LOGIC;
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_ap_idle : STD_LOGIC;
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_ap_ready : STD_LOGIC;
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_buff_B_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_buff_B_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_we0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_ce1 : STD_LOGIC;
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_ce : STD_LOGIC;
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_122_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_122_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_122_p_ce : STD_LOGIC;
    signal grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_start : STD_LOGIC;
    signal grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_done : STD_LOGIC;
    signal grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_idle : STD_LOGIC;
    signal grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_ready : STD_LOGIC;
    signal grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_C_out_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_C_out_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_C_out_we0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_C_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_buff_C_out_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_buff_C_out_ce0 : STD_LOGIC;
    signal grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_syrk_Pipeline_lp1_lp2_fu_84_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_syrk_Pipeline_lp4_lp5_fu_93_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_fu_118_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_118_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_118_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_118_ce : STD_LOGIC;
    signal grp_fu_122_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_122_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_122_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_122_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component syrk_syrk_Pipeline_lprd_1_lprd_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce0 : OUT STD_LOGIC;
        buff_A0_we0 : OUT STD_LOGIC;
        buff_A0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce0 : OUT STD_LOGIC;
        buff_A1_we0 : OUT STD_LOGIC;
        buff_A1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_B_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_B_ce0 : OUT STD_LOGIC;
        buff_B_we0 : OUT STD_LOGIC;
        buff_B_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_C_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_C_out_ce0 : OUT STD_LOGIC;
        buff_C_out_we0 : OUT STD_LOGIC;
        buff_C_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component syrk_syrk_Pipeline_lp1_lp2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buff_A0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce0 : OUT STD_LOGIC;
        buff_A0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce1 : OUT STD_LOGIC;
        buff_A0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce2 : OUT STD_LOGIC;
        buff_A0_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce3 : OUT STD_LOGIC;
        buff_A0_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce4 : OUT STD_LOGIC;
        buff_A0_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce5 : OUT STD_LOGIC;
        buff_A0_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce6 : OUT STD_LOGIC;
        buff_A0_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address7 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce7 : OUT STD_LOGIC;
        buff_A0_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address8 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce8 : OUT STD_LOGIC;
        buff_A0_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address9 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce9 : OUT STD_LOGIC;
        buff_A0_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address10 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce10 : OUT STD_LOGIC;
        buff_A0_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address11 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce11 : OUT STD_LOGIC;
        buff_A0_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address12 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce12 : OUT STD_LOGIC;
        buff_A0_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address13 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce13 : OUT STD_LOGIC;
        buff_A0_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address14 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce14 : OUT STD_LOGIC;
        buff_A0_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A0_address15 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A0_ce15 : OUT STD_LOGIC;
        buff_A0_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
        alpha : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce0 : OUT STD_LOGIC;
        buff_A1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce1 : OUT STD_LOGIC;
        buff_A1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address2 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce2 : OUT STD_LOGIC;
        buff_A1_q2 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address3 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce3 : OUT STD_LOGIC;
        buff_A1_q3 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address4 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce4 : OUT STD_LOGIC;
        buff_A1_q4 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address5 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce5 : OUT STD_LOGIC;
        buff_A1_q5 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address6 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce6 : OUT STD_LOGIC;
        buff_A1_q6 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address7 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce7 : OUT STD_LOGIC;
        buff_A1_q7 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address8 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce8 : OUT STD_LOGIC;
        buff_A1_q8 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address9 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce9 : OUT STD_LOGIC;
        buff_A1_q9 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address10 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce10 : OUT STD_LOGIC;
        buff_A1_q10 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address11 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce11 : OUT STD_LOGIC;
        buff_A1_q11 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address12 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce12 : OUT STD_LOGIC;
        buff_A1_q12 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address13 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce13 : OUT STD_LOGIC;
        buff_A1_q13 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address14 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce14 : OUT STD_LOGIC;
        buff_A1_q14 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A1_address15 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_A1_ce15 : OUT STD_LOGIC;
        buff_A1_q15 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_C_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_C_out_ce0 : OUT STD_LOGIC;
        buff_C_out_we0 : OUT STD_LOGIC;
        buff_C_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_C_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_118_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_118_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_118_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_118_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_118_p_ce : OUT STD_LOGIC;
        grp_fu_122_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_122_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_122_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_122_p_ce : OUT STD_LOGIC );
    end component;


    component syrk_syrk_Pipeline_lp4_lp5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buff_B_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_B_ce0 : OUT STD_LOGIC;
        buff_B_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_C_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_C_out_ce0 : OUT STD_LOGIC;
        buff_C_out_we0 : OUT STD_LOGIC;
        buff_C_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_C_out_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_C_out_ce1 : OUT STD_LOGIC;
        buff_C_out_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        beta : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_118_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_118_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_118_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_118_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_118_p_ce : OUT STD_LOGIC;
        grp_fu_122_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_122_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_122_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_122_p_ce : OUT STD_LOGIC );
    end component;


    component syrk_syrk_Pipeline_lpwr_1_lpwr_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        C_out_ce0 : OUT STD_LOGIC;
        C_out_we0 : OUT STD_LOGIC;
        C_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_C_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        buff_C_out_ce0 : OUT STD_LOGIC;
        buff_C_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component syrk_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component syrk_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component syrk_buff_A0_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address3 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address4 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address5 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address6 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address7 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address8 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address9 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address10 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce10 : IN STD_LOGIC;
        q10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address11 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce11 : IN STD_LOGIC;
        q11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address12 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce12 : IN STD_LOGIC;
        q12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address13 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce13 : IN STD_LOGIC;
        q13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address14 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce14 : IN STD_LOGIC;
        q14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address15 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce15 : IN STD_LOGIC;
        q15 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component syrk_buff_B_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component syrk_buff_C_out_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    buff_A0_U : component syrk_buff_A0_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A0_address0,
        ce0 => buff_A0_ce0,
        we0 => buff_A0_we0,
        d0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_d0,
        q0 => buff_A0_q0,
        address1 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address1,
        ce1 => buff_A0_ce1,
        q1 => buff_A0_q1,
        address2 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address2,
        ce2 => buff_A0_ce2,
        q2 => buff_A0_q2,
        address3 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address3,
        ce3 => buff_A0_ce3,
        q3 => buff_A0_q3,
        address4 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address4,
        ce4 => buff_A0_ce4,
        q4 => buff_A0_q4,
        address5 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address5,
        ce5 => buff_A0_ce5,
        q5 => buff_A0_q5,
        address6 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address6,
        ce6 => buff_A0_ce6,
        q6 => buff_A0_q6,
        address7 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address7,
        ce7 => buff_A0_ce7,
        q7 => buff_A0_q7,
        address8 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address8,
        ce8 => buff_A0_ce8,
        q8 => buff_A0_q8,
        address9 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address9,
        ce9 => buff_A0_ce9,
        q9 => buff_A0_q9,
        address10 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address10,
        ce10 => buff_A0_ce10,
        q10 => buff_A0_q10,
        address11 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address11,
        ce11 => buff_A0_ce11,
        q11 => buff_A0_q11,
        address12 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address12,
        ce12 => buff_A0_ce12,
        q12 => buff_A0_q12,
        address13 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address13,
        ce13 => buff_A0_ce13,
        q13 => buff_A0_q13,
        address14 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address14,
        ce14 => buff_A0_ce14,
        q14 => buff_A0_q14,
        address15 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address15,
        ce15 => buff_A0_ce15,
        q15 => buff_A0_q15);

    buff_A1_U : component syrk_buff_A0_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A1_address0,
        ce0 => buff_A1_ce0,
        we0 => buff_A1_we0,
        d0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_d0,
        q0 => buff_A1_q0,
        address1 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address1,
        ce1 => buff_A1_ce1,
        q1 => buff_A1_q1,
        address2 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address2,
        ce2 => buff_A1_ce2,
        q2 => buff_A1_q2,
        address3 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address3,
        ce3 => buff_A1_ce3,
        q3 => buff_A1_q3,
        address4 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address4,
        ce4 => buff_A1_ce4,
        q4 => buff_A1_q4,
        address5 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address5,
        ce5 => buff_A1_ce5,
        q5 => buff_A1_q5,
        address6 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address6,
        ce6 => buff_A1_ce6,
        q6 => buff_A1_q6,
        address7 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address7,
        ce7 => buff_A1_ce7,
        q7 => buff_A1_q7,
        address8 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address8,
        ce8 => buff_A1_ce8,
        q8 => buff_A1_q8,
        address9 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address9,
        ce9 => buff_A1_ce9,
        q9 => buff_A1_q9,
        address10 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address10,
        ce10 => buff_A1_ce10,
        q10 => buff_A1_q10,
        address11 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address11,
        ce11 => buff_A1_ce11,
        q11 => buff_A1_q11,
        address12 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address12,
        ce12 => buff_A1_ce12,
        q12 => buff_A1_q12,
        address13 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address13,
        ce13 => buff_A1_ce13,
        q13 => buff_A1_q13,
        address14 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address14,
        ce14 => buff_A1_ce14,
        q14 => buff_A1_q14,
        address15 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address15,
        ce15 => buff_A1_ce15,
        q15 => buff_A1_q15);

    buff_B_U : component syrk_buff_B_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_B_address0,
        ce0 => buff_B_ce0,
        we0 => buff_B_we0,
        d0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_d0,
        q0 => buff_B_q0);

    buff_C_out_U : component syrk_buff_C_out_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_C_out_address0,
        ce0 => buff_C_out_ce0,
        we0 => buff_C_out_we0,
        d0 => buff_C_out_d0,
        q0 => buff_C_out_q0,
        address1 => grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_address1,
        ce1 => buff_C_out_ce1,
        q1 => buff_C_out_q1);

    grp_syrk_Pipeline_lprd_1_lprd_2_fu_68 : component syrk_syrk_Pipeline_lprd_1_lprd_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_start,
        ap_done => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_done,
        ap_idle => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_idle,
        ap_ready => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_ready,
        A_address0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_A_address0,
        A_ce0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_A_ce0,
        A_q0 => A_q0,
        B_address0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_B_address0,
        B_ce0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_B_ce0,
        B_q0 => B_q0,
        buff_A0_address0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_address0,
        buff_A0_ce0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_ce0,
        buff_A0_we0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_we0,
        buff_A0_d0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_d0,
        buff_A1_address0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_address0,
        buff_A1_ce0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_ce0,
        buff_A1_we0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_we0,
        buff_A1_d0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_d0,
        buff_B_address0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_address0,
        buff_B_ce0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_ce0,
        buff_B_we0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_we0,
        buff_B_d0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_d0,
        buff_C_out_address0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_address0,
        buff_C_out_ce0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_ce0,
        buff_C_out_we0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_we0,
        buff_C_out_d0 => grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_d0);

    grp_syrk_Pipeline_lp1_lp2_fu_84 : component syrk_syrk_Pipeline_lp1_lp2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_syrk_Pipeline_lp1_lp2_fu_84_ap_start,
        ap_done => grp_syrk_Pipeline_lp1_lp2_fu_84_ap_done,
        ap_idle => grp_syrk_Pipeline_lp1_lp2_fu_84_ap_idle,
        ap_ready => grp_syrk_Pipeline_lp1_lp2_fu_84_ap_ready,
        buff_A0_address0 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address0,
        buff_A0_ce0 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce0,
        buff_A0_q0 => buff_A0_q0,
        buff_A0_address1 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address1,
        buff_A0_ce1 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce1,
        buff_A0_q1 => buff_A0_q1,
        buff_A0_address2 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address2,
        buff_A0_ce2 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce2,
        buff_A0_q2 => buff_A0_q2,
        buff_A0_address3 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address3,
        buff_A0_ce3 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce3,
        buff_A0_q3 => buff_A0_q3,
        buff_A0_address4 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address4,
        buff_A0_ce4 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce4,
        buff_A0_q4 => buff_A0_q4,
        buff_A0_address5 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address5,
        buff_A0_ce5 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce5,
        buff_A0_q5 => buff_A0_q5,
        buff_A0_address6 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address6,
        buff_A0_ce6 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce6,
        buff_A0_q6 => buff_A0_q6,
        buff_A0_address7 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address7,
        buff_A0_ce7 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce7,
        buff_A0_q7 => buff_A0_q7,
        buff_A0_address8 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address8,
        buff_A0_ce8 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce8,
        buff_A0_q8 => buff_A0_q8,
        buff_A0_address9 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address9,
        buff_A0_ce9 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce9,
        buff_A0_q9 => buff_A0_q9,
        buff_A0_address10 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address10,
        buff_A0_ce10 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce10,
        buff_A0_q10 => buff_A0_q10,
        buff_A0_address11 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address11,
        buff_A0_ce11 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce11,
        buff_A0_q11 => buff_A0_q11,
        buff_A0_address12 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address12,
        buff_A0_ce12 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce12,
        buff_A0_q12 => buff_A0_q12,
        buff_A0_address13 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address13,
        buff_A0_ce13 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce13,
        buff_A0_q13 => buff_A0_q13,
        buff_A0_address14 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address14,
        buff_A0_ce14 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce14,
        buff_A0_q14 => buff_A0_q14,
        buff_A0_address15 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address15,
        buff_A0_ce15 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce15,
        buff_A0_q15 => buff_A0_q15,
        alpha => alpha,
        buff_A1_address0 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address0,
        buff_A1_ce0 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce0,
        buff_A1_q0 => buff_A1_q0,
        buff_A1_address1 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address1,
        buff_A1_ce1 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce1,
        buff_A1_q1 => buff_A1_q1,
        buff_A1_address2 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address2,
        buff_A1_ce2 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce2,
        buff_A1_q2 => buff_A1_q2,
        buff_A1_address3 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address3,
        buff_A1_ce3 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce3,
        buff_A1_q3 => buff_A1_q3,
        buff_A1_address4 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address4,
        buff_A1_ce4 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce4,
        buff_A1_q4 => buff_A1_q4,
        buff_A1_address5 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address5,
        buff_A1_ce5 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce5,
        buff_A1_q5 => buff_A1_q5,
        buff_A1_address6 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address6,
        buff_A1_ce6 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce6,
        buff_A1_q6 => buff_A1_q6,
        buff_A1_address7 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address7,
        buff_A1_ce7 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce7,
        buff_A1_q7 => buff_A1_q7,
        buff_A1_address8 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address8,
        buff_A1_ce8 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce8,
        buff_A1_q8 => buff_A1_q8,
        buff_A1_address9 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address9,
        buff_A1_ce9 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce9,
        buff_A1_q9 => buff_A1_q9,
        buff_A1_address10 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address10,
        buff_A1_ce10 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce10,
        buff_A1_q10 => buff_A1_q10,
        buff_A1_address11 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address11,
        buff_A1_ce11 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce11,
        buff_A1_q11 => buff_A1_q11,
        buff_A1_address12 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address12,
        buff_A1_ce12 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce12,
        buff_A1_q12 => buff_A1_q12,
        buff_A1_address13 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address13,
        buff_A1_ce13 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce13,
        buff_A1_q13 => buff_A1_q13,
        buff_A1_address14 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address14,
        buff_A1_ce14 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce14,
        buff_A1_q14 => buff_A1_q14,
        buff_A1_address15 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address15,
        buff_A1_ce15 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce15,
        buff_A1_q15 => buff_A1_q15,
        buff_C_out_address0 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_address0,
        buff_C_out_ce0 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_ce0,
        buff_C_out_we0 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_we0,
        buff_C_out_d0 => grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_d0,
        buff_C_out_q0 => buff_C_out_q0,
        grp_fu_118_p_din0 => grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_din0,
        grp_fu_118_p_din1 => grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_din1,
        grp_fu_118_p_opcode => grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_opcode,
        grp_fu_118_p_dout0 => grp_fu_118_p2,
        grp_fu_118_p_ce => grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_ce,
        grp_fu_122_p_din0 => grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_122_p_din0,
        grp_fu_122_p_din1 => grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_122_p_din1,
        grp_fu_122_p_dout0 => grp_fu_122_p2,
        grp_fu_122_p_ce => grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_122_p_ce);

    grp_syrk_Pipeline_lp4_lp5_fu_93 : component syrk_syrk_Pipeline_lp4_lp5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_syrk_Pipeline_lp4_lp5_fu_93_ap_start,
        ap_done => grp_syrk_Pipeline_lp4_lp5_fu_93_ap_done,
        ap_idle => grp_syrk_Pipeline_lp4_lp5_fu_93_ap_idle,
        ap_ready => grp_syrk_Pipeline_lp4_lp5_fu_93_ap_ready,
        buff_B_address0 => grp_syrk_Pipeline_lp4_lp5_fu_93_buff_B_address0,
        buff_B_ce0 => grp_syrk_Pipeline_lp4_lp5_fu_93_buff_B_ce0,
        buff_B_q0 => buff_B_q0,
        buff_C_out_address0 => grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_address0,
        buff_C_out_ce0 => grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_ce0,
        buff_C_out_we0 => grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_we0,
        buff_C_out_d0 => grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_d0,
        buff_C_out_address1 => grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_address1,
        buff_C_out_ce1 => grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_ce1,
        buff_C_out_q1 => buff_C_out_q1,
        beta => beta,
        grp_fu_118_p_din0 => grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_din0,
        grp_fu_118_p_din1 => grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_din1,
        grp_fu_118_p_opcode => grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_opcode,
        grp_fu_118_p_dout0 => grp_fu_118_p2,
        grp_fu_118_p_ce => grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_ce,
        grp_fu_122_p_din0 => grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_122_p_din0,
        grp_fu_122_p_din1 => grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_122_p_din1,
        grp_fu_122_p_dout0 => grp_fu_122_p2,
        grp_fu_122_p_ce => grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_122_p_ce);

    grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101 : component syrk_syrk_Pipeline_lpwr_1_lpwr_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_start,
        ap_done => grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_done,
        ap_idle => grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_idle,
        ap_ready => grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_ready,
        C_out_address0 => grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_C_out_address0,
        C_out_ce0 => grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_C_out_ce0,
        C_out_we0 => grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_C_out_we0,
        C_out_d0 => grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_C_out_d0,
        buff_C_out_address0 => grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_buff_C_out_address0,
        buff_C_out_ce0 => grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_buff_C_out_ce0,
        buff_C_out_q0 => buff_C_out_q0);

    fadd_32ns_32ns_32_5_full_dsp_1_U68 : component syrk_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_118_p0,
        din1 => grp_fu_118_p1,
        ce => grp_fu_118_ce,
        dout => grp_fu_118_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U69 : component syrk_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_122_p0,
        din1 => grp_fu_122_p1,
        ce => grp_fu_122_ce,
        dout => grp_fu_122_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_syrk_Pipeline_lp1_lp2_fu_84_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_syrk_Pipeline_lp1_lp2_fu_84_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_syrk_Pipeline_lp1_lp2_fu_84_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_syrk_Pipeline_lp1_lp2_fu_84_ap_ready = ap_const_logic_1)) then 
                    grp_syrk_Pipeline_lp1_lp2_fu_84_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_syrk_Pipeline_lp4_lp5_fu_93_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_syrk_Pipeline_lp4_lp5_fu_93_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_syrk_Pipeline_lp4_lp5_fu_93_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_syrk_Pipeline_lp4_lp5_fu_93_ap_ready = ap_const_logic_1)) then 
                    grp_syrk_Pipeline_lp4_lp5_fu_93_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_ready = ap_const_logic_1)) then 
                    grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_ready = ap_const_logic_1)) then 
                    grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_done, grp_syrk_Pipeline_lp1_lp2_fu_84_ap_done, grp_syrk_Pipeline_lp4_lp5_fu_93_ap_done, grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_syrk_Pipeline_lp1_lp2_fu_84_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_syrk_Pipeline_lp4_lp5_fu_93_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    A_address0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_A_address0;
    A_ce0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_A_ce0;
    B_address0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_B_address0;
    B_ce0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_B_ce0;
    C_out_address0 <= grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_C_out_address0;
    C_out_ce0 <= grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_C_out_ce0;
    C_out_d0 <= grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_C_out_d0;
    C_out_we0 <= grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_C_out_we0;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_done)
    begin
        if ((grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_ap_done)
    begin
        if ((grp_syrk_Pipeline_lp1_lp2_fu_84_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_syrk_Pipeline_lp4_lp5_fu_93_ap_done)
    begin
        if ((grp_syrk_Pipeline_lp4_lp5_fu_93_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_done)
    begin
        if ((grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_done, ap_CS_fsm_state8)
    begin
        if (((grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_done, ap_CS_fsm_state8)
    begin
        if (((grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_address0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_address0, grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_address0 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_A0_address0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_address0;
        else 
            buff_A0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    buff_A0_ce0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_ce0, grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce0 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_A0_ce0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_ce0;
        else 
            buff_A0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce1_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce1 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce1;
        else 
            buff_A0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce10_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce10, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce10 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce10;
        else 
            buff_A0_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce11_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce11, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce11 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce11;
        else 
            buff_A0_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce12_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce12, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce12 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce12;
        else 
            buff_A0_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce13_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce13, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce13 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce13;
        else 
            buff_A0_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce14_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce14, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce14 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce14;
        else 
            buff_A0_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce15_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce15, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce15 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce15;
        else 
            buff_A0_ce15 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce2_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce2 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce2;
        else 
            buff_A0_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce3_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce3 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce3;
        else 
            buff_A0_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce4_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce4, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce4 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce4;
        else 
            buff_A0_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce5_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce5, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce5 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce5;
        else 
            buff_A0_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce6_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce6, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce6 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce6;
        else 
            buff_A0_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce7_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce7, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce7 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce7;
        else 
            buff_A0_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce8_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce8, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce8 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce8;
        else 
            buff_A0_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_ce9_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce9, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A0_ce9 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A0_ce9;
        else 
            buff_A0_ce9 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A0_we0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_A0_we0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A0_we0;
        else 
            buff_A0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_address0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_address0, grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_address0 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_A1_address0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_address0;
        else 
            buff_A1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    buff_A1_ce0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_ce0, grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce0 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_A1_ce0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_ce0;
        else 
            buff_A1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce1_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce1 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce1;
        else 
            buff_A1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce10_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce10, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce10 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce10;
        else 
            buff_A1_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce11_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce11, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce11 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce11;
        else 
            buff_A1_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce12_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce12, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce12 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce12;
        else 
            buff_A1_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce13_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce13, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce13 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce13;
        else 
            buff_A1_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce14_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce14, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce14 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce14;
        else 
            buff_A1_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce15_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce15, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce15 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce15;
        else 
            buff_A1_ce15 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce2_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce2 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce2;
        else 
            buff_A1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce3_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce3, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce3 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce3;
        else 
            buff_A1_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce4_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce4, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce4 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce4;
        else 
            buff_A1_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce5_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce5, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce5 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce5;
        else 
            buff_A1_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce6_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce6, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce6 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce6;
        else 
            buff_A1_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce7_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce7, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce7 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce7;
        else 
            buff_A1_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce8_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce8, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce8 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce8;
        else 
            buff_A1_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_ce9_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce9, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A1_ce9 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_A1_ce9;
        else 
            buff_A1_ce9 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A1_we0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_A1_we0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_A1_we0;
        else 
            buff_A1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_B_address0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_address0, grp_syrk_Pipeline_lp4_lp5_fu_93_buff_B_address0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buff_B_address0 <= grp_syrk_Pipeline_lp4_lp5_fu_93_buff_B_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_B_address0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_address0;
        else 
            buff_B_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    buff_B_ce0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_ce0, grp_syrk_Pipeline_lp4_lp5_fu_93_buff_B_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buff_B_ce0 <= grp_syrk_Pipeline_lp4_lp5_fu_93_buff_B_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_B_ce0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_ce0;
        else 
            buff_B_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_B_we0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_B_we0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_B_we0;
        else 
            buff_B_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_C_out_address0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_address0, grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_address0, grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_address0, grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_buff_C_out_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buff_C_out_address0 <= grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_buff_C_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buff_C_out_address0 <= grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_C_out_address0 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_C_out_address0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_address0;
        else 
            buff_C_out_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    buff_C_out_ce0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_ce0, grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_ce0, grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_ce0, grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_buff_C_out_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buff_C_out_ce0 <= grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_buff_C_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buff_C_out_ce0 <= grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_C_out_ce0 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_C_out_ce0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_ce0;
        else 
            buff_C_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_C_out_ce1_assign_proc : process(grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buff_C_out_ce1 <= grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_ce1;
        else 
            buff_C_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_C_out_d0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_d0, grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_d0, grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_d0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buff_C_out_d0 <= grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_C_out_d0 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_C_out_d0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_d0;
        else 
            buff_C_out_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buff_C_out_we0_assign_proc : process(grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_we0, grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_we0, grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_we0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buff_C_out_we0 <= grp_syrk_Pipeline_lp4_lp5_fu_93_buff_C_out_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_C_out_we0 <= grp_syrk_Pipeline_lp1_lp2_fu_84_buff_C_out_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buff_C_out_we0 <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_buff_C_out_we0;
        else 
            buff_C_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_118_ce_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_ce, grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_118_ce <= grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_118_ce <= grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_ce;
        else 
            grp_fu_118_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_118_p0_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_din0, grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_118_p0 <= grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_118_p0 <= grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_din0;
        else 
            grp_fu_118_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_118_p1_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_din1, grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_118_p1 <= grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_118_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_118_p1 <= grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_118_p_din1;
        else 
            grp_fu_118_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_122_ce_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_122_p_ce, grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_122_p_ce, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_122_ce <= grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_122_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_122_ce <= grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_122_p_ce;
        else 
            grp_fu_122_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_122_p0_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_122_p_din0, grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_122_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_122_p0 <= grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_122_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_122_p0 <= grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_122_p_din0;
        else 
            grp_fu_122_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_122_p1_assign_proc : process(grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_122_p_din1, grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_122_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_122_p1 <= grp_syrk_Pipeline_lp4_lp5_fu_93_grp_fu_122_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_122_p1 <= grp_syrk_Pipeline_lp1_lp2_fu_84_grp_fu_122_p_din1;
        else 
            grp_fu_122_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_syrk_Pipeline_lp1_lp2_fu_84_ap_start <= grp_syrk_Pipeline_lp1_lp2_fu_84_ap_start_reg;
    grp_syrk_Pipeline_lp4_lp5_fu_93_ap_start <= grp_syrk_Pipeline_lp4_lp5_fu_93_ap_start_reg;
    grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_start <= grp_syrk_Pipeline_lprd_1_lprd_2_fu_68_ap_start_reg;
    grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_start <= grp_syrk_Pipeline_lpwr_1_lpwr_2_fu_101_ap_start_reg;
end behav;
