// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sort_radix_sort_radix_Pipeline_last_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sum_address0,
        sum_ce0,
        sum_q0,
        bucket_address0,
        bucket_ce0,
        bucket_we0,
        bucket_d0,
        bucket_q0,
        bucket_address1,
        bucket_ce1,
        bucket_we1,
        bucket_d1,
        bucket_q1
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] sum_address0;
output   sum_ce0;
input  [31:0] sum_q0;
output  [10:0] bucket_address0;
output   bucket_ce0;
output   bucket_we0;
output  [31:0] bucket_d0;
input  [31:0] bucket_q0;
output  [10:0] bucket_address1;
output   bucket_ce1;
output   bucket_we1;
output  [31:0] bucket_d1;
input  [31:0] bucket_q1;

reg ap_idle;
reg sum_ce0;
reg[10:0] bucket_address0;
reg bucket_ce0;
reg bucket_we0;
reg[31:0] bucket_d0;
reg[10:0] bucket_address1;
reg bucket_ce1;
reg bucket_we1;
reg[31:0] bucket_d1;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln34_fu_232_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_state16;
wire    ap_block_state16_pp0_stage15_iter0;
wire   [10:0] shl_ln2_fu_253_p3;
reg   [10:0] shl_ln2_reg_505;
reg   [10:0] bucket_addr_reg_523;
reg   [10:0] bucket_addr_16_reg_528;
reg   [31:0] sum_load_reg_533;
wire    ap_CS_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
reg   [31:0] bucket_load_reg_553;
reg   [31:0] bucket_load_16_reg_558;
reg   [10:0] bucket_addr_17_reg_563;
reg   [10:0] bucket_addr_18_reg_568;
reg   [31:0] bucket_load_17_reg_573;
wire    ap_CS_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
reg   [31:0] bucket_load_18_reg_578;
reg   [10:0] bucket_addr_19_reg_583;
reg   [10:0] bucket_addr_20_reg_588;
reg   [31:0] bucket_load_19_reg_593;
wire    ap_CS_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
reg   [31:0] bucket_load_20_reg_598;
reg   [10:0] bucket_addr_21_reg_603;
reg   [10:0] bucket_addr_22_reg_608;
reg   [31:0] bucket_load_21_reg_613;
wire    ap_CS_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
reg   [31:0] bucket_load_22_reg_618;
reg   [10:0] bucket_addr_23_reg_623;
reg   [10:0] bucket_addr_24_reg_628;
reg   [31:0] bucket_load_23_reg_633;
wire    ap_CS_fsm_state6;
wire    ap_block_state6_pp0_stage5_iter0;
reg   [31:0] bucket_load_24_reg_638;
reg   [10:0] bucket_addr_25_reg_643;
reg   [10:0] bucket_addr_26_reg_648;
reg   [31:0] bucket_load_25_reg_653;
wire    ap_CS_fsm_state7;
wire    ap_block_state7_pp0_stage6_iter0;
reg   [31:0] bucket_load_26_reg_658;
reg   [10:0] bucket_addr_27_reg_663;
reg   [10:0] bucket_addr_28_reg_668;
reg   [31:0] bucket_load_27_reg_673;
wire    ap_CS_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
reg   [31:0] bucket_load_28_reg_678;
reg   [10:0] bucket_addr_29_reg_683;
reg   [10:0] bucket_addr_30_reg_688;
wire   [31:0] add_ln37_2_fu_432_p2;
reg   [31:0] add_ln37_2_reg_693;
wire    ap_CS_fsm_state9;
wire    ap_block_state9_pp0_stage8_iter0;
wire   [31:0] add_ln37_3_fu_436_p2;
reg   [31:0] add_ln37_3_reg_698;
wire   [31:0] add_ln37_4_fu_440_p2;
reg   [31:0] add_ln37_4_reg_703;
wire   [31:0] add_ln37_5_fu_444_p2;
reg   [31:0] add_ln37_5_reg_708;
wire   [31:0] add_ln37_6_fu_448_p2;
reg   [31:0] add_ln37_6_reg_713;
wire   [31:0] add_ln37_7_fu_452_p2;
reg   [31:0] add_ln37_7_reg_718;
wire   [31:0] add_ln37_8_fu_456_p2;
reg   [31:0] add_ln37_8_reg_723;
wire   [31:0] add_ln37_9_fu_460_p2;
reg   [31:0] add_ln37_9_reg_728;
wire   [31:0] add_ln37_10_fu_464_p2;
reg   [31:0] add_ln37_10_reg_733;
wire   [31:0] add_ln37_11_fu_468_p2;
reg   [31:0] add_ln37_11_reg_738;
wire   [31:0] add_ln37_12_fu_472_p2;
reg   [31:0] add_ln37_12_reg_743;
wire   [31:0] add_ln37_13_fu_476_p2;
reg   [31:0] add_ln37_13_reg_748;
wire   [31:0] add_ln37_14_fu_480_p2;
reg   [31:0] add_ln37_14_reg_753;
wire   [31:0] add_ln37_15_fu_485_p2;
reg   [31:0] add_ln37_15_reg_758;
wire   [63:0] radixID_2_cast10_fu_244_p1;
wire   [63:0] zext_ln37_fu_261_p1;
wire   [63:0] zext_ln37_1_fu_272_p1;
wire   [63:0] zext_ln37_2_fu_287_p1;
wire   [63:0] zext_ln37_3_fu_297_p1;
wire   [63:0] zext_ln37_4_fu_307_p1;
wire   [63:0] zext_ln37_5_fu_317_p1;
wire   [63:0] zext_ln37_6_fu_327_p1;
wire   [63:0] zext_ln37_7_fu_337_p1;
wire   [63:0] zext_ln37_8_fu_347_p1;
wire   [63:0] zext_ln37_9_fu_357_p1;
wire   [63:0] zext_ln37_10_fu_367_p1;
wire   [63:0] zext_ln37_11_fu_377_p1;
wire   [63:0] zext_ln37_12_fu_387_p1;
wire   [63:0] zext_ln37_13_fu_397_p1;
wire   [63:0] zext_ln37_14_fu_407_p1;
wire   [63:0] zext_ln37_15_fu_417_p1;
reg   [7:0] radixID_2_fu_70;
wire   [7:0] add_ln34_fu_238_p2;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_radixID;
wire   [31:0] add_ln37_fu_422_p2;
wire   [31:0] add_ln37_1_fu_427_p2;
wire    ap_CS_fsm_state10;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_CS_fsm_state11;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_CS_fsm_state12;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_CS_fsm_state13;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_CS_fsm_state14;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_CS_fsm_state15;
wire    ap_block_state15_pp0_stage14_iter0;
wire   [6:0] trunc_ln36_fu_249_p1;
wire   [10:0] or_ln37_fu_266_p2;
wire   [10:0] or_ln37_1_fu_282_p2;
wire   [10:0] or_ln37_2_fu_292_p2;
wire   [10:0] or_ln37_3_fu_302_p2;
wire   [10:0] or_ln37_4_fu_312_p2;
wire   [10:0] or_ln37_5_fu_322_p2;
wire   [10:0] or_ln37_6_fu_332_p2;
wire   [10:0] or_ln37_7_fu_342_p2;
wire   [10:0] or_ln37_8_fu_352_p2;
wire   [10:0] or_ln37_9_fu_362_p2;
wire   [10:0] or_ln37_10_fu_372_p2;
wire   [10:0] or_ln37_11_fu_382_p2;
wire   [10:0] or_ln37_12_fu_392_p2;
wire   [10:0] or_ln37_13_fu_402_p2;
wire   [10:0] or_ln37_14_fu_412_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [15:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_done_reg = 1'b0;
end

sort_radix_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln34_fu_232_p2 == 1'd0)) begin
            radixID_2_fu_70 <= add_ln34_fu_238_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            radixID_2_fu_70 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln37_10_reg_733 <= add_ln37_10_fu_464_p2;
        add_ln37_11_reg_738 <= add_ln37_11_fu_468_p2;
        add_ln37_12_reg_743 <= add_ln37_12_fu_472_p2;
        add_ln37_13_reg_748 <= add_ln37_13_fu_476_p2;
        add_ln37_14_reg_753 <= add_ln37_14_fu_480_p2;
        add_ln37_15_reg_758 <= add_ln37_15_fu_485_p2;
        add_ln37_2_reg_693 <= add_ln37_2_fu_432_p2;
        add_ln37_3_reg_698 <= add_ln37_3_fu_436_p2;
        add_ln37_4_reg_703 <= add_ln37_4_fu_440_p2;
        add_ln37_5_reg_708 <= add_ln37_5_fu_444_p2;
        add_ln37_6_reg_713 <= add_ln37_6_fu_448_p2;
        add_ln37_7_reg_718 <= add_ln37_7_fu_452_p2;
        add_ln37_8_reg_723 <= add_ln37_8_fu_456_p2;
        add_ln37_9_reg_728 <= add_ln37_9_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln34_fu_232_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        bucket_addr_16_reg_528[10 : 4] <= zext_ln37_1_fu_272_p1[10 : 4];
        bucket_addr_reg_523[10 : 4] <= zext_ln37_fu_261_p1[10 : 4];
        shl_ln2_reg_505[10 : 4] <= shl_ln2_fu_253_p3[10 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bucket_addr_17_reg_563[10 : 4] <= zext_ln37_2_fu_287_p1[10 : 4];
        bucket_addr_18_reg_568[10 : 4] <= zext_ln37_3_fu_297_p1[10 : 4];
        bucket_load_16_reg_558 <= bucket_q0;
        bucket_load_reg_553 <= bucket_q1;
        sum_load_reg_533 <= sum_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bucket_addr_19_reg_583[10 : 4] <= zext_ln37_4_fu_307_p1[10 : 4];
        bucket_addr_20_reg_588[10 : 4] <= zext_ln37_5_fu_317_p1[10 : 4];
        bucket_load_17_reg_573 <= bucket_q1;
        bucket_load_18_reg_578 <= bucket_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bucket_addr_21_reg_603[10 : 4] <= zext_ln37_6_fu_327_p1[10 : 4];
        bucket_addr_22_reg_608[10 : 4] <= zext_ln37_7_fu_337_p1[10 : 4];
        bucket_load_19_reg_593 <= bucket_q1;
        bucket_load_20_reg_598 <= bucket_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        bucket_addr_23_reg_623[10 : 4] <= zext_ln37_8_fu_347_p1[10 : 4];
        bucket_addr_24_reg_628[10 : 4] <= zext_ln37_9_fu_357_p1[10 : 4];
        bucket_load_21_reg_613 <= bucket_q1;
        bucket_load_22_reg_618 <= bucket_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        bucket_addr_25_reg_643[10 : 4] <= zext_ln37_10_fu_367_p1[10 : 4];
        bucket_addr_26_reg_648[10 : 4] <= zext_ln37_11_fu_377_p1[10 : 4];
        bucket_load_23_reg_633 <= bucket_q1;
        bucket_load_24_reg_638 <= bucket_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        bucket_addr_27_reg_663[10 : 4] <= zext_ln37_12_fu_387_p1[10 : 4];
        bucket_addr_28_reg_668[10 : 4] <= zext_ln37_13_fu_397_p1[10 : 4];
        bucket_load_25_reg_653 <= bucket_q1;
        bucket_load_26_reg_658 <= bucket_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        bucket_addr_29_reg_683[10 : 4] <= zext_ln37_14_fu_407_p1[10 : 4];
        bucket_addr_30_reg_688[10 : 4] <= zext_ln37_15_fu_417_p1[10 : 4];
        bucket_load_27_reg_673 <= bucket_q1;
        bucket_load_28_reg_678 <= bucket_q0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln34_fu_232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_radixID = 8'd0;
    end else begin
        ap_sig_allocacmp_radixID = radixID_2_fu_70;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        bucket_address0 = bucket_addr_30_reg_688;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        bucket_address0 = bucket_addr_28_reg_668;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        bucket_address0 = bucket_addr_26_reg_648;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        bucket_address0 = bucket_addr_24_reg_628;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bucket_address0 = bucket_addr_22_reg_608;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        bucket_address0 = bucket_addr_20_reg_588;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        bucket_address0 = bucket_addr_18_reg_568;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        bucket_address0 = bucket_addr_16_reg_528;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        bucket_address0 = zext_ln37_15_fu_417_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        bucket_address0 = zext_ln37_13_fu_397_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bucket_address0 = zext_ln37_11_fu_377_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        bucket_address0 = zext_ln37_9_fu_357_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bucket_address0 = zext_ln37_7_fu_337_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        bucket_address0 = zext_ln37_5_fu_317_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bucket_address0 = zext_ln37_3_fu_297_p1;
    end else if (((icmp_ln34_fu_232_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        bucket_address0 = zext_ln37_1_fu_272_p1;
    end else begin
        bucket_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        bucket_address1 = bucket_addr_29_reg_683;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        bucket_address1 = bucket_addr_27_reg_663;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        bucket_address1 = bucket_addr_25_reg_643;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        bucket_address1 = bucket_addr_23_reg_623;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bucket_address1 = bucket_addr_21_reg_603;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        bucket_address1 = bucket_addr_19_reg_583;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        bucket_address1 = bucket_addr_17_reg_563;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        bucket_address1 = bucket_addr_reg_523;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        bucket_address1 = zext_ln37_14_fu_407_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        bucket_address1 = zext_ln37_12_fu_387_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bucket_address1 = zext_ln37_10_fu_367_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        bucket_address1 = zext_ln37_8_fu_347_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bucket_address1 = zext_ln37_6_fu_327_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        bucket_address1 = zext_ln37_4_fu_307_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        bucket_address1 = zext_ln37_2_fu_287_p1;
    end else if (((icmp_ln34_fu_232_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        bucket_address1 = zext_ln37_fu_261_p1;
    end else begin
        bucket_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start_int == 1'b1) & (icmp_ln34_fu_232_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        bucket_ce0 = 1'b1;
    end else begin
        bucket_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((ap_start_int == 1'b1) & (icmp_ln34_fu_232_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        bucket_ce1 = 1'b1;
    end else begin
        bucket_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        bucket_d0 = add_ln37_15_reg_758;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        bucket_d0 = add_ln37_13_reg_748;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        bucket_d0 = add_ln37_11_reg_738;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        bucket_d0 = add_ln37_9_reg_728;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bucket_d0 = add_ln37_7_reg_718;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        bucket_d0 = add_ln37_5_reg_708;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        bucket_d0 = add_ln37_3_reg_698;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        bucket_d0 = add_ln37_1_fu_427_p2;
    end else begin
        bucket_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        bucket_d1 = add_ln37_14_reg_753;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        bucket_d1 = add_ln37_12_reg_743;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        bucket_d1 = add_ln37_10_reg_733;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        bucket_d1 = add_ln37_8_reg_723;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bucket_d1 = add_ln37_6_reg_713;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        bucket_d1 = add_ln37_4_reg_703;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        bucket_d1 = add_ln37_2_reg_693;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        bucket_d1 = add_ln37_fu_422_p2;
    end else begin
        bucket_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        bucket_we0 = 1'b1;
    end else begin
        bucket_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        bucket_we1 = 1'b1;
    end else begin
        bucket_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sum_ce0 = 1'b1;
    end else begin
        sum_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start_int == 1'b1) & (icmp_ln34_fu_232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln34_fu_238_p2 = (ap_sig_allocacmp_radixID + 8'd1);

assign add_ln37_10_fu_464_p2 = (bucket_load_25_reg_653 + sum_load_reg_533);

assign add_ln37_11_fu_468_p2 = (bucket_load_26_reg_658 + sum_load_reg_533);

assign add_ln37_12_fu_472_p2 = (bucket_load_27_reg_673 + sum_load_reg_533);

assign add_ln37_13_fu_476_p2 = (bucket_load_28_reg_678 + sum_load_reg_533);

assign add_ln37_14_fu_480_p2 = (bucket_q1 + sum_load_reg_533);

assign add_ln37_15_fu_485_p2 = (bucket_q0 + sum_load_reg_533);

assign add_ln37_1_fu_427_p2 = (bucket_load_16_reg_558 + sum_load_reg_533);

assign add_ln37_2_fu_432_p2 = (bucket_load_17_reg_573 + sum_load_reg_533);

assign add_ln37_3_fu_436_p2 = (bucket_load_18_reg_578 + sum_load_reg_533);

assign add_ln37_4_fu_440_p2 = (bucket_load_19_reg_593 + sum_load_reg_533);

assign add_ln37_5_fu_444_p2 = (bucket_load_20_reg_598 + sum_load_reg_533);

assign add_ln37_6_fu_448_p2 = (bucket_load_21_reg_613 + sum_load_reg_533);

assign add_ln37_7_fu_452_p2 = (bucket_load_22_reg_618 + sum_load_reg_533);

assign add_ln37_8_fu_456_p2 = (bucket_load_23_reg_633 + sum_load_reg_533);

assign add_ln37_9_fu_460_p2 = (bucket_load_24_reg_638 + sum_load_reg_533);

assign add_ln37_fu_422_p2 = (bucket_load_reg_553 + sum_load_reg_533);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln34_fu_232_p2 = ((ap_sig_allocacmp_radixID == 8'd128) ? 1'b1 : 1'b0);

assign or_ln37_10_fu_372_p2 = (shl_ln2_reg_505 | 11'd11);

assign or_ln37_11_fu_382_p2 = (shl_ln2_reg_505 | 11'd12);

assign or_ln37_12_fu_392_p2 = (shl_ln2_reg_505 | 11'd13);

assign or_ln37_13_fu_402_p2 = (shl_ln2_reg_505 | 11'd14);

assign or_ln37_14_fu_412_p2 = (shl_ln2_reg_505 | 11'd15);

assign or_ln37_1_fu_282_p2 = (shl_ln2_reg_505 | 11'd2);

assign or_ln37_2_fu_292_p2 = (shl_ln2_reg_505 | 11'd3);

assign or_ln37_3_fu_302_p2 = (shl_ln2_reg_505 | 11'd4);

assign or_ln37_4_fu_312_p2 = (shl_ln2_reg_505 | 11'd5);

assign or_ln37_5_fu_322_p2 = (shl_ln2_reg_505 | 11'd6);

assign or_ln37_6_fu_332_p2 = (shl_ln2_reg_505 | 11'd7);

assign or_ln37_7_fu_342_p2 = (shl_ln2_reg_505 | 11'd8);

assign or_ln37_8_fu_352_p2 = (shl_ln2_reg_505 | 11'd9);

assign or_ln37_9_fu_362_p2 = (shl_ln2_reg_505 | 11'd10);

assign or_ln37_fu_266_p2 = (shl_ln2_fu_253_p3 | 11'd1);

assign radixID_2_cast10_fu_244_p1 = ap_sig_allocacmp_radixID;

assign shl_ln2_fu_253_p3 = {{trunc_ln36_fu_249_p1}, {4'd0}};

assign sum_address0 = radixID_2_cast10_fu_244_p1;

assign trunc_ln36_fu_249_p1 = ap_sig_allocacmp_radixID[6:0];

assign zext_ln37_10_fu_367_p1 = or_ln37_9_fu_362_p2;

assign zext_ln37_11_fu_377_p1 = or_ln37_10_fu_372_p2;

assign zext_ln37_12_fu_387_p1 = or_ln37_11_fu_382_p2;

assign zext_ln37_13_fu_397_p1 = or_ln37_12_fu_392_p2;

assign zext_ln37_14_fu_407_p1 = or_ln37_13_fu_402_p2;

assign zext_ln37_15_fu_417_p1 = or_ln37_14_fu_412_p2;

assign zext_ln37_1_fu_272_p1 = or_ln37_fu_266_p2;

assign zext_ln37_2_fu_287_p1 = or_ln37_1_fu_282_p2;

assign zext_ln37_3_fu_297_p1 = or_ln37_2_fu_292_p2;

assign zext_ln37_4_fu_307_p1 = or_ln37_3_fu_302_p2;

assign zext_ln37_5_fu_317_p1 = or_ln37_4_fu_312_p2;

assign zext_ln37_6_fu_327_p1 = or_ln37_5_fu_322_p2;

assign zext_ln37_7_fu_337_p1 = or_ln37_6_fu_332_p2;

assign zext_ln37_8_fu_347_p1 = or_ln37_7_fu_342_p2;

assign zext_ln37_9_fu_357_p1 = or_ln37_8_fu_352_p2;

assign zext_ln37_fu_261_p1 = shl_ln2_fu_253_p3;

always @ (posedge ap_clk) begin
    shl_ln2_reg_505[3:0] <= 4'b0000;
    bucket_addr_reg_523[3:0] <= 4'b0000;
    bucket_addr_16_reg_528[3:0] <= 4'b0001;
    bucket_addr_17_reg_563[3:0] <= 4'b0010;
    bucket_addr_18_reg_568[3:0] <= 4'b0011;
    bucket_addr_19_reg_583[3:0] <= 4'b0100;
    bucket_addr_20_reg_588[3:0] <= 4'b0101;
    bucket_addr_21_reg_603[3:0] <= 4'b0110;
    bucket_addr_22_reg_608[3:0] <= 4'b0111;
    bucket_addr_23_reg_623[3:0] <= 4'b1000;
    bucket_addr_24_reg_628[3:0] <= 4'b1001;
    bucket_addr_25_reg_643[3:0] <= 4'b1010;
    bucket_addr_26_reg_648[3:0] <= 4'b1011;
    bucket_addr_27_reg_663[3:0] <= 4'b1100;
    bucket_addr_28_reg_668[3:0] <= 4'b1101;
    bucket_addr_29_reg_683[3:0] <= 4'b1110;
    bucket_addr_30_reg_688[3:0] <= 4'b1111;
end

endmodule //sort_radix_sort_radix_Pipeline_last_1
