// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="md_md,hls_ip_2022_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.612000,HLS_SYN_LAT=959681,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=8694,HLS_SYN_LUT=6730,HLS_VERSION=2022_2_2}" *)

module md (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        n_points_address0,
        n_points_ce0,
        n_points_q0,
        force_r_address0,
        force_r_ce0,
        force_r_we0,
        force_r_d0,
        force_r_q0,
        position_address0,
        position_ce0,
        position_q0
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] n_points_address0;
output   n_points_ce0;
input  [31:0] n_points_q0;
output  [9:0] force_r_address0;
output   force_r_ce0;
output   force_r_we0;
output  [191:0] force_r_d0;
input  [191:0] force_r_q0;
output  [9:0] position_address0;
output   position_ce0;
input  [191:0] position_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] n_points_address0;
reg n_points_ce0;
reg force_r_ce0;
reg force_r_we0;
reg[9:0] position_address0;
reg position_ce0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] smax73_fu_392_p3;
reg   [1:0] smax73_reg_1777;
wire    ap_CS_fsm_state2;
wire   [3:0] sub_ln16_fu_460_p2;
reg   [3:0] sub_ln16_reg_1782;
wire   [1:0] smax68_fu_476_p3;
reg   [1:0] smax68_reg_1787;
wire   [3:0] sub_ln18_fu_544_p2;
reg   [3:0] sub_ln18_reg_1792;
wire   [6:0] add_ln14_2_fu_556_p2;
reg   [6:0] add_ln14_2_reg_1800;
wire   [0:0] icmp_ln16_fu_562_p2;
reg   [0:0] icmp_ln16_reg_1805;
wire   [0:0] icmp_ln14_fu_550_p2;
wire   [2:0] select_ln14_2_fu_593_p3;
reg   [2:0] select_ln14_2_reg_1820;
wire    ap_CS_fsm_state3;
wire   [1:0] select_ln14_3_fu_637_p3;
reg   [1:0] select_ln14_3_reg_1825;
wire   [3:0] select_ln14_4_fu_700_p3;
reg   [3:0] select_ln14_4_reg_1830;
wire   [2:0] select_ln14_7_fu_735_p3;
reg   [2:0] select_ln14_7_reg_1835;
wire   [0:0] or_ln16_fu_753_p2;
reg   [0:0] or_ln16_reg_1840;
wire   [2:0] select_ln16_fu_758_p3;
reg   [2:0] select_ln16_reg_1845;
wire   [2:0] select_ln16_2_fu_766_p3;
reg   [2:0] select_ln16_2_reg_1851;
wire   [1:0] select_ln16_3_fu_822_p3;
reg   [1:0] select_ln16_3_reg_1856;
wire   [3:0] select_ln16_4_fu_888_p3;
reg   [3:0] select_ln16_4_reg_1862;
wire   [2:0] select_ln16_5_fu_896_p3;
reg   [2:0] select_ln16_5_reg_1867;
wire   [9:0] add_ln33_fu_943_p2;
reg   [9:0] add_ln33_reg_1877;
wire   [1:0] empty_26_fu_949_p1;
reg   [1:0] empty_26_reg_1882;
wire   [2:0] select_ln16_1_fu_956_p3;
reg   [2:0] select_ln16_1_reg_1887;
wire    ap_CS_fsm_state4;
wire   [1:0] smax_fu_973_p3;
reg   [1:0] smax_reg_1892;
reg   [31:0] n_points_load_reg_1899;
wire   [3:0] sub_ln21_fu_1035_p2;
reg   [3:0] sub_ln21_reg_1906;
wire    ap_CS_fsm_state5;
wire   [95:0] grp_fu_1051_p2;
reg   [95:0] mul_ln8_reg_1921;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire   [159:0] grp_fu_1067_p2;
reg   [159:0] mul_ln8_1_reg_1938;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln14_fu_1089_p1;
wire    ap_CS_fsm_state10;
wire   [63:0] select_ln16_3_cast40_fu_1092_p1;
reg   [63:0] select_ln16_3_cast40_reg_1959;
wire   [63:0] smax_cast_fu_1095_p1;
reg   [63:0] smax_cast_reg_1965;
wire   [223:0] grp_fu_1083_p2;
reg   [223:0] mul_ln8_2_reg_1972;
wire   [0:0] icmp_ln30_1_fu_1098_p2;
reg   [0:0] icmp_ln30_1_reg_1977;
wire   [0:0] icmp_ln25_fu_1103_p2;
reg   [0:0] icmp_ln25_reg_1983;
wire   [223:0] add_ln21_1_fu_1156_p2;
reg   [223:0] add_ln21_1_reg_1991;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln23_fu_1162_p2;
reg   [0:0] icmp_ln23_reg_1996;
wire   [0:0] icmp_ln21_fu_1151_p2;
wire   [63:0] select_ln8_fu_1167_p3;
reg   [63:0] select_ln8_reg_2002;
wire   [5:0] add_ln29_1_fu_1181_p2;
reg   [5:0] add_ln29_1_reg_2008;
wire   [0:0] select_ln8_4_fu_1199_p3;
reg   [0:0] select_ln8_4_reg_2013;
wire   [63:0] select_ln8_5_fu_1206_p3;
reg   [63:0] select_ln8_5_reg_2019;
wire   [0:0] select_ln8_8_fu_1227_p3;
reg   [0:0] select_ln8_8_reg_2025;
wire   [9:0] add_ln33_1_fu_1242_p2;
reg   [9:0] add_ln33_1_reg_2031;
wire   [9:0] add_ln30_fu_1247_p2;
reg   [9:0] add_ln30_reg_2036;
wire   [95:0] select_ln25_1_fu_1259_p3;
reg   [95:0] select_ln25_1_reg_2041;
wire   [159:0] select_ln23_1_fu_1273_p3;
reg   [159:0] select_ln23_1_reg_2046;
wire   [63:0] select_ln21_fu_1363_p3;
reg   [63:0] select_ln21_reg_2051;
wire    ap_CS_fsm_state12;
wire   [5:0] select_ln8_7_fu_1416_p3;
reg   [5:0] select_ln8_7_reg_2056;
wire   [63:0] select_ln23_fu_1423_p3;
reg   [63:0] select_ln23_reg_2061;
wire   [60:0] trunc_ln29_8_fu_1439_p1;
reg   [60:0] trunc_ln29_8_reg_2066;
wire   [3:0] trunc_ln29_9_fu_1443_p1;
reg   [3:0] trunc_ln29_9_reg_2071;
reg   [9:0] force_r_addr_reg_2076;
wire    ap_CS_fsm_state13;
wire   [63:0] select_ln25_fu_1492_p3;
reg   [63:0] select_ln25_reg_2091;
wire   [9:0] add_ln39_1_fu_1532_p2;
reg   [9:0] add_ln39_1_reg_2096;
wire   [190:0] trunc_ln32_fu_1538_p1;
reg   [190:0] trunc_ln32_reg_2101;
wire   [63:0] trunc_ln32_3_fu_1542_p1;
reg   [63:0] trunc_ln32_3_reg_2106;
reg   [63:0] trunc_ln32_1_reg_2111;
reg   [63:0] trunc_ln32_2_reg_2116;
wire   [0:0] icmp_ln42_3_fu_1570_p2;
reg   [0:0] icmp_ln42_3_reg_2121;
wire   [0:0] icmp_ln42_7_fu_1586_p2;
reg   [0:0] icmp_ln42_7_reg_2126;
wire   [0:0] icmp_ln42_fu_1602_p2;
reg   [0:0] icmp_ln42_reg_2131;
reg   [31:0] n_points_load_1_reg_2136;
wire    ap_CS_fsm_state14;
wire   [63:0] p_x_fu_1608_p1;
reg   [63:0] p_x_reg_2141;
wire   [63:0] p_y_fu_1612_p1;
reg   [63:0] p_y_reg_2146;
wire   [63:0] p_z_fu_1616_p1;
reg   [63:0] p_z_reg_2151;
wire   [63:0] sum_x_fu_1624_p1;
reg   [63:0] sum_x_reg_2156;
wire   [63:0] sum_y_fu_1639_p1;
reg   [63:0] sum_y_reg_2161;
wire   [63:0] sum_z_fu_1654_p1;
reg   [63:0] sum_z_reg_2166;
wire    grp_md_Pipeline_loop_q_fu_302_ap_start;
wire    grp_md_Pipeline_loop_q_fu_302_ap_done;
wire    grp_md_Pipeline_loop_q_fu_302_ap_idle;
wire    grp_md_Pipeline_loop_q_fu_302_ap_ready;
wire   [9:0] grp_md_Pipeline_loop_q_fu_302_position_address0;
wire    grp_md_Pipeline_loop_q_fu_302_position_ce0;
wire   [63:0] grp_md_Pipeline_loop_q_fu_302_sum_z_2_out;
wire    grp_md_Pipeline_loop_q_fu_302_sum_z_2_out_ap_vld;
wire   [63:0] grp_md_Pipeline_loop_q_fu_302_sum_y_2_out;
wire    grp_md_Pipeline_loop_q_fu_302_sum_y_2_out_ap_vld;
wire   [63:0] grp_md_Pipeline_loop_q_fu_302_sum_x_2_out;
wire    grp_md_Pipeline_loop_q_fu_302_sum_x_2_out_ap_vld;
reg   [223:0] indvar_flatten50_reg_230;
wire    ap_CS_fsm_state16;
reg   [63:0] b1_x_reg_241;
reg   [159:0] indvar_flatten22_reg_251;
reg   [63:0] b1_y_reg_262;
reg   [95:0] indvar_flatten_reg_271;
reg   [63:0] b1_z_reg_282;
reg   [9:0] p_idx_reg_291;
reg    grp_md_Pipeline_loop_q_fu_302_ap_start_reg;
wire    ap_CS_fsm_state15;
wire   [63:0] p_cast41_fu_914_p1;
wire   [63:0] zext_ln33_fu_1447_p1;
wire   [63:0] zext_ln29_fu_1487_p1;
reg   [2:0] indvars_iv62_fu_140;
wire   [2:0] add_ln18_1_fu_1286_p2;
reg   [2:0] b0_z_fu_144;
wire   [2:0] add_ln18_fu_1281_p2;
reg   [2:0] indvars_iv66_fu_148;
reg   [2:0] b0_y_fu_152;
reg   [5:0] indvar_flatten87_fu_156;
wire   [5:0] select_ln16_6_fu_1297_p3;
reg   [2:0] indvars_iv71_fu_160;
reg   [2:0] b0_x_fu_164;
reg   [6:0] indvar_flatten178_fu_168;
wire   [0:0] empty_fu_386_p2;
wire   [1:0] trunc_ln14_fu_382_p1;
wire   [1:0] empty_12_fu_408_p1;
wire   [2:0] empty_13_fu_416_p2;
wire   [2:0] b0_x_cast_cast_fu_412_p1;
wire   [0:0] cmp18_fu_422_p2;
wire   [2:0] empty_14_fu_428_p2;
wire   [2:0] smax73_cast30_fu_404_p1;
wire   [2:0] cond24_fu_434_p3;
wire   [0:0] empty_15_fu_442_p2;
wire   [2:0] smax28_fu_448_p3;
wire   [3:0] zext_ln16_fu_456_p1;
wire   [3:0] smax73_cast31_fu_400_p1;
wire   [0:0] empty_16_fu_470_p2;
wire   [1:0] trunc_ln16_fu_466_p1;
wire   [1:0] empty_17_fu_492_p1;
wire   [2:0] empty_18_fu_500_p2;
wire   [2:0] b0_y_cast_cast_fu_496_p1;
wire   [0:0] cmp41_fu_506_p2;
wire   [2:0] empty_19_fu_512_p2;
wire   [2:0] smax68_cast32_fu_488_p1;
wire   [2:0] cond47_fu_518_p3;
wire   [0:0] empty_20_fu_526_p2;
wire   [2:0] smax8_fu_532_p3;
wire   [3:0] zext_ln18_fu_540_p1;
wire   [3:0] smax68_cast33_fu_484_p1;
wire   [2:0] add_ln14_fu_571_p2;
wire   [4:0] tmp_9_fu_599_p3;
wire   [2:0] add_ln14_1_fu_576_p2;
wire   [0:0] p_mid1110_fu_615_p2;
wire   [1:0] trunc_ln14_1_fu_611_p1;
wire   [1:0] smax73_mid1_fu_621_p3;
wire   [1:0] empty_21_fu_643_p1;
wire   [2:0] p_mid1112_fu_651_p2;
wire   [2:0] b0_x_cast_cast_mid1_fu_647_p1;
wire   [0:0] cmp18_mid1_fu_656_p2;
wire   [2:0] p_mid1114_fu_662_p2;
wire   [2:0] zext_ln14_3_fu_633_p1;
wire   [2:0] cond24_mid1_fu_668_p3;
wire   [0:0] p_mid1128_fu_676_p2;
wire   [2:0] smax28_mid1_fu_682_p3;
wire   [3:0] zext_ln16_1_fu_690_p1;
wire   [3:0] zext_ln14_2_fu_629_p1;
wire   [3:0] sub_ln16_1_fu_694_p2;
wire   [0:0] icmp_ln18_fu_723_p2;
wire   [0:0] xor_ln14_fu_718_p2;
wire   [2:0] select_ln14_fu_581_p3;
wire   [2:0] select_ln14_1_fu_587_p3;
wire   [0:0] and_ln14_fu_729_p2;
wire   [2:0] add_ln16_fu_741_p2;
wire   [5:0] zext_ln14_1_fu_607_p1;
wire   [5:0] select_ln16_2_cast_fu_774_p1;
wire   [5:0] empty_22_fu_778_p2;
wire   [7:0] tmp_fu_784_p3;
wire   [2:0] add_ln16_1_fu_747_p2;
wire   [0:0] p_mid1_fu_800_p2;
wire   [1:0] trunc_ln16_1_fu_796_p1;
wire   [1:0] smax68_mid1_fu_806_p3;
wire   [1:0] select_ln14_5_fu_706_p3;
wire   [1:0] empty_23_fu_830_p1;
wire   [2:0] p_mid167_fu_838_p2;
wire   [2:0] b0_y_cast_cast_mid1_fu_834_p1;
wire   [0:0] cmp41_mid1_fu_844_p2;
wire   [2:0] p_mid169_fu_850_p2;
wire   [2:0] zext_ln16_3_fu_818_p1;
wire   [2:0] cond47_mid1_fu_856_p3;
wire   [0:0] p_mid183_fu_864_p2;
wire   [2:0] smax8_mid1_fu_870_p3;
wire   [3:0] zext_ln18_1_fu_878_p1;
wire   [3:0] zext_ln16_2_fu_814_p1;
wire   [3:0] sub_ln18_1_fu_882_p2;
wire   [3:0] select_ln14_6_fu_712_p3;
wire   [62:0] tmp_11_fu_792_p1;
wire   [62:0] select_ln16_cast_fu_904_p1;
wire   [62:0] empty_24_fu_908_p2;
wire   [6:0] trunc_ln33_fu_919_p1;
wire   [8:0] trunc_ln33_1_fu_931_p1;
wire   [9:0] p_shl_fu_923_p3;
wire   [9:0] p_shl1_fu_935_p3;
wire   [0:0] empty_25_fu_967_p2;
wire   [1:0] trunc_ln18_fu_963_p1;
wire   [2:0] empty_27_fu_992_p2;
wire   [2:0] b0_z_cast_cast_fu_989_p1;
wire   [0:0] cmp64_fu_997_p2;
wire   [2:0] empty_28_fu_1003_p2;
wire   [2:0] smax_cast36_fu_985_p1;
wire   [2:0] cond70_fu_1009_p3;
wire   [0:0] empty_29_fu_1017_p2;
wire   [2:0] smax3_fu_1023_p3;
wire   [3:0] zext_ln21_fu_1031_p1;
wire   [3:0] smax_cast37_fu_981_p1;
wire  signed [63:0] sext_ln8_fu_1041_p1;
wire   [63:0] grp_fu_1051_p0;
wire   [31:0] grp_fu_1051_p1;
wire  signed [63:0] sext_ln8_1_fu_1057_p1;
wire   [63:0] grp_fu_1067_p0;
wire   [95:0] grp_fu_1067_p1;
wire  signed [63:0] sext_ln8_2_fu_1073_p1;
wire   [63:0] grp_fu_1083_p0;
wire   [159:0] grp_fu_1083_p1;
wire   [1:0] trunc_ln29_1_fu_1112_p1;
wire   [3:0] tmp_1_fu_1116_p3;
wire   [3:0] trunc_ln29_2_fu_1124_p1;
wire   [3:0] add_ln29_fu_1128_p2;
wire   [31:0] zext_ln30_fu_1142_p1;
wire   [5:0] tmp_s_fu_1134_p3;
wire   [5:0] trunc_ln29_fu_1108_p1;
wire   [0:0] icmp_ln30_fu_1146_p2;
wire   [0:0] icmp_ln25_1_fu_1194_p2;
wire   [63:0] select_ln8_1_fu_1174_p3;
wire   [0:0] or_ln8_fu_1213_p2;
wire   [0:0] select_ln8_3_fu_1187_p3;
wire   [9:0] select_ln8_6_fu_1219_p3;
wire   [9:0] select_ln8_9_fu_1234_p3;
wire   [95:0] add_ln25_1_fu_1253_p2;
wire   [159:0] add_ln23_1_fu_1267_p2;
wire   [5:0] add_ln16_2_fu_1291_p2;
wire   [63:0] add_ln21_fu_1339_p2;
wire   [1:0] trunc_ln29_3_fu_1345_p1;
wire   [5:0] tmp_2_fu_1349_p4;
wire   [59:0] trunc_ln29_4_fu_1370_p1;
wire   [1:0] trunc_ln29_5_fu_1374_p1;
wire   [63:0] add_ln23_fu_1386_p2;
wire   [3:0] tmp_4_fu_1391_p3;
wire   [3:0] trunc_ln29_6_fu_1399_p1;
wire   [3:0] add_ln29_2_fu_1403_p2;
wire   [5:0] tmp_5_fu_1409_p3;
wire   [5:0] select_ln8_2_fu_1357_p3;
wire   [61:0] tmp_3_fu_1378_p3;
wire   [61:0] trunc_ln29_7_fu_1429_p1;
wire   [61:0] add_ln29_3_fu_1433_p2;
wire   [63:0] add_ln25_fu_1466_p2;
wire   [5:0] tmp_27_cast_fu_1459_p3;
wire   [5:0] trunc_ln29_10_fu_1471_p1;
wire   [5:0] add_ln29_4_fu_1475_p2;
wire   [5:0] select_ln8_10_fu_1481_p3;
wire   [62:0] tmp_6_fu_1452_p3;
wire   [62:0] trunc_ln39_fu_1498_p1;
wire   [62:0] add_ln39_fu_1502_p2;
wire   [6:0] trunc_ln39_4_fu_1508_p1;
wire   [8:0] trunc_ln39_5_fu_1520_p1;
wire   [9:0] p_shl2_fu_1512_p3;
wire   [9:0] p_shl3_fu_1524_p3;
wire   [51:0] trunc_ln42_fu_1566_p1;
wire   [51:0] trunc_ln42_3_fu_1576_p4;
wire   [51:0] trunc_ln42_5_fu_1592_p4;
wire   [63:0] trunc_ln33_2_fu_1620_p1;
wire   [63:0] trunc_ln5_fu_1629_p4;
wire   [63:0] trunc_ln6_fu_1644_p4;
wire   [63:0] bitcast_ln59_fu_1676_p1;
wire   [63:0] bitcast_ln58_fu_1672_p1;
wire   [63:0] bitcast_ln57_fu_1668_p1;
reg   [15:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire   [95:0] grp_fu_1051_p00;
wire   [95:0] grp_fu_1051_p10;
wire   [159:0] grp_fu_1067_p00;
wire   [159:0] grp_fu_1067_p10;
wire   [223:0] grp_fu_1083_p00;
wire   [223:0] grp_fu_1083_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 grp_md_Pipeline_loop_q_fu_302_ap_start_reg = 1'b0;
end

md_md_Pipeline_loop_q grp_md_Pipeline_loop_q_fu_302(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_md_Pipeline_loop_q_fu_302_ap_start),
    .ap_done(grp_md_Pipeline_loop_q_fu_302_ap_done),
    .ap_idle(grp_md_Pipeline_loop_q_fu_302_ap_idle),
    .ap_ready(grp_md_Pipeline_loop_q_fu_302_ap_ready),
    .sum_z(sum_z_reg_2166),
    .sum_y(sum_y_reg_2161),
    .sum_x(sum_x_reg_2156),
    .n_points_load_1(n_points_load_1_reg_2136),
    .add_ln39_1(add_ln39_1_reg_2096),
    .position_address0(grp_md_Pipeline_loop_q_fu_302_position_address0),
    .position_ce0(grp_md_Pipeline_loop_q_fu_302_position_ce0),
    .position_q0(position_q0),
    .position_load(trunc_ln32_reg_2101),
    .icmp_ln42_3(icmp_ln42_3_reg_2121),
    .p_x(p_x_reg_2141),
    .icmp_ln42_7(icmp_ln42_7_reg_2126),
    .p_y(p_y_reg_2146),
    .icmp_ln42_11(icmp_ln42_reg_2131),
    .p_z(p_z_reg_2151),
    .sum_z_2_out(grp_md_Pipeline_loop_q_fu_302_sum_z_2_out),
    .sum_z_2_out_ap_vld(grp_md_Pipeline_loop_q_fu_302_sum_z_2_out_ap_vld),
    .sum_y_2_out(grp_md_Pipeline_loop_q_fu_302_sum_y_2_out),
    .sum_y_2_out_ap_vld(grp_md_Pipeline_loop_q_fu_302_sum_y_2_out_ap_vld),
    .sum_x_2_out(grp_md_Pipeline_loop_q_fu_302_sum_x_2_out),
    .sum_x_2_out_ap_vld(grp_md_Pipeline_loop_q_fu_302_sum_x_2_out_ap_vld)
);

md_mul_64ns_32ns_96_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 96 ))
mul_64ns_32ns_96_2_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1051_p0),
    .din1(grp_fu_1051_p1),
    .ce(1'b1),
    .dout(grp_fu_1051_p2)
);

md_mul_64ns_96ns_160_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 96 ),
    .dout_WIDTH( 160 ))
mul_64ns_96ns_160_2_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1067_p0),
    .din1(grp_fu_1067_p1),
    .ce(1'b1),
    .dout(grp_fu_1067_p2)
);

md_mul_64ns_160ns_224_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 160 ),
    .dout_WIDTH( 224 ))
mul_64ns_160ns_224_2_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1083_p0),
    .din1(grp_fu_1083_p1),
    .ce(1'b1),
    .dout(grp_fu_1083_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_md_Pipeline_loop_q_fu_302_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_md_Pipeline_loop_q_fu_302_ap_start_reg <= 1'b1;
        end else if ((grp_md_Pipeline_loop_q_fu_302_ap_ready == 1'b1)) begin
            grp_md_Pipeline_loop_q_fu_302_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        b0_x_fu_164 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln21_fu_1151_p2 == 1'd1))) begin
        b0_x_fu_164 <= select_ln14_2_reg_1820;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        b0_y_fu_152 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln21_fu_1151_p2 == 1'd1))) begin
        b0_y_fu_152 <= select_ln16_2_reg_1851;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        b0_z_fu_144 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln21_fu_1151_p2 == 1'd1))) begin
        b0_z_fu_144 <= add_ln18_fu_1281_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        b1_x_reg_241 <= select_ln21_reg_2051;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        b1_x_reg_241 <= zext_ln14_fu_1089_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        b1_y_reg_262 <= select_ln23_reg_2061;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        b1_y_reg_262 <= select_ln16_3_cast40_fu_1092_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        b1_z_reg_282 <= select_ln25_reg_2091;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        b1_z_reg_282 <= smax_cast_fu_1095_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten178_fu_168 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln21_fu_1151_p2 == 1'd1))) begin
        indvar_flatten178_fu_168 <= add_ln14_2_reg_1800;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten22_reg_251 <= select_ln23_1_reg_2046;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten22_reg_251 <= 160'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten50_reg_230 <= add_ln21_1_reg_1991;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten50_reg_230 <= 224'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten87_fu_156 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln21_fu_1151_p2 == 1'd1))) begin
        indvar_flatten87_fu_156 <= select_ln16_6_fu_1297_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten_reg_271 <= select_ln25_1_reg_2041;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten_reg_271 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv62_fu_140 <= 3'd7;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln21_fu_1151_p2 == 1'd1))) begin
        indvars_iv62_fu_140 <= add_ln18_1_fu_1286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv66_fu_148 <= 3'd7;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln21_fu_1151_p2 == 1'd1))) begin
        indvars_iv66_fu_148 <= select_ln16_5_reg_1867;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv71_fu_160 <= 3'd7;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln21_fu_1151_p2 == 1'd1))) begin
        indvars_iv71_fu_160 <= select_ln14_7_reg_1835;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_idx_reg_291 <= add_ln30_reg_2036;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_idx_reg_291 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln14_2_reg_1800 <= add_ln14_2_fu_556_p2;
        smax68_reg_1787 <= smax68_fu_476_p3;
        smax73_reg_1777 <= smax73_fu_392_p3;
        sub_ln16_reg_1782 <= sub_ln16_fu_460_p2;
        sub_ln18_reg_1792 <= sub_ln18_fu_544_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln21_1_reg_1991 <= add_ln21_1_fu_1156_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln21_fu_1151_p2 == 1'd0))) begin
        add_ln29_1_reg_2008 <= add_ln29_1_fu_1181_p2;
        add_ln30_reg_2036 <= add_ln30_fu_1247_p2;
        add_ln33_1_reg_2031 <= add_ln33_1_fu_1242_p2;
        icmp_ln23_reg_1996 <= icmp_ln23_fu_1162_p2;
        select_ln23_1_reg_2046 <= select_ln23_1_fu_1273_p3;
        select_ln25_1_reg_2041 <= select_ln25_1_fu_1259_p3;
        select_ln8_4_reg_2013 <= select_ln8_4_fu_1199_p3;
        select_ln8_5_reg_2019 <= select_ln8_5_fu_1206_p3;
        select_ln8_8_reg_2025 <= select_ln8_8_fu_1227_p3;
        select_ln8_reg_2002 <= select_ln8_fu_1167_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln33_reg_1877[9 : 1] <= add_ln33_fu_943_p2[9 : 1];
        empty_26_reg_1882 <= empty_26_fu_949_p1;
        or_ln16_reg_1840 <= or_ln16_fu_753_p2;
        select_ln14_2_reg_1820 <= select_ln14_2_fu_593_p3;
        select_ln14_3_reg_1825 <= select_ln14_3_fu_637_p3;
        select_ln14_4_reg_1830 <= select_ln14_4_fu_700_p3;
        select_ln14_7_reg_1835 <= select_ln14_7_fu_735_p3;
        select_ln16_2_reg_1851 <= select_ln16_2_fu_766_p3;
        select_ln16_3_reg_1856 <= select_ln16_3_fu_822_p3;
        select_ln16_4_reg_1862 <= select_ln16_4_fu_888_p3;
        select_ln16_5_reg_1867 <= select_ln16_5_fu_896_p3;
        select_ln16_reg_1845 <= select_ln16_fu_758_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln39_1_reg_2096[9 : 1] <= add_ln39_1_fu_1532_p2[9 : 1];
        icmp_ln42_3_reg_2121 <= icmp_ln42_3_fu_1570_p2;
        icmp_ln42_7_reg_2126 <= icmp_ln42_7_fu_1586_p2;
        icmp_ln42_reg_2131 <= icmp_ln42_fu_1602_p2;
        select_ln25_reg_2091 <= select_ln25_fu_1492_p3;
        trunc_ln32_1_reg_2111 <= {{position_q0[127:64]}};
        trunc_ln32_2_reg_2116 <= {{position_q0[191:128]}};
        trunc_ln32_3_reg_2106 <= trunc_ln32_3_fu_1542_p1;
        trunc_ln32_reg_2101 <= trunc_ln32_fu_1538_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        force_r_addr_reg_2076 <= zext_ln33_fu_1447_p1;
        select_ln21_reg_2051 <= select_ln21_fu_1363_p3;
        select_ln23_reg_2061 <= select_ln23_fu_1423_p3;
        trunc_ln29_8_reg_2066 <= trunc_ln29_8_fu_1439_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_550_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln16_reg_1805 <= icmp_ln16_fu_562_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln25_reg_1983 <= icmp_ln25_fu_1103_p2;
        icmp_ln30_1_reg_1977 <= icmp_ln30_1_fu_1098_p2;
        mul_ln8_2_reg_1972 <= grp_fu_1083_p2;
        select_ln16_3_cast40_reg_1959[1 : 0] <= select_ln16_3_cast40_fu_1092_p1[1 : 0];
        smax_cast_reg_1965[1 : 0] <= smax_cast_fu_1095_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        mul_ln8_1_reg_1938 <= grp_fu_1067_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mul_ln8_reg_1921 <= grp_fu_1051_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        n_points_load_1_reg_2136 <= n_points_q0;
        p_x_reg_2141 <= p_x_fu_1608_p1;
        p_y_reg_2146 <= p_y_fu_1612_p1;
        p_z_reg_2151 <= p_z_fu_1616_p1;
        sum_x_reg_2156 <= sum_x_fu_1624_p1;
        sum_y_reg_2161 <= sum_y_fu_1639_p1;
        sum_z_reg_2166 <= sum_z_fu_1654_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        n_points_load_reg_1899 <= n_points_q0;
        select_ln16_1_reg_1887 <= select_ln16_1_fu_956_p3;
        smax_reg_1892 <= smax_fu_973_p3;
        sub_ln21_reg_1906 <= sub_ln21_fu_1035_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (select_ln8_8_reg_2025 == 1'd1))) begin
        select_ln8_7_reg_2056 <= select_ln8_7_fu_1416_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (select_ln8_8_reg_2025 == 1'd0))) begin
        trunc_ln29_9_reg_2071 <= trunc_ln29_9_fu_1443_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((grp_md_Pipeline_loop_q_fu_302_ap_done == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln14_fu_550_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_fu_550_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13))) begin
        force_r_ce0 = 1'b1;
    end else begin
        force_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        force_r_we0 = 1'b1;
    end else begin
        force_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        n_points_address0 = zext_ln29_fu_1487_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        n_points_address0 = p_cast41_fu_914_p1;
    end else begin
        n_points_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state13))) begin
        n_points_ce0 = 1'b1;
    end else begin
        n_points_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        position_address0 = zext_ln33_fu_1447_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        position_address0 = grp_md_Pipeline_loop_q_fu_302_position_address0;
    end else begin
        position_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        position_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        position_ce0 = grp_md_Pipeline_loop_q_fu_302_position_ce0;
    end else begin
        position_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln14_fu_550_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln21_fu_1151_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_md_Pipeline_loop_q_fu_302_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_1_fu_576_p2 = (indvars_iv71_fu_160 + 3'd1);

assign add_ln14_2_fu_556_p2 = (indvar_flatten178_fu_168 + 7'd1);

assign add_ln14_fu_571_p2 = (b0_x_fu_164 + 3'd1);

assign add_ln16_1_fu_747_p2 = (select_ln14_1_fu_587_p3 + 3'd1);

assign add_ln16_2_fu_1291_p2 = (indvar_flatten87_fu_156 + 6'd1);

assign add_ln16_fu_741_p2 = (select_ln14_fu_581_p3 + 3'd1);

assign add_ln18_1_fu_1286_p2 = (select_ln16_1_reg_1887 + 3'd1);

assign add_ln18_fu_1281_p2 = (select_ln16_reg_1845 + 3'd1);

assign add_ln21_1_fu_1156_p2 = (indvar_flatten50_reg_230 + 224'd1);

assign add_ln21_fu_1339_p2 = (b1_x_reg_241 + 64'd1);

assign add_ln23_1_fu_1267_p2 = (indvar_flatten22_reg_251 + 160'd1);

assign add_ln23_fu_1386_p2 = (select_ln8_reg_2002 + 64'd1);

assign add_ln25_1_fu_1253_p2 = (indvar_flatten_reg_271 + 96'd1);

assign add_ln25_fu_1466_p2 = (select_ln8_5_reg_2019 + 64'd1);

assign add_ln29_1_fu_1181_p2 = (tmp_s_fu_1134_p3 + trunc_ln29_fu_1108_p1);

assign add_ln29_2_fu_1403_p2 = (tmp_4_fu_1391_p3 + trunc_ln29_6_fu_1399_p1);

assign add_ln29_3_fu_1433_p2 = (tmp_3_fu_1378_p3 + trunc_ln29_7_fu_1429_p1);

assign add_ln29_4_fu_1475_p2 = (tmp_27_cast_fu_1459_p3 + trunc_ln29_10_fu_1471_p1);

assign add_ln29_fu_1128_p2 = (tmp_1_fu_1116_p3 + trunc_ln29_2_fu_1124_p1);

assign add_ln30_fu_1247_p2 = (select_ln8_9_fu_1234_p3 + 10'd1);

assign add_ln33_1_fu_1242_p2 = (add_ln33_reg_1877 + select_ln8_9_fu_1234_p3);

assign add_ln33_fu_943_p2 = (p_shl_fu_923_p3 + p_shl1_fu_935_p3);

assign add_ln39_1_fu_1532_p2 = (p_shl2_fu_1512_p3 + p_shl3_fu_1524_p3);

assign add_ln39_fu_1502_p2 = (tmp_6_fu_1452_p3 + trunc_ln39_fu_1498_p1);

assign and_ln14_fu_729_p2 = (xor_ln14_fu_718_p2 & icmp_ln18_fu_723_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign b0_x_cast_cast_fu_412_p1 = empty_12_fu_408_p1;

assign b0_x_cast_cast_mid1_fu_647_p1 = empty_21_fu_643_p1;

assign b0_y_cast_cast_fu_496_p1 = empty_17_fu_492_p1;

assign b0_y_cast_cast_mid1_fu_834_p1 = empty_23_fu_830_p1;

assign b0_z_cast_cast_fu_989_p1 = empty_26_reg_1882;

assign bitcast_ln57_fu_1668_p1 = grp_md_Pipeline_loop_q_fu_302_sum_x_2_out;

assign bitcast_ln58_fu_1672_p1 = grp_md_Pipeline_loop_q_fu_302_sum_y_2_out;

assign bitcast_ln59_fu_1676_p1 = grp_md_Pipeline_loop_q_fu_302_sum_z_2_out;

assign cmp18_fu_422_p2 = ((empty_13_fu_416_p2 > 3'd4) ? 1'b1 : 1'b0);

assign cmp18_mid1_fu_656_p2 = ((p_mid1112_fu_651_p2 > 3'd4) ? 1'b1 : 1'b0);

assign cmp41_fu_506_p2 = ((empty_18_fu_500_p2 > 3'd4) ? 1'b1 : 1'b0);

assign cmp41_mid1_fu_844_p2 = ((p_mid167_fu_838_p2 > 3'd4) ? 1'b1 : 1'b0);

assign cmp64_fu_997_p2 = ((empty_27_fu_992_p2 > 3'd4) ? 1'b1 : 1'b0);

assign cond24_fu_434_p3 = ((cmp18_fu_422_p2[0:0] == 1'b1) ? 3'd4 : empty_14_fu_428_p2);

assign cond24_mid1_fu_668_p3 = ((cmp18_mid1_fu_656_p2[0:0] == 1'b1) ? 3'd4 : p_mid1114_fu_662_p2);

assign cond47_fu_518_p3 = ((cmp41_fu_506_p2[0:0] == 1'b1) ? 3'd4 : empty_19_fu_512_p2);

assign cond47_mid1_fu_856_p3 = ((cmp41_mid1_fu_844_p2[0:0] == 1'b1) ? 3'd4 : p_mid169_fu_850_p2);

assign cond70_fu_1009_p3 = ((cmp64_fu_997_p2[0:0] == 1'b1) ? 3'd4 : empty_28_fu_1003_p2);

assign empty_12_fu_408_p1 = b0_x_fu_164[1:0];

assign empty_13_fu_416_p2 = (b0_x_fu_164 + 3'd2);

assign empty_14_fu_428_p2 = (b0_x_cast_cast_fu_412_p1 + 3'd2);

assign empty_15_fu_442_p2 = ((smax73_cast30_fu_404_p1 > cond24_fu_434_p3) ? 1'b1 : 1'b0);

assign empty_16_fu_470_p2 = (($signed(indvars_iv66_fu_148) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign empty_17_fu_492_p1 = b0_y_fu_152[1:0];

assign empty_18_fu_500_p2 = (b0_y_fu_152 + 3'd2);

assign empty_19_fu_512_p2 = (b0_y_cast_cast_fu_496_p1 + 3'd2);

assign empty_20_fu_526_p2 = ((smax68_cast32_fu_488_p1 > cond47_fu_518_p3) ? 1'b1 : 1'b0);

assign empty_21_fu_643_p1 = add_ln14_fu_571_p2[1:0];

assign empty_22_fu_778_p2 = (zext_ln14_1_fu_607_p1 + select_ln16_2_cast_fu_774_p1);

assign empty_23_fu_830_p1 = add_ln16_fu_741_p2[1:0];

assign empty_24_fu_908_p2 = (tmp_11_fu_792_p1 + select_ln16_cast_fu_904_p1);

assign empty_25_fu_967_p2 = (($signed(select_ln16_1_fu_956_p3) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign empty_26_fu_949_p1 = select_ln16_fu_758_p3[1:0];

assign empty_27_fu_992_p2 = (select_ln16_reg_1845 + 3'd2);

assign empty_28_fu_1003_p2 = (b0_z_cast_cast_fu_989_p1 + 3'd2);

assign empty_29_fu_1017_p2 = ((smax_cast36_fu_985_p1 > cond70_fu_1009_p3) ? 1'b1 : 1'b0);

assign empty_fu_386_p2 = (($signed(indvars_iv71_fu_160) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign force_r_address0 = force_r_addr_reg_2076;

assign force_r_d0 = {{{bitcast_ln59_fu_1676_p1}, {bitcast_ln58_fu_1672_p1}}, {bitcast_ln57_fu_1668_p1}};

assign grp_fu_1051_p0 = grp_fu_1051_p00;

assign grp_fu_1051_p00 = $unsigned(sext_ln8_fu_1041_p1);

assign grp_fu_1051_p1 = grp_fu_1051_p10;

assign grp_fu_1051_p10 = n_points_load_reg_1899;

assign grp_fu_1067_p0 = grp_fu_1067_p00;

assign grp_fu_1067_p00 = $unsigned(sext_ln8_1_fu_1057_p1);

assign grp_fu_1067_p1 = grp_fu_1067_p10;

assign grp_fu_1067_p10 = mul_ln8_reg_1921;

assign grp_fu_1083_p0 = grp_fu_1083_p00;

assign grp_fu_1083_p00 = $unsigned(sext_ln8_2_fu_1073_p1);

assign grp_fu_1083_p1 = grp_fu_1083_p10;

assign grp_fu_1083_p10 = mul_ln8_1_reg_1938;

assign grp_md_Pipeline_loop_q_fu_302_ap_start = grp_md_Pipeline_loop_q_fu_302_ap_start_reg;

assign icmp_ln14_fu_550_p2 = ((indvar_flatten178_fu_168 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_562_p2 = ((indvar_flatten87_fu_156 == 6'd16) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_723_p2 = ((b0_z_fu_144 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_1151_p2 = ((indvar_flatten50_reg_230 == mul_ln8_2_reg_1972) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_1162_p2 = ((indvar_flatten22_reg_251 == mul_ln8_1_reg_1938) ? 1'b1 : 1'b0);

assign icmp_ln25_1_fu_1194_p2 = ((indvar_flatten_reg_271 == mul_ln8_reg_1921) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_1103_p2 = ((mul_ln8_reg_1921 == 96'd0) ? 1'b1 : 1'b0);

assign icmp_ln30_1_fu_1098_p2 = (($signed(n_points_load_reg_1899) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_1146_p2 = (($signed(zext_ln30_fu_1142_p1) < $signed(n_points_load_reg_1899)) ? 1'b1 : 1'b0);

assign icmp_ln42_3_fu_1570_p2 = ((trunc_ln42_fu_1566_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_7_fu_1586_p2 = ((trunc_ln42_3_fu_1576_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_1602_p2 = ((trunc_ln42_5_fu_1592_p4 == 52'd0) ? 1'b1 : 1'b0);

assign or_ln16_fu_753_p2 = (icmp_ln16_reg_1805 | and_ln14_fu_729_p2);

assign or_ln8_fu_1213_p2 = (select_ln8_4_fu_1199_p3 | icmp_ln23_fu_1162_p2);

assign p_cast41_fu_914_p1 = empty_24_fu_908_p2;

assign p_mid1110_fu_615_p2 = (($signed(add_ln14_1_fu_576_p2) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign p_mid1112_fu_651_p2 = (b0_x_fu_164 + 3'd3);

assign p_mid1114_fu_662_p2 = (b0_x_cast_cast_mid1_fu_647_p1 + 3'd2);

assign p_mid1128_fu_676_p2 = ((zext_ln14_3_fu_633_p1 > cond24_mid1_fu_668_p3) ? 1'b1 : 1'b0);

assign p_mid167_fu_838_p2 = (select_ln14_fu_581_p3 + 3'd3);

assign p_mid169_fu_850_p2 = (b0_y_cast_cast_mid1_fu_834_p1 + 3'd2);

assign p_mid183_fu_864_p2 = ((zext_ln16_3_fu_818_p1 > cond47_mid1_fu_856_p3) ? 1'b1 : 1'b0);

assign p_mid1_fu_800_p2 = (($signed(add_ln16_1_fu_747_p2) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign p_shl1_fu_935_p3 = {{trunc_ln33_1_fu_931_p1}, {1'd0}};

assign p_shl2_fu_1512_p3 = {{trunc_ln39_4_fu_1508_p1}, {3'd0}};

assign p_shl3_fu_1524_p3 = {{trunc_ln39_5_fu_1520_p1}, {1'd0}};

assign p_shl_fu_923_p3 = {{trunc_ln33_fu_919_p1}, {3'd0}};

assign p_x_fu_1608_p1 = trunc_ln32_3_reg_2106;

assign p_y_fu_1612_p1 = trunc_ln32_1_reg_2111;

assign p_z_fu_1616_p1 = trunc_ln32_2_reg_2116;

assign select_ln14_1_fu_587_p3 = ((icmp_ln16_reg_1805[0:0] == 1'b1) ? 3'd7 : indvars_iv66_fu_148);

assign select_ln14_2_fu_593_p3 = ((icmp_ln16_reg_1805[0:0] == 1'b1) ? add_ln14_fu_571_p2 : b0_x_fu_164);

assign select_ln14_3_fu_637_p3 = ((icmp_ln16_reg_1805[0:0] == 1'b1) ? smax73_mid1_fu_621_p3 : smax73_reg_1777);

assign select_ln14_4_fu_700_p3 = ((icmp_ln16_reg_1805[0:0] == 1'b1) ? sub_ln16_1_fu_694_p2 : sub_ln16_reg_1782);

assign select_ln14_5_fu_706_p3 = ((icmp_ln16_reg_1805[0:0] == 1'b1) ? 2'd0 : smax68_reg_1787);

assign select_ln14_6_fu_712_p3 = ((icmp_ln16_reg_1805[0:0] == 1'b1) ? 4'd2 : sub_ln18_reg_1792);

assign select_ln14_7_fu_735_p3 = ((icmp_ln16_reg_1805[0:0] == 1'b1) ? add_ln14_1_fu_576_p2 : indvars_iv71_fu_160);

assign select_ln14_fu_581_p3 = ((icmp_ln16_reg_1805[0:0] == 1'b1) ? 3'd0 : b0_y_fu_152);

assign select_ln16_1_fu_956_p3 = ((or_ln16_reg_1840[0:0] == 1'b1) ? 3'd7 : indvars_iv62_fu_140);

assign select_ln16_2_cast_fu_774_p1 = select_ln16_2_fu_766_p3;

assign select_ln16_2_fu_766_p3 = ((and_ln14_fu_729_p2[0:0] == 1'b1) ? add_ln16_fu_741_p2 : select_ln14_fu_581_p3);

assign select_ln16_3_cast40_fu_1092_p1 = select_ln16_3_reg_1856;

assign select_ln16_3_fu_822_p3 = ((and_ln14_fu_729_p2[0:0] == 1'b1) ? smax68_mid1_fu_806_p3 : select_ln14_5_fu_706_p3);

assign select_ln16_4_fu_888_p3 = ((and_ln14_fu_729_p2[0:0] == 1'b1) ? sub_ln18_1_fu_882_p2 : select_ln14_6_fu_712_p3);

assign select_ln16_5_fu_896_p3 = ((and_ln14_fu_729_p2[0:0] == 1'b1) ? add_ln16_1_fu_747_p2 : select_ln14_1_fu_587_p3);

assign select_ln16_6_fu_1297_p3 = ((icmp_ln16_reg_1805[0:0] == 1'b1) ? 6'd1 : add_ln16_2_fu_1291_p2);

assign select_ln16_cast_fu_904_p1 = select_ln16_fu_758_p3;

assign select_ln16_fu_758_p3 = ((or_ln16_fu_753_p2[0:0] == 1'b1) ? 3'd0 : b0_z_fu_144);

assign select_ln21_fu_1363_p3 = ((icmp_ln23_reg_1996[0:0] == 1'b1) ? add_ln21_fu_1339_p2 : b1_x_reg_241);

assign select_ln23_1_fu_1273_p3 = ((icmp_ln23_fu_1162_p2[0:0] == 1'b1) ? 160'd1 : add_ln23_1_fu_1267_p2);

assign select_ln23_fu_1423_p3 = ((select_ln8_4_reg_2013[0:0] == 1'b1) ? add_ln23_fu_1386_p2 : select_ln8_reg_2002);

assign select_ln25_1_fu_1259_p3 = ((or_ln8_fu_1213_p2[0:0] == 1'b1) ? 96'd1 : add_ln25_1_fu_1253_p2);

assign select_ln25_fu_1492_p3 = ((select_ln8_8_reg_2025[0:0] == 1'b1) ? select_ln8_5_reg_2019 : add_ln25_fu_1466_p2);

assign select_ln8_10_fu_1481_p3 = ((select_ln8_8_reg_2025[0:0] == 1'b1) ? select_ln8_7_reg_2056 : add_ln29_4_fu_1475_p2);

assign select_ln8_1_fu_1174_p3 = ((icmp_ln23_fu_1162_p2[0:0] == 1'b1) ? smax_cast_reg_1965 : b1_z_reg_282);

assign select_ln8_2_fu_1357_p3 = ((icmp_ln23_reg_1996[0:0] == 1'b1) ? tmp_2_fu_1349_p4 : add_ln29_1_reg_2008);

assign select_ln8_3_fu_1187_p3 = ((icmp_ln23_fu_1162_p2[0:0] == 1'b1) ? icmp_ln30_1_reg_1977 : icmp_ln30_fu_1146_p2);

assign select_ln8_4_fu_1199_p3 = ((icmp_ln23_fu_1162_p2[0:0] == 1'b1) ? icmp_ln25_reg_1983 : icmp_ln25_1_fu_1194_p2);

assign select_ln8_5_fu_1206_p3 = ((select_ln8_4_fu_1199_p3[0:0] == 1'b1) ? smax_cast_reg_1965 : select_ln8_1_fu_1174_p3);

assign select_ln8_6_fu_1219_p3 = ((or_ln8_fu_1213_p2[0:0] == 1'b1) ? 10'd0 : p_idx_reg_291);

assign select_ln8_7_fu_1416_p3 = ((select_ln8_4_reg_2013[0:0] == 1'b1) ? tmp_5_fu_1409_p3 : select_ln8_2_fu_1357_p3);

assign select_ln8_8_fu_1227_p3 = ((select_ln8_4_fu_1199_p3[0:0] == 1'b1) ? icmp_ln30_1_reg_1977 : select_ln8_3_fu_1187_p3);

assign select_ln8_9_fu_1234_p3 = ((select_ln8_8_fu_1227_p3[0:0] == 1'b1) ? select_ln8_6_fu_1219_p3 : 10'd0);

assign select_ln8_fu_1167_p3 = ((icmp_ln23_fu_1162_p2[0:0] == 1'b1) ? select_ln16_3_cast40_reg_1959 : b1_y_reg_262);

assign sext_ln8_1_fu_1057_p1 = $signed(select_ln16_4_reg_1862);

assign sext_ln8_2_fu_1073_p1 = $signed(select_ln14_4_reg_1830);

assign sext_ln8_fu_1041_p1 = $signed(sub_ln21_reg_1906);

assign smax28_fu_448_p3 = ((empty_15_fu_442_p2[0:0] == 1'b1) ? smax73_cast30_fu_404_p1 : cond24_fu_434_p3);

assign smax28_mid1_fu_682_p3 = ((p_mid1128_fu_676_p2[0:0] == 1'b1) ? zext_ln14_3_fu_633_p1 : cond24_mid1_fu_668_p3);

assign smax3_fu_1023_p3 = ((empty_29_fu_1017_p2[0:0] == 1'b1) ? smax_cast36_fu_985_p1 : cond70_fu_1009_p3);

assign smax68_cast32_fu_488_p1 = smax68_fu_476_p3;

assign smax68_cast33_fu_484_p1 = smax68_fu_476_p3;

assign smax68_fu_476_p3 = ((empty_16_fu_470_p2[0:0] == 1'b1) ? trunc_ln16_fu_466_p1 : 2'd0);

assign smax68_mid1_fu_806_p3 = ((p_mid1_fu_800_p2[0:0] == 1'b1) ? trunc_ln16_1_fu_796_p1 : 2'd0);

assign smax73_cast30_fu_404_p1 = smax73_fu_392_p3;

assign smax73_cast31_fu_400_p1 = smax73_fu_392_p3;

assign smax73_fu_392_p3 = ((empty_fu_386_p2[0:0] == 1'b1) ? trunc_ln14_fu_382_p1 : 2'd0);

assign smax73_mid1_fu_621_p3 = ((p_mid1110_fu_615_p2[0:0] == 1'b1) ? trunc_ln14_1_fu_611_p1 : 2'd0);

assign smax8_fu_532_p3 = ((empty_20_fu_526_p2[0:0] == 1'b1) ? smax68_cast32_fu_488_p1 : cond47_fu_518_p3);

assign smax8_mid1_fu_870_p3 = ((p_mid183_fu_864_p2[0:0] == 1'b1) ? zext_ln16_3_fu_818_p1 : cond47_mid1_fu_856_p3);

assign smax_cast36_fu_985_p1 = smax_fu_973_p3;

assign smax_cast37_fu_981_p1 = smax_fu_973_p3;

assign smax_cast_fu_1095_p1 = smax_reg_1892;

assign smax_fu_973_p3 = ((empty_25_fu_967_p2[0:0] == 1'b1) ? trunc_ln18_fu_963_p1 : 2'd0);

assign sub_ln16_1_fu_694_p2 = (zext_ln16_1_fu_690_p1 - zext_ln14_2_fu_629_p1);

assign sub_ln16_fu_460_p2 = (zext_ln16_fu_456_p1 - smax73_cast31_fu_400_p1);

assign sub_ln18_1_fu_882_p2 = (zext_ln18_1_fu_878_p1 - zext_ln16_2_fu_814_p1);

assign sub_ln18_fu_544_p2 = (zext_ln18_fu_540_p1 - smax68_cast33_fu_484_p1);

assign sub_ln21_fu_1035_p2 = (zext_ln21_fu_1031_p1 - smax_cast37_fu_981_p1);

assign sum_x_fu_1624_p1 = trunc_ln33_2_fu_1620_p1;

assign sum_y_fu_1639_p1 = trunc_ln5_fu_1629_p4;

assign sum_z_fu_1654_p1 = trunc_ln6_fu_1644_p4;

assign tmp_11_fu_792_p1 = tmp_fu_784_p3;

assign tmp_1_fu_1116_p3 = {{trunc_ln29_1_fu_1112_p1}, {2'd0}};

assign tmp_27_cast_fu_1459_p3 = {{trunc_ln29_9_reg_2071}, {2'd0}};

assign tmp_2_fu_1349_p4 = {{{trunc_ln29_3_fu_1345_p1}, {select_ln16_3_reg_1856}}, {smax_reg_1892}};

assign tmp_3_fu_1378_p3 = {{trunc_ln29_4_fu_1370_p1}, {2'd0}};

assign tmp_4_fu_1391_p3 = {{trunc_ln29_5_fu_1374_p1}, {2'd0}};

assign tmp_5_fu_1409_p3 = {{add_ln29_2_fu_1403_p2}, {smax_reg_1892}};

assign tmp_6_fu_1452_p3 = {{trunc_ln29_8_reg_2066}, {2'd0}};

assign tmp_9_fu_599_p3 = {{select_ln14_2_fu_593_p3}, {2'd0}};

assign tmp_fu_784_p3 = {{empty_22_fu_778_p2}, {2'd0}};

assign tmp_s_fu_1134_p3 = {{add_ln29_fu_1128_p2}, {2'd0}};

assign trunc_ln14_1_fu_611_p1 = add_ln14_1_fu_576_p2[1:0];

assign trunc_ln14_fu_382_p1 = indvars_iv71_fu_160[1:0];

assign trunc_ln16_1_fu_796_p1 = add_ln16_1_fu_747_p2[1:0];

assign trunc_ln16_fu_466_p1 = indvars_iv66_fu_148[1:0];

assign trunc_ln18_fu_963_p1 = select_ln16_1_fu_956_p3[1:0];

assign trunc_ln29_10_fu_1471_p1 = add_ln25_fu_1466_p2[5:0];

assign trunc_ln29_1_fu_1112_p1 = b1_x_reg_241[1:0];

assign trunc_ln29_2_fu_1124_p1 = b1_y_reg_262[3:0];

assign trunc_ln29_3_fu_1345_p1 = add_ln21_fu_1339_p2[1:0];

assign trunc_ln29_4_fu_1370_p1 = select_ln21_fu_1363_p3[59:0];

assign trunc_ln29_5_fu_1374_p1 = select_ln21_fu_1363_p3[1:0];

assign trunc_ln29_6_fu_1399_p1 = add_ln23_fu_1386_p2[3:0];

assign trunc_ln29_7_fu_1429_p1 = select_ln23_fu_1423_p3[61:0];

assign trunc_ln29_8_fu_1439_p1 = add_ln29_3_fu_1433_p2[60:0];

assign trunc_ln29_9_fu_1443_p1 = add_ln29_3_fu_1433_p2[3:0];

assign trunc_ln29_fu_1108_p1 = b1_z_reg_282[5:0];

assign trunc_ln32_3_fu_1542_p1 = position_q0[63:0];

assign trunc_ln32_fu_1538_p1 = position_q0[190:0];

assign trunc_ln33_1_fu_931_p1 = empty_24_fu_908_p2[8:0];

assign trunc_ln33_2_fu_1620_p1 = force_r_q0[63:0];

assign trunc_ln33_fu_919_p1 = empty_24_fu_908_p2[6:0];

assign trunc_ln39_4_fu_1508_p1 = add_ln39_fu_1502_p2[6:0];

assign trunc_ln39_5_fu_1520_p1 = add_ln39_fu_1502_p2[8:0];

assign trunc_ln39_fu_1498_p1 = select_ln25_fu_1492_p3[62:0];

assign trunc_ln42_3_fu_1576_p4 = {{position_q0[115:64]}};

assign trunc_ln42_5_fu_1592_p4 = {{position_q0[179:128]}};

assign trunc_ln42_fu_1566_p1 = position_q0[51:0];

assign trunc_ln5_fu_1629_p4 = {{force_r_q0[127:64]}};

assign trunc_ln6_fu_1644_p4 = {{force_r_q0[191:128]}};

assign xor_ln14_fu_718_p2 = (icmp_ln16_reg_1805 ^ 1'd1);

assign zext_ln14_1_fu_607_p1 = tmp_9_fu_599_p3;

assign zext_ln14_2_fu_629_p1 = smax73_mid1_fu_621_p3;

assign zext_ln14_3_fu_633_p1 = smax73_mid1_fu_621_p3;

assign zext_ln14_fu_1089_p1 = select_ln14_3_reg_1825;

assign zext_ln16_1_fu_690_p1 = smax28_mid1_fu_682_p3;

assign zext_ln16_2_fu_814_p1 = smax68_mid1_fu_806_p3;

assign zext_ln16_3_fu_818_p1 = smax68_mid1_fu_806_p3;

assign zext_ln16_fu_456_p1 = smax28_fu_448_p3;

assign zext_ln18_1_fu_878_p1 = smax8_mid1_fu_870_p3;

assign zext_ln18_fu_540_p1 = smax8_fu_532_p3;

assign zext_ln21_fu_1031_p1 = smax3_fu_1023_p3;

assign zext_ln29_fu_1487_p1 = select_ln8_10_fu_1481_p3;

assign zext_ln30_fu_1142_p1 = p_idx_reg_291;

assign zext_ln33_fu_1447_p1 = add_ln33_1_reg_2031;

always @ (posedge ap_clk) begin
    add_ln33_reg_1877[0] <= 1'b0;
    select_ln16_3_cast40_reg_1959[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    smax_cast_reg_1965[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    add_ln39_1_reg_2096[0] <= 1'b0;
end

endmodule //md
