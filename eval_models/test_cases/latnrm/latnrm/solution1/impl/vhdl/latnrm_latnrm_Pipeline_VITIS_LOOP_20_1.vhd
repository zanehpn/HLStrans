-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
-- Version: 2022.2.2
-- Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity latnrm_latnrm_Pipeline_VITIS_LOOP_20_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    empty_56 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_57 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_58 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_59 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_60 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_61 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_62 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_63 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_64 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_65 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_66 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_67 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_68 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_69 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_70 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_71 : IN STD_LOGIC_VECTOR (31 downto 0);
    coeff_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    coeff_V_ce0 : OUT STD_LOGIC;
    coeff_V_we0 : OUT STD_LOGIC;
    coeff_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    coeff_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    coeff_V_ce1 : OUT STD_LOGIC;
    coeff_V_we1 : OUT STD_LOGIC;
    coeff_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    empty_72 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_73 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_74 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_75 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_76 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_77 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_78 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_79 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_80 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_81 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_82 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_83 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_84 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_85 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_86 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_87 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_88 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_89 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_90 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_91 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_92 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_93 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_94 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_95 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_96 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_97 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_98 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_99 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_100 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_101 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_102 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_103 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_104 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_105 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_106 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_107 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_108 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_109 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_110 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_111 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_112 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_113 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_114 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_115 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_116 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_117 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty_118 : IN STD_LOGIC_VECTOR (31 downto 0);
    empty : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4824_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4824_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_4824_p_ce : OUT STD_LOGIC );
end;


architecture behav of latnrm_latnrm_Pipeline_VITIS_LOOP_20_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv12_C02 : STD_LOGIC_VECTOR (11 downto 0) := "110000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv12_11 : STD_LOGIC_VECTOR (11 downto 0) := "000000010001";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal tmp_396_reg_3530 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal j_2_reg_3524 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_2_reg_3524_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_396_fu_671_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_121_fu_679_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_121_reg_3534 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_121_reg_3534_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal d_assign_fu_683_p63 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_reg_3541 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_2_fu_812_p63 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_2_reg_3547 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_5_fu_941_p63 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_5_reg_3553 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_5_reg_3553_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_7_fu_1069_p63 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_7_reg_3559 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_7_reg_3559_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal neg_src_fu_1205_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_reg_3565 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal man_V_fu_1249_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_reg_3571 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln560_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln560_reg_3577 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_1263_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_3583 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln570_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_reg_3589 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1287_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_3594 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln572_fu_1295_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln572_reg_3600 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_398_reg_3606 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln570_8_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_8_reg_3611 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_fu_1341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_reg_3616 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_fu_1347_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos1_reg_3621 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_403_reg_3627 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_fu_1365_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_reg_3632 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_96_fu_1381_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_96_reg_3637 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_27_fu_1425_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_27_reg_3643 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln560_2_fu_1433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln560_2_reg_3649 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_4_fu_1439_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_4_reg_3655 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln570_2_fu_1445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_2_reg_3661 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_4_fu_1463_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_4_reg_3666 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln572_4_fu_1471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln572_4_reg_3672 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_406_reg_3678 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln570_9_fu_1495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_9_reg_3683 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_4_fu_1517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_4_reg_3688 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_4_fu_1523_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos1_4_reg_3693 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_411_reg_3699 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_3_fu_1541_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_3_reg_3704 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_206_fu_1671_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_206_reg_3709 : STD_LOGIC_VECTOR (31 downto 0);
    signal overflow_fu_1886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_reg_3714 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_fu_1909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_reg_3719 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_208_fu_2027_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_208_reg_3724 : STD_LOGIC_VECTOR (31 downto 0);
    signal overflow_96_fu_2242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_96_reg_3729 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_2_fu_2265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_2_reg_3734 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_97_fu_2279_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_97_reg_3739 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_28_fu_2323_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_28_reg_3745 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln560_4_fu_2331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln560_4_reg_3751 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_5_fu_2337_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_5_reg_3757 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln570_5_fu_2343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_5_reg_3763 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_5_fu_2361_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_5_reg_3768 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln572_5_fu_2369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln572_5_reg_3774 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_414_reg_3780 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln570_10_fu_2393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_10_reg_3785 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_5_fu_2415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_5_reg_3790 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_5_fu_2421_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos1_5_reg_3795 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_419_reg_3801 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_5_fu_2439_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_5_reg_3806 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_98_fu_2455_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_98_reg_3811 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_29_fu_2499_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_29_reg_3817 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln560_5_fu_2507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln560_5_reg_3823 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_6_fu_2513_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_6_reg_3829 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln570_7_fu_2519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_7_reg_3835 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_6_fu_2537_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_6_reg_3840 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln572_6_fu_2545_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln572_6_reg_3846 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_422_reg_3852 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln570_11_fu_2569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln570_11_reg_3857 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_6_fu_2591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_6_reg_3862 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_6_fu_2597_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos1_6_reg_3867 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_427_reg_3873 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_9_fu_2615_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lD_9_reg_3878 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_210_fu_2823_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_210_reg_3883 : STD_LOGIC_VECTOR (31 downto 0);
    signal overflow_97_fu_3038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_97_reg_3888 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_4_fu_3061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_4_reg_3893 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_212_fu_3179_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_212_reg_3898 : STD_LOGIC_VECTOR (31 downto 0);
    signal overflow_98_fu_3394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_98_reg_3903 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_5_fu_3417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln302_5_reg_3908 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal j_cast337_fu_2623_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln22_fu_2669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln22_1_fu_3428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln22_2_fu_3475_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_228 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln20_fu_1549_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln560_fu_2656_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln560_1_fu_2703_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln560_2_fu_3462_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln560_3_fu_3509_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_657_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_660_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_fu_1197_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_1213_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln554_fu_1227_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_s_fu_1231_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln558_fu_1239_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_16_fu_1243_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln544_fu_1201_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_fu_1223_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln570_fu_1275_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln570_fu_1281_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_400_fu_1309_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln601_fu_1325_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_401_fu_1331_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln607_fu_1353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_4_fu_1373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_4_fu_1389_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln554_4_fu_1403_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_234_fu_1407_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln558_4_fu_1415_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_19_fu_1419_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln544_4_fu_1377_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_2_fu_1399_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln570_2_fu_1451_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln570_2_fu_1457_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_408_fu_1485_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln601_2_fu_1501_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_409_fu_1507_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln607_1_fu_1529_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln570_fu_1559_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln575_fu_1577_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln575_fu_1581_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln724_fu_1590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_399_fu_1593_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_fu_1562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_1621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln570_fu_1627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln574_fu_1567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_fu_1632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln575_fu_1586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_fu_1614_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln574_fu_1646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_1_fu_1652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln577_fu_1601_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_fu_1638_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln592_fu_1572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln592_fu_1666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln593_fu_1609_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_1_fu_1658_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln610_2_fu_1702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_fu_1679_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln624_fu_1724_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln624_fu_1728_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_9_fu_1732_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_fu_1737_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_404_fu_1749_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_1_fu_1718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_1743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_14_fu_1757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_15_fu_1763_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_32_fu_1707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln630_fu_1783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_9_fu_1777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln631_fu_1795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_31_fu_1697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln610_fu_1692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_fu_1801_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln610_fu_1817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_fu_1712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_fu_1829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_1_fu_1835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln630_fu_1789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_fu_1823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_1_fu_1809_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_1771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_1_fu_1849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_233_fu_1684_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1841_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_fu_1869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln647_fu_1875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_1_fu_1881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_1855_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln648_fu_1892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_2_fu_1863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln648_fu_1898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_1904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln570_1_fu_1915_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln575_4_fu_1933_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln575_2_fu_1937_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln724_4_fu_1946_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_407_fu_1949_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_2_fu_1918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_1_fu_1977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln570_1_fu_1983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln574_2_fu_1923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_2_fu_1988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln575_4_fu_1942_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_1_fu_1970_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln574_1_fu_2002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_3_fu_2008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln577_4_fu_1957_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_2_fu_1994_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln592_4_fu_1928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln592_1_fu_2022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln593_2_fu_1965_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_3_fu_2014_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln610_7_fu_2058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_4_fu_2035_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln624_4_fu_2080_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln624_4_fu_2084_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_11_fu_2088_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_374_fu_2093_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_412_fu_2105_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_5_fu_2074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_16_fu_2099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_17_fu_2113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_18_fu_2119_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_34_fu_2063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln630_2_fu_2139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_11_fu_2133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln631_2_fu_2151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_33_fu_2053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln610_4_fu_2048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_4_fu_2157_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln610_1_fu_2173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_4_fu_2068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_2_fu_2185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_3_fu_2191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln630_2_fu_2145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_3_fu_2179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_5_fu_2165_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_24_fu_2127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_4_fu_2205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_235_fu_2040_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_4_fu_2197_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_4_fu_2225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln647_2_fu_2231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_5_fu_2237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_4_fu_2211_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln648_3_fu_2248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_5_fu_2219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln648_1_fu_2254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_96_fu_2260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ireg_5_fu_2271_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_5_fu_2287_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln554_5_fu_2301_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_236_fu_2305_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln558_5_fu_2313_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_22_fu_2317_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln544_5_fu_2275_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_4_fu_2297_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln570_4_fu_2349_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln570_4_fu_2355_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_416_fu_2383_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln601_4_fu_2399_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_417_fu_2405_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln607_2_fu_2427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_6_fu_2447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_6_fu_2463_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln554_6_fu_2477_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_238_fu_2481_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln558_6_fu_2489_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_25_fu_2493_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln544_6_fu_2451_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln455_5_fu_2473_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln570_5_fu_2525_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln570_5_fu_2531_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_424_fu_2559_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln601_5_fu_2575_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_425_fu_2581_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln607_3_fu_2603_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln560_fu_2634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_fu_2639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_1_fu_2644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_fu_2627_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln302_fu_2649_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln20_fu_2664_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln560_1_fu_2681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_2_fu_2686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_3_fu_2691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_4_fu_2674_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln302_1_fu_2696_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln570_2_fu_2711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln575_5_fu_2729_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln575_4_fu_2733_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln724_7_fu_2742_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_415_fu_2745_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_4_fu_2714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_2_fu_2773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln570_2_fu_2779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln574_4_fu_2719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_4_fu_2784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln575_5_fu_2738_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_2_fu_2766_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln574_2_fu_2798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_5_fu_2804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln577_5_fu_2753_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_4_fu_2790_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln592_5_fu_2724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln592_2_fu_2818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln593_4_fu_2761_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_5_fu_2810_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln610_9_fu_2854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_5_fu_2831_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln624_5_fu_2876_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln624_5_fu_2880_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_13_fu_2884_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_375_fu_2889_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_420_fu_2901_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_10_fu_2870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_19_fu_2895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_20_fu_2909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_21_fu_2915_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_36_fu_2859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln630_4_fu_2935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_13_fu_2929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln631_4_fu_2947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_35_fu_2849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln610_8_fu_2844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_9_fu_2953_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln610_2_fu_2969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_9_fu_2864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_4_fu_2981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_5_fu_2987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln630_4_fu_2941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_6_fu_2975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_10_fu_2961_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_27_fu_2923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_7_fu_3001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_237_fu_2836_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_5_fu_2993_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_9_fu_3021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln647_4_fu_3027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_10_fu_3033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_5_fu_3007_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln648_5_fu_3044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_8_fu_3015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln648_2_fu_3050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_97_fu_3056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln570_3_fu_3067_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln575_6_fu_3085_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln575_5_fu_3089_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln724_9_fu_3098_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_423_fu_3101_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_5_fu_3070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_3_fu_3129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln570_3_fu_3135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln574_5_fu_3075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_6_fu_3140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln575_6_fu_3094_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln571_3_fu_3122_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln574_3_fu_3154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln574_7_fu_3160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln577_6_fu_3109_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_6_fu_3146_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln592_6_fu_3080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln592_3_fu_3174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln593_5_fu_3117_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln574_7_fu_3166_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln610_11_fu_3210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_6_fu_3187_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln624_6_fu_3232_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln624_6_fu_3236_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_15_fu_3240_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal r_V_376_fu_3245_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_428_fu_3257_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_12_fu_3226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_22_fu_3251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_23_fu_3265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_24_fu_3271_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_38_fu_3215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln630_5_fu_3291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_15_fu_3285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln631_5_fu_3303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_37_fu_3205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln610_10_fu_3200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_11_fu_3309_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln610_3_fu_3325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_11_fu_3220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_6_fu_3337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln628_7_fu_3343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln630_5_fu_3297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_9_fu_3331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_12_fu_3317_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_30_fu_3279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_10_fu_3357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_239_fu_3192_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_6_fu_3349_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_11_fu_3377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln647_5_fu_3383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln647_12_fu_3389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_6_fu_3363_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln648_9_fu_3400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln610_11_fu_3371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln648_3_fu_3406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_98_fu_3412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln20_1_fu_3423_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln560_2_fu_3440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_4_fu_3445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_5_fu_3450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_8_fu_3433_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln302_2_fu_3455_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln20_2_fu_3470_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln560_3_fu_3487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_6_fu_3492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln302_7_fu_3497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln346_10_fu_3480_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln302_3_fu_3502_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component latnrm_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component latnrm_mux_616_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (31 downto 0);
        din34 : IN STD_LOGIC_VECTOR (31 downto 0);
        din35 : IN STD_LOGIC_VECTOR (31 downto 0);
        din36 : IN STD_LOGIC_VECTOR (31 downto 0);
        din37 : IN STD_LOGIC_VECTOR (31 downto 0);
        din38 : IN STD_LOGIC_VECTOR (31 downto 0);
        din39 : IN STD_LOGIC_VECTOR (31 downto 0);
        din40 : IN STD_LOGIC_VECTOR (31 downto 0);
        din41 : IN STD_LOGIC_VECTOR (31 downto 0);
        din42 : IN STD_LOGIC_VECTOR (31 downto 0);
        din43 : IN STD_LOGIC_VECTOR (31 downto 0);
        din44 : IN STD_LOGIC_VECTOR (31 downto 0);
        din45 : IN STD_LOGIC_VECTOR (31 downto 0);
        din46 : IN STD_LOGIC_VECTOR (31 downto 0);
        din47 : IN STD_LOGIC_VECTOR (31 downto 0);
        din48 : IN STD_LOGIC_VECTOR (31 downto 0);
        din49 : IN STD_LOGIC_VECTOR (31 downto 0);
        din50 : IN STD_LOGIC_VECTOR (31 downto 0);
        din51 : IN STD_LOGIC_VECTOR (31 downto 0);
        din52 : IN STD_LOGIC_VECTOR (31 downto 0);
        din53 : IN STD_LOGIC_VECTOR (31 downto 0);
        din54 : IN STD_LOGIC_VECTOR (31 downto 0);
        din55 : IN STD_LOGIC_VECTOR (31 downto 0);
        din56 : IN STD_LOGIC_VECTOR (31 downto 0);
        din57 : IN STD_LOGIC_VECTOR (31 downto 0);
        din58 : IN STD_LOGIC_VECTOR (31 downto 0);
        din59 : IN STD_LOGIC_VECTOR (31 downto 0);
        din60 : IN STD_LOGIC_VECTOR (31 downto 0);
        din61 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component latnrm_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fpext_32ns_64_2_no_dsp_1_U2 : component latnrm_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_660_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_660_p1);

    mux_616_32_1_1_U3 : component latnrm_mux_616_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => empty_56,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => empty_57,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => empty_58,
        din9 => ap_const_lv32_0,
        din10 => ap_const_lv32_0,
        din11 => ap_const_lv32_0,
        din12 => empty_59,
        din13 => ap_const_lv32_0,
        din14 => ap_const_lv32_0,
        din15 => ap_const_lv32_0,
        din16 => empty_60,
        din17 => ap_const_lv32_0,
        din18 => ap_const_lv32_0,
        din19 => ap_const_lv32_0,
        din20 => empty_61,
        din21 => ap_const_lv32_0,
        din22 => ap_const_lv32_0,
        din23 => ap_const_lv32_0,
        din24 => empty_62,
        din25 => ap_const_lv32_0,
        din26 => ap_const_lv32_0,
        din27 => ap_const_lv32_0,
        din28 => empty_63,
        din29 => ap_const_lv32_0,
        din30 => ap_const_lv32_0,
        din31 => ap_const_lv32_0,
        din32 => empty_64,
        din33 => ap_const_lv32_0,
        din34 => ap_const_lv32_0,
        din35 => ap_const_lv32_0,
        din36 => empty_65,
        din37 => ap_const_lv32_0,
        din38 => ap_const_lv32_0,
        din39 => ap_const_lv32_0,
        din40 => empty_66,
        din41 => ap_const_lv32_0,
        din42 => ap_const_lv32_0,
        din43 => ap_const_lv32_0,
        din44 => empty_67,
        din45 => ap_const_lv32_0,
        din46 => ap_const_lv32_0,
        din47 => ap_const_lv32_0,
        din48 => empty_68,
        din49 => ap_const_lv32_0,
        din50 => ap_const_lv32_0,
        din51 => ap_const_lv32_0,
        din52 => empty_69,
        din53 => ap_const_lv32_0,
        din54 => ap_const_lv32_0,
        din55 => ap_const_lv32_0,
        din56 => empty_70,
        din57 => ap_const_lv32_0,
        din58 => ap_const_lv32_0,
        din59 => ap_const_lv32_0,
        din60 => empty_71,
        din61 => empty_121_fu_679_p1,
        dout => d_assign_fu_683_p63);

    mux_616_32_1_1_U4 : component latnrm_mux_616_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => empty_72,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => empty_73,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => empty_74,
        din9 => ap_const_lv32_0,
        din10 => ap_const_lv32_0,
        din11 => ap_const_lv32_0,
        din12 => empty_75,
        din13 => ap_const_lv32_0,
        din14 => ap_const_lv32_0,
        din15 => ap_const_lv32_0,
        din16 => empty_76,
        din17 => ap_const_lv32_0,
        din18 => ap_const_lv32_0,
        din19 => ap_const_lv32_0,
        din20 => empty_77,
        din21 => ap_const_lv32_0,
        din22 => ap_const_lv32_0,
        din23 => ap_const_lv32_0,
        din24 => empty_78,
        din25 => ap_const_lv32_0,
        din26 => ap_const_lv32_0,
        din27 => ap_const_lv32_0,
        din28 => empty_79,
        din29 => ap_const_lv32_0,
        din30 => ap_const_lv32_0,
        din31 => ap_const_lv32_0,
        din32 => empty_80,
        din33 => ap_const_lv32_0,
        din34 => ap_const_lv32_0,
        din35 => ap_const_lv32_0,
        din36 => empty_81,
        din37 => ap_const_lv32_0,
        din38 => ap_const_lv32_0,
        din39 => ap_const_lv32_0,
        din40 => empty_82,
        din41 => ap_const_lv32_0,
        din42 => ap_const_lv32_0,
        din43 => ap_const_lv32_0,
        din44 => empty_83,
        din45 => ap_const_lv32_0,
        din46 => ap_const_lv32_0,
        din47 => ap_const_lv32_0,
        din48 => empty_84,
        din49 => ap_const_lv32_0,
        din50 => ap_const_lv32_0,
        din51 => ap_const_lv32_0,
        din52 => empty_85,
        din53 => ap_const_lv32_0,
        din54 => ap_const_lv32_0,
        din55 => ap_const_lv32_0,
        din56 => empty_86,
        din57 => ap_const_lv32_0,
        din58 => ap_const_lv32_0,
        din59 => ap_const_lv32_0,
        din60 => empty_87,
        din61 => empty_121_fu_679_p1,
        dout => d_assign_2_fu_812_p63);

    mux_616_32_1_1_U5 : component latnrm_mux_616_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => empty_88,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => empty_89,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => empty_90,
        din9 => ap_const_lv32_0,
        din10 => ap_const_lv32_0,
        din11 => ap_const_lv32_0,
        din12 => empty_91,
        din13 => ap_const_lv32_0,
        din14 => ap_const_lv32_0,
        din15 => ap_const_lv32_0,
        din16 => empty_92,
        din17 => ap_const_lv32_0,
        din18 => ap_const_lv32_0,
        din19 => ap_const_lv32_0,
        din20 => empty_93,
        din21 => ap_const_lv32_0,
        din22 => ap_const_lv32_0,
        din23 => ap_const_lv32_0,
        din24 => empty_94,
        din25 => ap_const_lv32_0,
        din26 => ap_const_lv32_0,
        din27 => ap_const_lv32_0,
        din28 => empty_95,
        din29 => ap_const_lv32_0,
        din30 => ap_const_lv32_0,
        din31 => ap_const_lv32_0,
        din32 => empty_96,
        din33 => ap_const_lv32_0,
        din34 => ap_const_lv32_0,
        din35 => ap_const_lv32_0,
        din36 => empty_97,
        din37 => ap_const_lv32_0,
        din38 => ap_const_lv32_0,
        din39 => ap_const_lv32_0,
        din40 => empty_98,
        din41 => ap_const_lv32_0,
        din42 => ap_const_lv32_0,
        din43 => ap_const_lv32_0,
        din44 => empty_99,
        din45 => ap_const_lv32_0,
        din46 => ap_const_lv32_0,
        din47 => ap_const_lv32_0,
        din48 => empty_100,
        din49 => ap_const_lv32_0,
        din50 => ap_const_lv32_0,
        din51 => ap_const_lv32_0,
        din52 => empty_101,
        din53 => ap_const_lv32_0,
        din54 => ap_const_lv32_0,
        din55 => ap_const_lv32_0,
        din56 => empty_102,
        din57 => ap_const_lv32_0,
        din58 => ap_const_lv32_0,
        din59 => ap_const_lv32_0,
        din60 => empty_103,
        din61 => empty_121_fu_679_p1,
        dout => d_assign_5_fu_941_p63);

    mux_616_32_1_1_U6 : component latnrm_mux_616_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => empty_104,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_0,
        din3 => ap_const_lv32_0,
        din4 => empty_105,
        din5 => ap_const_lv32_0,
        din6 => ap_const_lv32_0,
        din7 => ap_const_lv32_0,
        din8 => empty_106,
        din9 => ap_const_lv32_0,
        din10 => ap_const_lv32_0,
        din11 => ap_const_lv32_0,
        din12 => empty_107,
        din13 => ap_const_lv32_0,
        din14 => ap_const_lv32_0,
        din15 => ap_const_lv32_0,
        din16 => empty_108,
        din17 => ap_const_lv32_0,
        din18 => ap_const_lv32_0,
        din19 => ap_const_lv32_0,
        din20 => empty_109,
        din21 => ap_const_lv32_0,
        din22 => ap_const_lv32_0,
        din23 => ap_const_lv32_0,
        din24 => empty_110,
        din25 => ap_const_lv32_0,
        din26 => ap_const_lv32_0,
        din27 => ap_const_lv32_0,
        din28 => empty_111,
        din29 => ap_const_lv32_0,
        din30 => ap_const_lv32_0,
        din31 => ap_const_lv32_0,
        din32 => empty_112,
        din33 => ap_const_lv32_0,
        din34 => ap_const_lv32_0,
        din35 => ap_const_lv32_0,
        din36 => empty_113,
        din37 => ap_const_lv32_0,
        din38 => ap_const_lv32_0,
        din39 => ap_const_lv32_0,
        din40 => empty_114,
        din41 => ap_const_lv32_0,
        din42 => ap_const_lv32_0,
        din43 => ap_const_lv32_0,
        din44 => empty_115,
        din45 => ap_const_lv32_0,
        din46 => ap_const_lv32_0,
        din47 => ap_const_lv32_0,
        din48 => empty_116,
        din49 => ap_const_lv32_0,
        din50 => ap_const_lv32_0,
        din51 => ap_const_lv32_0,
        din52 => empty_117,
        din53 => ap_const_lv32_0,
        din54 => ap_const_lv32_0,
        din55 => ap_const_lv32_0,
        din56 => empty_118,
        din57 => ap_const_lv32_0,
        din58 => ap_const_lv32_0,
        din59 => ap_const_lv32_0,
        din60 => empty,
        din61 => empty_121_fu_679_p1,
        dout => d_assign_7_fu_1069_p63);

    flow_control_loop_pipe_sequential_init_U : component latnrm_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    j_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_fu_228 <= ap_const_lv7_0;
            elsif (((tmp_396_reg_3530 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                j_fu_228 <= add_ln20_fu_1549_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_396_reg_3530 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                F2_4_reg_3655 <= F2_4_fu_1439_p2;
                F2_reg_3583 <= F2_fu_1263_p2;
                icmp_ln560_2_reg_3649 <= icmp_ln560_2_fu_1433_p2;
                icmp_ln560_reg_3577 <= icmp_ln560_fu_1257_p2;
                icmp_ln570_2_reg_3661 <= icmp_ln570_2_fu_1445_p2;
                icmp_ln570_8_reg_3611 <= icmp_ln570_8_fu_1319_p2;
                icmp_ln570_9_reg_3683 <= icmp_ln570_9_fu_1495_p2;
                icmp_ln570_reg_3589 <= icmp_ln570_fu_1269_p2;
                icmp_ln600_4_reg_3688 <= icmp_ln600_4_fu_1517_p2;
                icmp_ln600_reg_3616 <= icmp_ln600_fu_1341_p2;
                lD_3_reg_3704 <= lD_3_fu_1541_p3;
                lD_reg_3632 <= lD_fu_1365_p3;
                man_V_27_reg_3643 <= man_V_27_fu_1425_p3;
                man_V_reg_3571 <= man_V_fu_1249_p3;
                neg_src_96_reg_3637 <= ireg_4_fu_1373_p1(63 downto 63);
                neg_src_reg_3565 <= ireg_fu_1197_p1(63 downto 63);
                pos1_4_reg_3693 <= pos1_4_fu_1523_p2;
                pos1_reg_3621 <= pos1_fu_1347_p2;
                sh_amt_4_reg_3666 <= sh_amt_4_fu_1463_p3;
                sh_amt_reg_3594 <= sh_amt_fu_1287_p3;
                tmp_398_reg_3606 <= sh_amt_fu_1287_p3(11 downto 5);
                tmp_403_reg_3627 <= pos1_fu_1347_p2(11 downto 11);
                tmp_406_reg_3678 <= sh_amt_4_fu_1463_p3(11 downto 5);
                tmp_411_reg_3699 <= pos1_4_fu_1523_p2(11 downto 11);
                trunc_ln572_4_reg_3672 <= trunc_ln572_4_fu_1471_p1;
                trunc_ln572_reg_3600 <= trunc_ln572_fu_1295_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                F2_5_reg_3757 <= F2_5_fu_2337_p2;
                F2_6_reg_3829 <= F2_6_fu_2513_p2;
                d_assign_5_reg_3553_pp0_iter1_reg <= d_assign_5_reg_3553;
                d_assign_7_reg_3559_pp0_iter1_reg <= d_assign_7_reg_3559;
                empty_121_reg_3534_pp0_iter1_reg <= empty_121_reg_3534;
                icmp_ln560_4_reg_3751 <= icmp_ln560_4_fu_2331_p2;
                icmp_ln560_5_reg_3823 <= icmp_ln560_5_fu_2507_p2;
                icmp_ln570_10_reg_3785 <= icmp_ln570_10_fu_2393_p2;
                icmp_ln570_11_reg_3857 <= icmp_ln570_11_fu_2569_p2;
                icmp_ln570_5_reg_3763 <= icmp_ln570_5_fu_2343_p2;
                icmp_ln570_7_reg_3835 <= icmp_ln570_7_fu_2519_p2;
                icmp_ln600_5_reg_3790 <= icmp_ln600_5_fu_2415_p2;
                icmp_ln600_6_reg_3862 <= icmp_ln600_6_fu_2591_p2;
                j_2_reg_3524 <= ap_sig_allocacmp_j_2;
                j_2_reg_3524_pp0_iter1_reg <= j_2_reg_3524;
                lD_5_reg_3806 <= lD_5_fu_2439_p3;
                lD_9_reg_3878 <= lD_9_fu_2615_p3;
                man_V_28_reg_3745 <= man_V_28_fu_2323_p3;
                man_V_29_reg_3817 <= man_V_29_fu_2499_p3;
                neg_src_97_reg_3739 <= ireg_5_fu_2271_p1(63 downto 63);
                neg_src_98_reg_3811 <= ireg_6_fu_2447_p1(63 downto 63);
                pos1_5_reg_3795 <= pos1_5_fu_2421_p2;
                pos1_6_reg_3867 <= pos1_6_fu_2597_p2;
                sh_amt_5_reg_3768 <= sh_amt_5_fu_2361_p3;
                sh_amt_6_reg_3840 <= sh_amt_6_fu_2537_p3;
                tmp_396_reg_3530 <= ap_sig_allocacmp_j_2(6 downto 6);
                tmp_414_reg_3780 <= sh_amt_5_fu_2361_p3(11 downto 5);
                tmp_419_reg_3801 <= pos1_5_fu_2421_p2(11 downto 11);
                tmp_422_reg_3852 <= sh_amt_6_fu_2537_p3(11 downto 5);
                tmp_427_reg_3873 <= pos1_6_fu_2597_p2(11 downto 11);
                trunc_ln572_5_reg_3774 <= trunc_ln572_5_fu_2369_p1;
                trunc_ln572_6_reg_3846 <= trunc_ln572_6_fu_2545_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_396_fu_671_p3 = ap_const_lv1_0))) then
                d_assign_2_reg_3547 <= d_assign_2_fu_812_p63;
                d_assign_5_reg_3553 <= d_assign_5_fu_941_p63;
                d_assign_7_reg_3559 <= d_assign_7_fu_1069_p63;
                d_assign_reg_3541 <= d_assign_fu_683_p63;
                empty_121_reg_3534 <= empty_121_fu_679_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln560_2_reg_3649 = ap_const_lv1_0))) then
                or_ln302_2_reg_3734 <= or_ln302_2_fu_2265_p2;
                overflow_96_reg_3729 <= overflow_96_fu_2242_p2;
                p_Val2_208_reg_3724 <= p_Val2_208_fu_2027_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln560_4_reg_3751 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                or_ln302_4_reg_3893 <= or_ln302_4_fu_3061_p2;
                overflow_97_reg_3888 <= overflow_97_fu_3038_p2;
                p_Val2_210_reg_3883 <= p_Val2_210_fu_2823_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln560_5_reg_3823 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                or_ln302_5_reg_3908 <= or_ln302_5_fu_3417_p2;
                overflow_98_reg_3903 <= overflow_98_fu_3394_p2;
                p_Val2_212_reg_3898 <= p_Val2_212_fu_3179_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln560_reg_3577 = ap_const_lv1_0))) then
                or_ln302_reg_3719 <= or_ln302_fu_1909_p2;
                overflow_reg_3714 <= overflow_fu_1886_p2;
                p_Val2_206_reg_3709 <= p_Val2_206_fu_1671_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter1_stage0, ap_idle_pp0_0to0, ap_idle_pp0_1to2, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    F2_4_fu_1439_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_2_fu_1399_p1));
    F2_5_fu_2337_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_4_fu_2297_p1));
    F2_6_fu_2513_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_5_fu_2473_p1));
    F2_fu_1263_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln455_fu_1223_p1));
    Range1_all_ones_24_fu_2127_p2 <= (Range2_all_ones_18_fu_2119_p3 and Range1_all_ones_34_fu_2063_p2);
    Range1_all_ones_27_fu_2923_p2 <= (Range2_all_ones_21_fu_2915_p3 and Range1_all_ones_36_fu_2859_p2);
    Range1_all_ones_30_fu_3279_p2 <= (Range2_all_ones_24_fu_3271_p3 and Range1_all_ones_38_fu_3215_p2);
    Range1_all_ones_31_fu_1697_p2 <= (tmp_403_reg_3627 xor ap_const_lv1_1);
    Range1_all_ones_32_fu_1707_p2 <= (lD_reg_3632 and icmp_ln610_2_fu_1702_p2);
    Range1_all_ones_33_fu_2053_p2 <= (tmp_411_reg_3699 xor ap_const_lv1_1);
    Range1_all_ones_34_fu_2063_p2 <= (lD_3_reg_3704 and icmp_ln610_7_fu_2058_p2);
    Range1_all_ones_35_fu_2849_p2 <= (tmp_419_reg_3801 xor ap_const_lv1_1);
    Range1_all_ones_36_fu_2859_p2 <= (lD_5_reg_3806 and icmp_ln610_9_fu_2854_p2);
    Range1_all_ones_37_fu_3205_p2 <= (tmp_427_reg_3873 xor ap_const_lv1_1);
    Range1_all_ones_38_fu_3215_p2 <= (lD_9_reg_3878 and icmp_ln610_11_fu_3210_p2);
    Range1_all_ones_fu_1771_p2 <= (Range2_all_ones_15_fu_1763_p3 and Range1_all_ones_32_fu_1707_p2);
    Range1_all_zeros_11_fu_2133_p2 <= (ap_const_lv1_1 xor Range1_all_ones_34_fu_2063_p2);
    Range1_all_zeros_13_fu_2929_p2 <= (ap_const_lv1_1 xor Range1_all_ones_36_fu_2859_p2);
    Range1_all_zeros_15_fu_3285_p2 <= (ap_const_lv1_1 xor Range1_all_ones_38_fu_3215_p2);
    Range1_all_zeros_9_fu_1777_p2 <= (ap_const_lv1_1 xor Range1_all_ones_32_fu_1707_p2);
    Range2_V_11_fu_2088_p2 <= std_logic_vector(shift_right(unsigned(man_V_27_reg_3643),to_integer(unsigned('0' & zext_ln624_4_fu_2084_p1(31-1 downto 0)))));
    Range2_V_13_fu_2884_p2 <= std_logic_vector(shift_right(unsigned(man_V_28_reg_3745),to_integer(unsigned('0' & zext_ln624_5_fu_2880_p1(31-1 downto 0)))));
    Range2_V_15_fu_3240_p2 <= std_logic_vector(shift_right(unsigned(man_V_29_reg_3817),to_integer(unsigned('0' & zext_ln624_6_fu_3236_p1(31-1 downto 0)))));
    Range2_V_9_fu_1732_p2 <= std_logic_vector(shift_right(unsigned(man_V_reg_3571),to_integer(unsigned('0' & zext_ln624_fu_1728_p1(31-1 downto 0)))));
    Range2_all_ones_14_fu_1757_p2 <= (tmp_404_fu_1749_p3 xor ap_const_lv1_1);
    Range2_all_ones_15_fu_1763_p3 <= 
        Range2_all_ones_fu_1743_p2 when (icmp_ln620_1_fu_1718_p2(0) = '1') else 
        Range2_all_ones_14_fu_1757_p2;
    Range2_all_ones_16_fu_2099_p2 <= "1" when (Range2_V_11_fu_2088_p2 = r_V_374_fu_2093_p2) else "0";
    Range2_all_ones_17_fu_2113_p2 <= (tmp_412_fu_2105_p3 xor ap_const_lv1_1);
    Range2_all_ones_18_fu_2119_p3 <= 
        Range2_all_ones_16_fu_2099_p2 when (icmp_ln620_5_fu_2074_p2(0) = '1') else 
        Range2_all_ones_17_fu_2113_p2;
    Range2_all_ones_19_fu_2895_p2 <= "1" when (Range2_V_13_fu_2884_p2 = r_V_375_fu_2889_p2) else "0";
    Range2_all_ones_20_fu_2909_p2 <= (tmp_420_fu_2901_p3 xor ap_const_lv1_1);
    Range2_all_ones_21_fu_2915_p3 <= 
        Range2_all_ones_19_fu_2895_p2 when (icmp_ln620_10_fu_2870_p2(0) = '1') else 
        Range2_all_ones_20_fu_2909_p2;
    Range2_all_ones_22_fu_3251_p2 <= "1" when (Range2_V_15_fu_3240_p2 = r_V_376_fu_3245_p2) else "0";
    Range2_all_ones_23_fu_3265_p2 <= (tmp_428_fu_3257_p3 xor ap_const_lv1_1);
    Range2_all_ones_24_fu_3271_p3 <= 
        Range2_all_ones_22_fu_3251_p2 when (icmp_ln620_12_fu_3226_p2(0) = '1') else 
        Range2_all_ones_23_fu_3265_p2;
    Range2_all_ones_fu_1743_p2 <= "1" when (Range2_V_9_fu_1732_p2 = r_V_fu_1737_p2) else "0";
    add_ln20_fu_1549_p2 <= std_logic_vector(unsigned(j_2_reg_3524) + unsigned(ap_const_lv7_4));
    add_ln570_2_fu_1451_p2 <= std_logic_vector(unsigned(F2_4_fu_1439_p2) + unsigned(ap_const_lv12_FF0));
    add_ln570_4_fu_2349_p2 <= std_logic_vector(unsigned(F2_5_fu_2337_p2) + unsigned(ap_const_lv12_FF0));
    add_ln570_5_fu_2525_p2 <= std_logic_vector(unsigned(F2_6_fu_2513_p2) + unsigned(ap_const_lv12_FF0));
    add_ln570_fu_1275_p2 <= std_logic_vector(unsigned(F2_fu_1263_p2) + unsigned(ap_const_lv12_FF0));
    add_ln601_2_fu_1501_p2 <= std_logic_vector(unsigned(zext_ln455_2_fu_1399_p1) + unsigned(ap_const_lv12_C02));
    add_ln601_4_fu_2399_p2 <= std_logic_vector(unsigned(zext_ln455_4_fu_2297_p1) + unsigned(ap_const_lv12_C02));
    add_ln601_5_fu_2575_p2 <= std_logic_vector(unsigned(zext_ln455_5_fu_2473_p1) + unsigned(ap_const_lv12_C02));
    add_ln601_fu_1325_p2 <= std_logic_vector(unsigned(zext_ln455_fu_1223_p1) + unsigned(ap_const_lv12_C02));
    and_ln302_1_fu_2644_p2 <= (icmp_ln600_reg_3616 and and_ln302_fu_2639_p2);
    and_ln302_2_fu_2686_p2 <= (xor_ln560_1_fu_2681_p2 and or_ln302_2_reg_3734);
    and_ln302_3_fu_2691_p2 <= (icmp_ln600_4_reg_3688 and and_ln302_2_fu_2686_p2);
    and_ln302_4_fu_3445_p2 <= (xor_ln560_2_fu_3440_p2 and or_ln302_4_reg_3893);
    and_ln302_5_fu_3450_p2 <= (icmp_ln600_5_reg_3790 and and_ln302_4_fu_3445_p2);
    and_ln302_6_fu_3492_p2 <= (xor_ln560_3_fu_3487_p2 and or_ln302_5_reg_3908);
    and_ln302_7_fu_3497_p2 <= (icmp_ln600_6_reg_3862 and and_ln302_6_fu_3492_p2);
    and_ln302_fu_2639_p2 <= (xor_ln560_fu_2634_p2 and or_ln302_reg_3719);
    and_ln570_1_fu_1983_p2 <= (xor_ln571_1_fu_1977_p2 and icmp_ln570_2_reg_3661);
    and_ln570_2_fu_2779_p2 <= (xor_ln571_2_fu_2773_p2 and icmp_ln570_5_reg_3763);
    and_ln570_3_fu_3135_p2 <= (xor_ln571_3_fu_3129_p2 and icmp_ln570_7_reg_3835);
    and_ln570_fu_1627_p2 <= (xor_ln571_fu_1621_p2 and icmp_ln570_reg_3589);
    and_ln574_1_fu_1652_p2 <= (xor_ln574_fu_1646_p2 and and_ln570_fu_1627_p2);
    and_ln574_2_fu_1988_p2 <= (icmp_ln574_2_fu_1923_p2 and and_ln570_1_fu_1983_p2);
    and_ln574_3_fu_2008_p2 <= (xor_ln574_1_fu_2002_p2 and and_ln570_1_fu_1983_p2);
    and_ln574_4_fu_2784_p2 <= (icmp_ln574_4_fu_2719_p2 and and_ln570_2_fu_2779_p2);
    and_ln574_5_fu_2804_p2 <= (xor_ln574_2_fu_2798_p2 and and_ln570_2_fu_2779_p2);
    and_ln574_6_fu_3140_p2 <= (icmp_ln574_5_fu_3075_p2 and and_ln570_3_fu_3135_p2);
    and_ln574_7_fu_3160_p2 <= (xor_ln574_3_fu_3154_p2 and and_ln570_3_fu_3135_p2);
    and_ln574_fu_1632_p2 <= (icmp_ln574_fu_1567_p2 and and_ln570_fu_1627_p2);
    and_ln592_1_fu_2022_p2 <= (icmp_ln592_4_fu_1928_p2 and icmp_ln570_9_reg_3683);
    and_ln592_2_fu_2818_p2 <= (icmp_ln592_5_fu_2724_p2 and icmp_ln570_10_reg_3785);
    and_ln592_3_fu_3174_p2 <= (icmp_ln592_6_fu_3080_p2 and icmp_ln570_11_reg_3857);
    and_ln592_fu_1666_p2 <= (icmp_ln592_fu_1572_p2 and icmp_ln570_8_reg_3611);
    and_ln628_1_fu_1835_p2 <= (and_ln628_fu_1829_p2 and Range1_all_ones_31_fu_1697_p2);
    and_ln628_2_fu_2185_p2 <= (icmp_ln620_4_fu_2068_p2 and icmp_ln610_4_fu_2048_p2);
    and_ln628_3_fu_2191_p2 <= (and_ln628_2_fu_2185_p2 and Range1_all_ones_33_fu_2053_p2);
    and_ln628_4_fu_2981_p2 <= (icmp_ln620_9_fu_2864_p2 and icmp_ln610_8_fu_2844_p2);
    and_ln628_5_fu_2987_p2 <= (and_ln628_4_fu_2981_p2 and Range1_all_ones_35_fu_2849_p2);
    and_ln628_6_fu_3337_p2 <= (icmp_ln620_11_fu_3220_p2 and icmp_ln610_10_fu_3200_p2);
    and_ln628_7_fu_3343_p2 <= (and_ln628_6_fu_3337_p2 and Range1_all_ones_37_fu_3205_p2);
    and_ln628_fu_1829_p2 <= (icmp_ln620_fu_1712_p2 and icmp_ln610_fu_1692_p2);
    and_ln630_2_fu_2145_p2 <= (icmp_ln630_2_fu_2139_p2 and Range1_all_zeros_11_fu_2133_p2);
    and_ln630_4_fu_2941_p2 <= (icmp_ln630_4_fu_2935_p2 and Range1_all_zeros_13_fu_2929_p2);
    and_ln630_5_fu_3297_p2 <= (icmp_ln630_5_fu_3291_p2 and Range1_all_zeros_15_fu_3285_p2);
    and_ln630_fu_1789_p2 <= (icmp_ln630_fu_1783_p2 and Range1_all_zeros_9_fu_1777_p2);
    and_ln648_3_fu_2248_p2 <= (p_Result_235_fu_2040_p3 and deleted_ones_4_fu_2211_p3);
    and_ln648_5_fu_3044_p2 <= (p_Result_237_fu_2836_p3 and deleted_ones_5_fu_3007_p3);
    and_ln648_9_fu_3400_p2 <= (p_Result_239_fu_3192_p3 and deleted_ones_6_fu_3363_p3);
    and_ln648_fu_1892_p2 <= (p_Result_233_fu_1684_p3 and deleted_ones_fu_1855_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, tmp_396_reg_3530)
    begin
        if (((tmp_396_reg_3530 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_396_reg_3530, ap_block_pp0_stage0_subdone)
    begin
        if (((tmp_396_reg_3530 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_228, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_2 <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_j_2 <= j_fu_228;
        end if; 
    end process;

    ashr_ln575_2_fu_1937_p2 <= std_logic_vector(shift_right(signed(man_V_27_reg_3643),to_integer(unsigned('0' & zext_ln575_4_fu_1933_p1(31-1 downto 0)))));
    ashr_ln575_4_fu_2733_p2 <= std_logic_vector(shift_right(signed(man_V_28_reg_3745),to_integer(unsigned('0' & zext_ln575_5_fu_2729_p1(31-1 downto 0)))));
    ashr_ln575_5_fu_3089_p2 <= std_logic_vector(shift_right(signed(man_V_29_reg_3817),to_integer(unsigned('0' & zext_ln575_6_fu_3085_p1(31-1 downto 0)))));
    ashr_ln575_fu_1581_p2 <= std_logic_vector(shift_right(signed(man_V_reg_3571),to_integer(unsigned('0' & zext_ln575_fu_1577_p1(31-1 downto 0)))));
    bitcast_ln724_4_fu_1946_p1 <= d_assign_2_reg_3547;
    bitcast_ln724_7_fu_2742_p1 <= d_assign_5_reg_3553_pp0_iter1_reg;
    bitcast_ln724_9_fu_3098_p1 <= d_assign_7_reg_3559_pp0_iter1_reg;
    bitcast_ln724_fu_1590_p1 <= d_assign_reg_3541;

    coeff_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln22_fu_2669_p1, ap_block_pp0_stage0, zext_ln22_2_fu_3475_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            coeff_V_address0 <= zext_ln22_2_fu_3475_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            coeff_V_address0 <= zext_ln22_fu_2669_p1(6 - 1 downto 0);
        else 
            coeff_V_address0 <= "XXXXXX";
        end if; 
    end process;


    coeff_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, j_cast337_fu_2623_p1, ap_block_pp0_stage1, zext_ln22_1_fu_3428_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            coeff_V_address1 <= zext_ln22_1_fu_3428_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            coeff_V_address1 <= j_cast337_fu_2623_p1(6 - 1 downto 0);
        else 
            coeff_V_address1 <= "XXXXXX";
        end if; 
    end process;


    coeff_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            coeff_V_ce0 <= ap_const_logic_1;
        else 
            coeff_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    coeff_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            coeff_V_ce1 <= ap_const_logic_1;
        else 
            coeff_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    coeff_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, select_ln560_1_fu_2703_p3, select_ln560_3_fu_3509_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            coeff_V_d0 <= select_ln560_3_fu_3509_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            coeff_V_d0 <= select_ln560_1_fu_2703_p3;
        else 
            coeff_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    coeff_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, select_ln560_fu_2656_p3, select_ln560_2_fu_3462_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            coeff_V_d1 <= select_ln560_2_fu_3462_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            coeff_V_d1 <= select_ln560_fu_2656_p3;
        else 
            coeff_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    coeff_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            coeff_V_we0 <= ap_const_logic_1;
        else 
            coeff_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    coeff_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            coeff_V_we1 <= ap_const_logic_1;
        else 
            coeff_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    deleted_ones_4_fu_2211_p3 <= 
        Range1_all_ones_24_fu_2127_p2 when (and_ln628_3_fu_2191_p2(0) = '1') else 
        or_ln610_4_fu_2205_p2;
    deleted_ones_5_fu_3007_p3 <= 
        Range1_all_ones_27_fu_2923_p2 when (and_ln628_5_fu_2987_p2(0) = '1') else 
        or_ln610_7_fu_3001_p2;
    deleted_ones_6_fu_3363_p3 <= 
        Range1_all_ones_30_fu_3279_p2 when (and_ln628_7_fu_3343_p2(0) = '1') else 
        or_ln610_10_fu_3357_p2;
    deleted_ones_fu_1855_p3 <= 
        Range1_all_ones_fu_1771_p2 when (and_ln628_1_fu_1835_p2(0) = '1') else 
        or_ln610_1_fu_1849_p2;
    deleted_zeros_4_fu_2197_p3 <= 
        and_ln630_2_fu_2145_p2 when (and_ln628_3_fu_2191_p2(0) = '1') else 
        or_ln610_3_fu_2179_p2;
    deleted_zeros_5_fu_2993_p3 <= 
        and_ln630_4_fu_2941_p2 when (and_ln628_5_fu_2987_p2(0) = '1') else 
        or_ln610_6_fu_2975_p2;
    deleted_zeros_6_fu_3349_p3 <= 
        and_ln630_5_fu_3297_p2 when (and_ln628_7_fu_3343_p2(0) = '1') else 
        or_ln610_9_fu_3331_p2;
    deleted_zeros_fu_1841_p3 <= 
        and_ln630_fu_1789_p2 when (and_ln628_1_fu_1835_p2(0) = '1') else 
        or_ln610_fu_1823_p2;
    empty_121_fu_679_p1 <= ap_sig_allocacmp_j_2(6 - 1 downto 0);
    exp_tmp_4_fu_1389_p4 <= ireg_4_fu_1373_p1(62 downto 52);
    exp_tmp_5_fu_2287_p4 <= ireg_5_fu_2271_p1(62 downto 52);
    exp_tmp_6_fu_2463_p4 <= ireg_6_fu_2447_p1(62 downto 52);
    exp_tmp_fu_1213_p4 <= ireg_fu_1197_p1(62 downto 52);
    grp_fu_4824_p_ce <= ap_const_logic_1;
    grp_fu_4824_p_din0 <= grp_fu_657_p0;

    grp_fu_657_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, d_assign_fu_683_p63, d_assign_5_reg_3553, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_657_p0 <= d_assign_5_reg_3553;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_657_p0 <= d_assign_fu_683_p63;
            else 
                grp_fu_657_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_657_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_660_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, d_assign_2_fu_812_p63, d_assign_7_reg_3559, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_660_p0 <= d_assign_7_reg_3559;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_660_p0 <= d_assign_2_fu_812_p63;
            else 
                grp_fu_660_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_660_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln560_2_fu_1433_p2 <= "1" when (trunc_ln544_4_fu_1377_p1 = ap_const_lv63_0) else "0";
    icmp_ln560_4_fu_2331_p2 <= "1" when (trunc_ln544_5_fu_2275_p1 = ap_const_lv63_0) else "0";
    icmp_ln560_5_fu_2507_p2 <= "1" when (trunc_ln544_6_fu_2451_p1 = ap_const_lv63_0) else "0";
    icmp_ln560_fu_1257_p2 <= "1" when (trunc_ln544_fu_1201_p1 = ap_const_lv63_0) else "0";
    icmp_ln570_10_fu_2393_p2 <= "1" when (signed(tmp_416_fu_2383_p4) < signed(ap_const_lv8_1)) else "0";
    icmp_ln570_11_fu_2569_p2 <= "1" when (signed(tmp_424_fu_2559_p4) < signed(ap_const_lv8_1)) else "0";
    icmp_ln570_2_fu_1445_p2 <= "1" when (signed(F2_4_fu_1439_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln570_5_fu_2343_p2 <= "1" when (signed(F2_5_fu_2337_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln570_7_fu_2519_p2 <= "1" when (signed(F2_6_fu_2513_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln570_8_fu_1319_p2 <= "1" when (signed(tmp_400_fu_1309_p4) < signed(ap_const_lv8_1)) else "0";
    icmp_ln570_9_fu_1495_p2 <= "1" when (signed(tmp_408_fu_1485_p4) < signed(ap_const_lv8_1)) else "0";
    icmp_ln570_fu_1269_p2 <= "1" when (signed(F2_fu_1263_p2) > signed(ap_const_lv12_10)) else "0";
    icmp_ln571_2_fu_1918_p2 <= "1" when (F2_4_reg_3655 = ap_const_lv12_10) else "0";
    icmp_ln571_4_fu_2714_p2 <= "1" when (F2_5_reg_3757 = ap_const_lv12_10) else "0";
    icmp_ln571_5_fu_3070_p2 <= "1" when (F2_6_reg_3829 = ap_const_lv12_10) else "0";
    icmp_ln571_fu_1562_p2 <= "1" when (F2_reg_3583 = ap_const_lv12_10) else "0";
    icmp_ln574_2_fu_1923_p2 <= "1" when (unsigned(sh_amt_4_reg_3666) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln574_4_fu_2719_p2 <= "1" when (unsigned(sh_amt_5_reg_3768) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln574_5_fu_3075_p2 <= "1" when (unsigned(sh_amt_6_reg_3840) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln574_fu_1567_p2 <= "1" when (unsigned(sh_amt_reg_3594) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln592_4_fu_1928_p2 <= "1" when (tmp_406_reg_3678 = ap_const_lv7_0) else "0";
    icmp_ln592_5_fu_2724_p2 <= "1" when (tmp_414_reg_3780 = ap_const_lv7_0) else "0";
    icmp_ln592_6_fu_3080_p2 <= "1" when (tmp_422_reg_3852 = ap_const_lv7_0) else "0";
    icmp_ln592_fu_1572_p2 <= "1" when (tmp_398_reg_3606 = ap_const_lv7_0) else "0";
    icmp_ln600_4_fu_1517_p2 <= "1" when (signed(tmp_409_fu_1507_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln600_5_fu_2415_p2 <= "1" when (signed(tmp_417_fu_2405_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln600_6_fu_2591_p2 <= "1" when (signed(tmp_425_fu_2581_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln600_fu_1341_p2 <= "1" when (signed(tmp_401_fu_1331_p4) > signed(ap_const_lv8_0)) else "0";
    icmp_ln610_10_fu_3200_p2 <= "1" when (signed(pos1_6_reg_3867) < signed(ap_const_lv12_36)) else "0";
    icmp_ln610_11_fu_3210_p2 <= "1" when (unsigned(pos1_6_reg_3867) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln610_2_fu_1702_p2 <= "1" when (unsigned(pos1_reg_3621) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln610_4_fu_2048_p2 <= "1" when (signed(pos1_4_reg_3693) < signed(ap_const_lv12_36)) else "0";
    icmp_ln610_7_fu_2058_p2 <= "1" when (unsigned(pos1_4_reg_3693) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln610_8_fu_2844_p2 <= "1" when (signed(pos1_5_reg_3795) < signed(ap_const_lv12_36)) else "0";
    icmp_ln610_9_fu_2854_p2 <= "1" when (unsigned(pos1_5_reg_3795) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln610_fu_1692_p2 <= "1" when (signed(pos1_reg_3621) < signed(ap_const_lv12_36)) else "0";
    icmp_ln620_10_fu_2870_p2 <= "1" when (unsigned(pos2_5_fu_2831_p2) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln620_11_fu_3220_p2 <= "1" when (signed(pos2_6_fu_3187_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln620_12_fu_3226_p2 <= "1" when (unsigned(pos2_6_fu_3187_p2) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln620_1_fu_1718_p2 <= "1" when (unsigned(pos2_fu_1679_p2) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln620_4_fu_2068_p2 <= "1" when (signed(pos2_4_fu_2035_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln620_5_fu_2074_p2 <= "1" when (unsigned(pos2_4_fu_2035_p2) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln620_9_fu_2864_p2 <= "1" when (signed(pos2_5_fu_2831_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln620_fu_1712_p2 <= "1" when (signed(pos2_fu_1679_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln630_2_fu_2139_p2 <= "1" when (Range2_V_11_fu_2088_p2 = ap_const_lv54_0) else "0";
    icmp_ln630_4_fu_2935_p2 <= "1" when (Range2_V_13_fu_2884_p2 = ap_const_lv54_0) else "0";
    icmp_ln630_5_fu_3291_p2 <= "1" when (Range2_V_15_fu_3240_p2 = ap_const_lv54_0) else "0";
    icmp_ln630_fu_1783_p2 <= "1" when (Range2_V_9_fu_1732_p2 = ap_const_lv54_0) else "0";
    icmp_ln631_2_fu_2151_p2 <= "1" when (pos2_4_fu_2035_p2 = ap_const_lv12_36) else "0";
    icmp_ln631_4_fu_2947_p2 <= "1" when (pos2_5_fu_2831_p2 = ap_const_lv12_36) else "0";
    icmp_ln631_5_fu_3303_p2 <= "1" when (pos2_6_fu_3187_p2 = ap_const_lv12_36) else "0";
    icmp_ln631_fu_1795_p2 <= "1" when (pos2_fu_1679_p2 = ap_const_lv12_36) else "0";
    ireg_4_fu_1373_p1 <= grp_fu_660_p1;
    ireg_5_fu_2271_p1 <= grp_fu_4824_p_dout0;
    ireg_6_fu_2447_p1 <= grp_fu_660_p1;
    ireg_fu_1197_p1 <= grp_fu_4824_p_dout0;
    j_cast337_fu_2623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_2_reg_3524_pp0_iter1_reg),64));
    lD_3_fu_1541_p3 <= man_V_27_fu_1425_p3(to_integer(unsigned(sext_ln607_1_fu_1529_p1)) downto to_integer(unsigned(sext_ln607_1_fu_1529_p1))) when (to_integer(unsigned(sext_ln607_1_fu_1529_p1)) >= 0 and to_integer(unsigned(sext_ln607_1_fu_1529_p1)) <=53) else "-";
    lD_5_fu_2439_p3 <= man_V_28_fu_2323_p3(to_integer(unsigned(sext_ln607_2_fu_2427_p1)) downto to_integer(unsigned(sext_ln607_2_fu_2427_p1))) when (to_integer(unsigned(sext_ln607_2_fu_2427_p1)) >= 0 and to_integer(unsigned(sext_ln607_2_fu_2427_p1)) <=53) else "-";
    lD_9_fu_2615_p3 <= man_V_29_fu_2499_p3(to_integer(unsigned(sext_ln607_3_fu_2603_p1)) downto to_integer(unsigned(sext_ln607_3_fu_2603_p1))) when (to_integer(unsigned(sext_ln607_3_fu_2603_p1)) >= 0 and to_integer(unsigned(sext_ln607_3_fu_2603_p1)) <=53) else "-";
    lD_fu_1365_p3 <= man_V_fu_1249_p3(to_integer(unsigned(sext_ln607_fu_1353_p1)) downto to_integer(unsigned(sext_ln607_fu_1353_p1))) when (to_integer(unsigned(sext_ln607_fu_1353_p1)) >= 0 and to_integer(unsigned(sext_ln607_fu_1353_p1)) <=53) else "-";
    man_V_16_fu_1243_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln558_fu_1239_p1));
    man_V_19_fu_1419_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln558_4_fu_1415_p1));
    man_V_22_fu_2317_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln558_5_fu_2313_p1));
    man_V_25_fu_2493_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln558_6_fu_2489_p1));
    man_V_27_fu_1425_p3 <= 
        man_V_19_fu_1419_p2 when (neg_src_96_fu_1381_p3(0) = '1') else 
        zext_ln558_4_fu_1415_p1;
    man_V_28_fu_2323_p3 <= 
        man_V_22_fu_2317_p2 when (neg_src_97_fu_2279_p3(0) = '1') else 
        zext_ln558_5_fu_2313_p1;
    man_V_29_fu_2499_p3 <= 
        man_V_25_fu_2493_p2 when (neg_src_98_fu_2455_p3(0) = '1') else 
        zext_ln558_6_fu_2489_p1;
    man_V_fu_1249_p3 <= 
        man_V_16_fu_1243_p2 when (neg_src_fu_1205_p3(0) = '1') else 
        zext_ln558_fu_1239_p1;
    neg_src_96_fu_1381_p3 <= ireg_4_fu_1373_p1(63 downto 63);
    neg_src_97_fu_2279_p3 <= ireg_5_fu_2271_p1(63 downto 63);
    neg_src_98_fu_2455_p3 <= ireg_6_fu_2447_p1(63 downto 63);
    neg_src_fu_1205_p3 <= ireg_fu_1197_p1(63 downto 63);
    or_ln20_1_fu_3423_p2 <= (empty_121_reg_3534_pp0_iter1_reg or ap_const_lv6_2);
    or_ln20_2_fu_3470_p2 <= (empty_121_reg_3534_pp0_iter1_reg or ap_const_lv6_3);
    or_ln20_fu_2664_p2 <= (empty_121_reg_3534_pp0_iter1_reg or ap_const_lv6_1);
    or_ln302_2_fu_2265_p2 <= (underflow_96_fu_2260_p2 or overflow_96_fu_2242_p2);
    or_ln302_4_fu_3061_p2 <= (underflow_97_fu_3056_p2 or overflow_97_fu_3038_p2);
    or_ln302_5_fu_3417_p2 <= (underflow_98_fu_3412_p2 or overflow_98_fu_3394_p2);
    or_ln302_fu_1909_p2 <= (underflow_fu_1904_p2 or overflow_fu_1886_p2);
    or_ln610_10_fu_3357_p2 <= (xor_ln610_3_fu_3325_p2 or select_ln631_12_fu_3317_p3);
    or_ln610_11_fu_3371_p2 <= (p_Result_239_fu_3192_p3 or icmp_ln610_10_fu_3200_p2);
    or_ln610_1_fu_1849_p2 <= (xor_ln610_fu_1817_p2 or select_ln631_1_fu_1809_p3);
    or_ln610_2_fu_1863_p2 <= (p_Result_233_fu_1684_p3 or icmp_ln610_fu_1692_p2);
    or_ln610_3_fu_2179_p2 <= (xor_ln610_1_fu_2173_p2 or select_ln631_4_fu_2157_p3);
    or_ln610_4_fu_2205_p2 <= (xor_ln610_1_fu_2173_p2 or select_ln631_5_fu_2165_p3);
    or_ln610_5_fu_2219_p2 <= (p_Result_235_fu_2040_p3 or icmp_ln610_4_fu_2048_p2);
    or_ln610_6_fu_2975_p2 <= (xor_ln610_2_fu_2969_p2 or select_ln631_9_fu_2953_p3);
    or_ln610_7_fu_3001_p2 <= (xor_ln610_2_fu_2969_p2 or select_ln631_10_fu_2961_p3);
    or_ln610_8_fu_3015_p2 <= (p_Result_237_fu_2836_p3 or icmp_ln610_8_fu_2844_p2);
    or_ln610_9_fu_3331_p2 <= (xor_ln610_3_fu_3325_p2 or select_ln631_11_fu_3309_p3);
    or_ln610_fu_1823_p2 <= (xor_ln610_fu_1817_p2 or select_ln631_fu_1801_p3);
    or_ln647_2_fu_2231_p2 <= (xor_ln647_4_fu_2225_p2 or p_Result_235_fu_2040_p3);
    or_ln647_4_fu_3027_p2 <= (xor_ln647_9_fu_3021_p2 or p_Result_237_fu_2836_p3);
    or_ln647_5_fu_3383_p2 <= (xor_ln647_11_fu_3377_p2 or p_Result_239_fu_3192_p3);
    or_ln647_fu_1875_p2 <= (xor_ln647_fu_1869_p2 or p_Result_233_fu_1684_p3);
    overflow_96_fu_2242_p2 <= (xor_ln647_5_fu_2237_p2 and or_ln647_2_fu_2231_p2);
    overflow_97_fu_3038_p2 <= (xor_ln647_10_fu_3033_p2 and or_ln647_4_fu_3027_p2);
    overflow_98_fu_3394_p2 <= (xor_ln647_12_fu_3389_p2 and or_ln647_5_fu_3383_p2);
    overflow_fu_1886_p2 <= (xor_ln647_1_fu_1881_p2 and or_ln647_fu_1875_p2);
    p_Result_233_fu_1684_p3 <= p_Val2_206_fu_1671_p3(31 downto 31);
    p_Result_234_fu_1407_p3 <= (ap_const_lv1_1 & trunc_ln554_4_fu_1403_p1);
    p_Result_235_fu_2040_p3 <= p_Val2_208_fu_2027_p3(31 downto 31);
    p_Result_236_fu_2305_p3 <= (ap_const_lv1_1 & trunc_ln554_5_fu_2301_p1);
    p_Result_237_fu_2836_p3 <= p_Val2_210_fu_2823_p3(31 downto 31);
    p_Result_238_fu_2481_p3 <= (ap_const_lv1_1 & trunc_ln554_6_fu_2477_p1);
    p_Result_239_fu_3192_p3 <= p_Val2_212_fu_3179_p3(31 downto 31);
    p_Result_s_fu_1231_p3 <= (ap_const_lv1_1 & trunc_ln554_fu_1227_p1);
    p_Val2_206_fu_1671_p3 <= 
        shl_ln593_fu_1609_p2 when (and_ln592_fu_1666_p2(0) = '1') else 
        select_ln574_1_fu_1658_p3;
    p_Val2_208_fu_2027_p3 <= 
        shl_ln593_2_fu_1965_p2 when (and_ln592_1_fu_2022_p2(0) = '1') else 
        select_ln574_3_fu_2014_p3;
    p_Val2_210_fu_2823_p3 <= 
        shl_ln593_4_fu_2761_p2 when (and_ln592_2_fu_2818_p2(0) = '1') else 
        select_ln574_5_fu_2810_p3;
    p_Val2_212_fu_3179_p3 <= 
        shl_ln593_5_fu_3117_p2 when (and_ln592_3_fu_3174_p2(0) = '1') else 
        select_ln574_7_fu_3166_p3;
    pos1_4_fu_1523_p2 <= std_logic_vector(unsigned(F2_4_fu_1439_p2) + unsigned(ap_const_lv12_10));
    pos1_5_fu_2421_p2 <= std_logic_vector(unsigned(F2_5_fu_2337_p2) + unsigned(ap_const_lv12_10));
    pos1_6_fu_2597_p2 <= std_logic_vector(unsigned(F2_6_fu_2513_p2) + unsigned(ap_const_lv12_10));
    pos1_fu_1347_p2 <= std_logic_vector(unsigned(F2_fu_1263_p2) + unsigned(ap_const_lv12_10));
    pos2_4_fu_2035_p2 <= std_logic_vector(unsigned(F2_4_reg_3655) + unsigned(ap_const_lv12_11));
    pos2_5_fu_2831_p2 <= std_logic_vector(unsigned(F2_5_reg_3757) + unsigned(ap_const_lv12_11));
    pos2_6_fu_3187_p2 <= std_logic_vector(unsigned(F2_6_reg_3829) + unsigned(ap_const_lv12_11));
    pos2_fu_1679_p2 <= std_logic_vector(unsigned(F2_reg_3583) + unsigned(ap_const_lv12_11));
    r_V_374_fu_2093_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln624_4_fu_2084_p1(31-1 downto 0)))));
    r_V_375_fu_2889_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln624_5_fu_2880_p1(31-1 downto 0)))));
    r_V_376_fu_3245_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln624_6_fu_3236_p1(31-1 downto 0)))));
    r_V_fu_1737_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln624_fu_1728_p1(31-1 downto 0)))));
    select_ln302_1_fu_2696_p3 <= 
        select_ln346_4_fu_2674_p3 when (and_ln302_3_fu_2691_p2(0) = '1') else 
        p_Val2_208_reg_3724;
    select_ln302_2_fu_3455_p3 <= 
        select_ln346_8_fu_3433_p3 when (and_ln302_5_fu_3450_p2(0) = '1') else 
        p_Val2_210_reg_3883;
    select_ln302_3_fu_3502_p3 <= 
        select_ln346_10_fu_3480_p3 when (and_ln302_7_fu_3497_p2(0) = '1') else 
        p_Val2_212_reg_3898;
    select_ln302_fu_2649_p3 <= 
        select_ln346_fu_2627_p3 when (and_ln302_1_fu_2644_p2(0) = '1') else 
        p_Val2_206_reg_3709;
    select_ln346_10_fu_3480_p3 <= 
        ap_const_lv32_7FFFFFFF when (overflow_98_reg_3903(0) = '1') else 
        ap_const_lv32_80000000;
    select_ln346_4_fu_2674_p3 <= 
        ap_const_lv32_7FFFFFFF when (overflow_96_reg_3729(0) = '1') else 
        ap_const_lv32_80000000;
    select_ln346_8_fu_3433_p3 <= 
        ap_const_lv32_7FFFFFFF when (overflow_97_reg_3888(0) = '1') else 
        ap_const_lv32_80000000;
    select_ln346_fu_2627_p3 <= 
        ap_const_lv32_7FFFFFFF when (overflow_reg_3714(0) = '1') else 
        ap_const_lv32_80000000;
    select_ln560_1_fu_2703_p3 <= 
        ap_const_lv32_0 when (icmp_ln560_2_reg_3649(0) = '1') else 
        select_ln302_1_fu_2696_p3;
    select_ln560_2_fu_3462_p3 <= 
        ap_const_lv32_0 when (icmp_ln560_4_reg_3751(0) = '1') else 
        select_ln302_2_fu_3455_p3;
    select_ln560_3_fu_3509_p3 <= 
        ap_const_lv32_0 when (icmp_ln560_5_reg_3823(0) = '1') else 
        select_ln302_3_fu_3502_p3;
    select_ln560_fu_2656_p3 <= 
        ap_const_lv32_0 when (icmp_ln560_reg_3577(0) = '1') else 
        select_ln302_fu_2649_p3;
    select_ln571_1_fu_1970_p3 <= 
        trunc_ln572_4_reg_3672 when (icmp_ln571_2_fu_1918_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln571_2_fu_2766_p3 <= 
        trunc_ln572_5_reg_3774 when (icmp_ln571_4_fu_2714_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln571_3_fu_3122_p3 <= 
        trunc_ln572_6_reg_3846 when (icmp_ln571_5_fu_3070_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln571_fu_1614_p3 <= 
        trunc_ln572_reg_3600 when (icmp_ln571_fu_1562_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln574_1_fu_1658_p3 <= 
        select_ln577_fu_1601_p3 when (and_ln574_1_fu_1652_p2(0) = '1') else 
        select_ln574_fu_1638_p3;
    select_ln574_2_fu_1994_p3 <= 
        trunc_ln575_4_fu_1942_p1 when (and_ln574_2_fu_1988_p2(0) = '1') else 
        select_ln571_1_fu_1970_p3;
    select_ln574_3_fu_2014_p3 <= 
        select_ln577_4_fu_1957_p3 when (and_ln574_3_fu_2008_p2(0) = '1') else 
        select_ln574_2_fu_1994_p3;
    select_ln574_4_fu_2790_p3 <= 
        trunc_ln575_5_fu_2738_p1 when (and_ln574_4_fu_2784_p2(0) = '1') else 
        select_ln571_2_fu_2766_p3;
    select_ln574_5_fu_2810_p3 <= 
        select_ln577_5_fu_2753_p3 when (and_ln574_5_fu_2804_p2(0) = '1') else 
        select_ln574_4_fu_2790_p3;
    select_ln574_6_fu_3146_p3 <= 
        trunc_ln575_6_fu_3094_p1 when (and_ln574_6_fu_3140_p2(0) = '1') else 
        select_ln571_3_fu_3122_p3;
    select_ln574_7_fu_3166_p3 <= 
        select_ln577_6_fu_3109_p3 when (and_ln574_7_fu_3160_p2(0) = '1') else 
        select_ln574_6_fu_3146_p3;
    select_ln574_fu_1638_p3 <= 
        trunc_ln575_fu_1586_p1 when (and_ln574_fu_1632_p2(0) = '1') else 
        select_ln571_fu_1614_p3;
    select_ln577_4_fu_1957_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_407_fu_1949_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln577_5_fu_2753_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_415_fu_2745_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln577_6_fu_3109_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_423_fu_3101_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln577_fu_1601_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_399_fu_1593_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln631_10_fu_2961_p3 <= 
        Range1_all_ones_36_fu_2859_p2 when (icmp_ln631_4_fu_2947_p2(0) = '1') else 
        Range1_all_ones_35_fu_2849_p2;
    select_ln631_11_fu_3309_p3 <= 
        Range1_all_zeros_15_fu_3285_p2 when (icmp_ln631_5_fu_3303_p2(0) = '1') else 
        Range1_all_ones_37_fu_3205_p2;
    select_ln631_12_fu_3317_p3 <= 
        Range1_all_ones_38_fu_3215_p2 when (icmp_ln631_5_fu_3303_p2(0) = '1') else 
        Range1_all_ones_37_fu_3205_p2;
    select_ln631_1_fu_1809_p3 <= 
        Range1_all_ones_32_fu_1707_p2 when (icmp_ln631_fu_1795_p2(0) = '1') else 
        Range1_all_ones_31_fu_1697_p2;
    select_ln631_4_fu_2157_p3 <= 
        Range1_all_zeros_11_fu_2133_p2 when (icmp_ln631_2_fu_2151_p2(0) = '1') else 
        Range1_all_ones_33_fu_2053_p2;
    select_ln631_5_fu_2165_p3 <= 
        Range1_all_ones_34_fu_2063_p2 when (icmp_ln631_2_fu_2151_p2(0) = '1') else 
        Range1_all_ones_33_fu_2053_p2;
    select_ln631_9_fu_2953_p3 <= 
        Range1_all_zeros_13_fu_2929_p2 when (icmp_ln631_4_fu_2947_p2(0) = '1') else 
        Range1_all_ones_35_fu_2849_p2;
    select_ln631_fu_1801_p3 <= 
        Range1_all_zeros_9_fu_1777_p2 when (icmp_ln631_fu_1795_p2(0) = '1') else 
        Range1_all_ones_31_fu_1697_p2;
        sext_ln570_1_fu_1915_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_4_reg_3666),32));

        sext_ln570_2_fu_2711_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_5_reg_3768),32));

        sext_ln570_3_fu_3067_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_6_reg_3840),32));

        sext_ln570_fu_1559_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_3594),32));

        sext_ln607_1_fu_1529_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_4_fu_1523_p2),32));

        sext_ln607_2_fu_2427_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_5_fu_2421_p2),32));

        sext_ln607_3_fu_2603_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_6_fu_2597_p2),32));

        sext_ln607_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_fu_1347_p2),32));

        sext_ln624_4_fu_2080_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_4_fu_2035_p2),32));

        sext_ln624_5_fu_2876_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_5_fu_2831_p2),32));

        sext_ln624_6_fu_3232_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_6_fu_3187_p2),32));

        sext_ln624_fu_1724_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_fu_1679_p2),32));

    sh_amt_4_fu_1463_p3 <= 
        add_ln570_2_fu_1451_p2 when (icmp_ln570_2_fu_1445_p2(0) = '1') else 
        sub_ln570_2_fu_1457_p2;
    sh_amt_5_fu_2361_p3 <= 
        add_ln570_4_fu_2349_p2 when (icmp_ln570_5_fu_2343_p2(0) = '1') else 
        sub_ln570_4_fu_2355_p2;
    sh_amt_6_fu_2537_p3 <= 
        add_ln570_5_fu_2525_p2 when (icmp_ln570_7_fu_2519_p2(0) = '1') else 
        sub_ln570_5_fu_2531_p2;
    sh_amt_fu_1287_p3 <= 
        add_ln570_fu_1275_p2 when (icmp_ln570_fu_1269_p2(0) = '1') else 
        sub_ln570_fu_1281_p2;
    shl_ln593_2_fu_1965_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln572_4_reg_3672),to_integer(unsigned('0' & sext_ln570_1_fu_1915_p1(31-1 downto 0)))));
    shl_ln593_4_fu_2761_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln572_5_reg_3774),to_integer(unsigned('0' & sext_ln570_2_fu_2711_p1(31-1 downto 0)))));
    shl_ln593_5_fu_3117_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln572_6_reg_3846),to_integer(unsigned('0' & sext_ln570_3_fu_3067_p1(31-1 downto 0)))));
    shl_ln593_fu_1609_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln572_reg_3600),to_integer(unsigned('0' & sext_ln570_fu_1559_p1(31-1 downto 0)))));
    sub_ln570_2_fu_1457_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_4_fu_1439_p2));
    sub_ln570_4_fu_2355_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_5_fu_2337_p2));
    sub_ln570_5_fu_2531_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_6_fu_2513_p2));
    sub_ln570_fu_1281_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_1263_p2));
    tmp_396_fu_671_p3 <= ap_sig_allocacmp_j_2(6 downto 6);
    tmp_399_fu_1593_p3 <= bitcast_ln724_fu_1590_p1(31 downto 31);
    tmp_400_fu_1309_p4 <= F2_fu_1263_p2(11 downto 4);
    tmp_401_fu_1331_p4 <= add_ln601_fu_1325_p2(11 downto 4);
    tmp_404_fu_1749_p3 <= pos2_fu_1679_p2(11 downto 11);
    tmp_407_fu_1949_p3 <= bitcast_ln724_4_fu_1946_p1(31 downto 31);
    tmp_408_fu_1485_p4 <= F2_4_fu_1439_p2(11 downto 4);
    tmp_409_fu_1507_p4 <= add_ln601_2_fu_1501_p2(11 downto 4);
    tmp_412_fu_2105_p3 <= pos2_4_fu_2035_p2(11 downto 11);
    tmp_415_fu_2745_p3 <= bitcast_ln724_7_fu_2742_p1(31 downto 31);
    tmp_416_fu_2383_p4 <= F2_5_fu_2337_p2(11 downto 4);
    tmp_417_fu_2405_p4 <= add_ln601_4_fu_2399_p2(11 downto 4);
    tmp_420_fu_2901_p3 <= pos2_5_fu_2831_p2(11 downto 11);
    tmp_423_fu_3101_p3 <= bitcast_ln724_9_fu_3098_p1(31 downto 31);
    tmp_424_fu_2559_p4 <= F2_6_fu_2513_p2(11 downto 4);
    tmp_425_fu_2581_p4 <= add_ln601_5_fu_2575_p2(11 downto 4);
    tmp_428_fu_3257_p3 <= pos2_6_fu_3187_p2(11 downto 11);
    trunc_ln544_4_fu_1377_p1 <= ireg_4_fu_1373_p1(63 - 1 downto 0);
    trunc_ln544_5_fu_2275_p1 <= ireg_5_fu_2271_p1(63 - 1 downto 0);
    trunc_ln544_6_fu_2451_p1 <= ireg_6_fu_2447_p1(63 - 1 downto 0);
    trunc_ln544_fu_1201_p1 <= ireg_fu_1197_p1(63 - 1 downto 0);
    trunc_ln554_4_fu_1403_p1 <= ireg_4_fu_1373_p1(52 - 1 downto 0);
    trunc_ln554_5_fu_2301_p1 <= ireg_5_fu_2271_p1(52 - 1 downto 0);
    trunc_ln554_6_fu_2477_p1 <= ireg_6_fu_2447_p1(52 - 1 downto 0);
    trunc_ln554_fu_1227_p1 <= ireg_fu_1197_p1(52 - 1 downto 0);
    trunc_ln572_4_fu_1471_p1 <= man_V_27_fu_1425_p3(32 - 1 downto 0);
    trunc_ln572_5_fu_2369_p1 <= man_V_28_fu_2323_p3(32 - 1 downto 0);
    trunc_ln572_6_fu_2545_p1 <= man_V_29_fu_2499_p3(32 - 1 downto 0);
    trunc_ln572_fu_1295_p1 <= man_V_fu_1249_p3(32 - 1 downto 0);
    trunc_ln575_4_fu_1942_p1 <= ashr_ln575_2_fu_1937_p2(32 - 1 downto 0);
    trunc_ln575_5_fu_2738_p1 <= ashr_ln575_4_fu_2733_p2(32 - 1 downto 0);
    trunc_ln575_6_fu_3094_p1 <= ashr_ln575_5_fu_3089_p2(32 - 1 downto 0);
    trunc_ln575_fu_1586_p1 <= ashr_ln575_fu_1581_p2(32 - 1 downto 0);
    underflow_96_fu_2260_p2 <= (xor_ln648_1_fu_2254_p2 and neg_src_96_reg_3637);
    underflow_97_fu_3056_p2 <= (xor_ln648_2_fu_3050_p2 and neg_src_97_reg_3739);
    underflow_98_fu_3412_p2 <= (xor_ln648_3_fu_3406_p2 and neg_src_98_reg_3811);
    underflow_fu_1904_p2 <= (xor_ln648_fu_1898_p2 and neg_src_reg_3565);
    xor_ln560_1_fu_2681_p2 <= (icmp_ln560_2_reg_3649 xor ap_const_lv1_1);
    xor_ln560_2_fu_3440_p2 <= (icmp_ln560_4_reg_3751 xor ap_const_lv1_1);
    xor_ln560_3_fu_3487_p2 <= (icmp_ln560_5_reg_3823 xor ap_const_lv1_1);
    xor_ln560_fu_2634_p2 <= (icmp_ln560_reg_3577 xor ap_const_lv1_1);
    xor_ln571_1_fu_1977_p2 <= (icmp_ln571_2_fu_1918_p2 xor ap_const_lv1_1);
    xor_ln571_2_fu_2773_p2 <= (icmp_ln571_4_fu_2714_p2 xor ap_const_lv1_1);
    xor_ln571_3_fu_3129_p2 <= (icmp_ln571_5_fu_3070_p2 xor ap_const_lv1_1);
    xor_ln571_fu_1621_p2 <= (icmp_ln571_fu_1562_p2 xor ap_const_lv1_1);
    xor_ln574_1_fu_2002_p2 <= (icmp_ln574_2_fu_1923_p2 xor ap_const_lv1_1);
    xor_ln574_2_fu_2798_p2 <= (icmp_ln574_4_fu_2719_p2 xor ap_const_lv1_1);
    xor_ln574_3_fu_3154_p2 <= (icmp_ln574_5_fu_3075_p2 xor ap_const_lv1_1);
    xor_ln574_fu_1646_p2 <= (icmp_ln574_fu_1567_p2 xor ap_const_lv1_1);
    xor_ln610_1_fu_2173_p2 <= (icmp_ln610_4_fu_2048_p2 xor ap_const_lv1_1);
    xor_ln610_2_fu_2969_p2 <= (icmp_ln610_8_fu_2844_p2 xor ap_const_lv1_1);
    xor_ln610_3_fu_3325_p2 <= (icmp_ln610_10_fu_3200_p2 xor ap_const_lv1_1);
    xor_ln610_fu_1817_p2 <= (icmp_ln610_fu_1692_p2 xor ap_const_lv1_1);
    xor_ln647_10_fu_3033_p2 <= (neg_src_97_reg_3739 xor ap_const_lv1_1);
    xor_ln647_11_fu_3377_p2 <= (deleted_zeros_6_fu_3349_p3 xor ap_const_lv1_1);
    xor_ln647_12_fu_3389_p2 <= (neg_src_98_reg_3811 xor ap_const_lv1_1);
    xor_ln647_1_fu_1881_p2 <= (neg_src_reg_3565 xor ap_const_lv1_1);
    xor_ln647_4_fu_2225_p2 <= (deleted_zeros_4_fu_2197_p3 xor ap_const_lv1_1);
    xor_ln647_5_fu_2237_p2 <= (neg_src_96_reg_3637 xor ap_const_lv1_1);
    xor_ln647_9_fu_3021_p2 <= (deleted_zeros_5_fu_2993_p3 xor ap_const_lv1_1);
    xor_ln647_fu_1869_p2 <= (deleted_zeros_fu_1841_p3 xor ap_const_lv1_1);
    xor_ln648_1_fu_2254_p2 <= (or_ln610_5_fu_2219_p2 xor and_ln648_3_fu_2248_p2);
    xor_ln648_2_fu_3050_p2 <= (or_ln610_8_fu_3015_p2 xor and_ln648_5_fu_3044_p2);
    xor_ln648_3_fu_3406_p2 <= (or_ln610_11_fu_3371_p2 xor and_ln648_9_fu_3400_p2);
    xor_ln648_fu_1898_p2 <= (or_ln610_2_fu_1863_p2 xor and_ln648_fu_1892_p2);
    zext_ln22_1_fu_3428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln20_1_fu_3423_p2),64));
    zext_ln22_2_fu_3475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln20_2_fu_3470_p2),64));
    zext_ln22_fu_2669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln20_fu_2664_p2),64));
    zext_ln455_2_fu_1399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_4_fu_1389_p4),12));
    zext_ln455_4_fu_2297_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_5_fu_2287_p4),12));
    zext_ln455_5_fu_2473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_6_fu_2463_p4),12));
    zext_ln455_fu_1223_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_1213_p4),12));
    zext_ln558_4_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_234_fu_1407_p3),54));
    zext_ln558_5_fu_2313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_236_fu_2305_p3),54));
    zext_ln558_6_fu_2489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_238_fu_2481_p3),54));
    zext_ln558_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_1231_p3),54));
    zext_ln575_4_fu_1933_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln570_1_fu_1915_p1),54));
    zext_ln575_5_fu_2729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln570_2_fu_2711_p1),54));
    zext_ln575_6_fu_3085_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln570_3_fu_3067_p1),54));
    zext_ln575_fu_1577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln570_fu_1559_p1),54));
    zext_ln624_4_fu_2084_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln624_4_fu_2080_p1),54));
    zext_ln624_5_fu_2880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln624_5_fu_2876_p1),54));
    zext_ln624_6_fu_3236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln624_6_fu_3232_p1),54));
    zext_ln624_fu_1728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln624_fu_1724_p1),54));
end behav;
