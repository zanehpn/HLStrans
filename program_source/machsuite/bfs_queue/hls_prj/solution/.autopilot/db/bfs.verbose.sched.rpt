

================================================================
== Vitis HLS Report for 'bfs'
================================================================
* Date:           Fri Apr  4 02:04:14 2025

* Version:        2022.2.2 (Build 3779808 on Feb 17 2023)
* Project:        hls_prj
* Solution:       solution (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu55c-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  2.575 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |   Interval   | Pipeline|
    |   min   |   max   |    min   |    max   | min |   max  |   Type  |
    +---------+---------+----------+----------+-----+--------+---------+
    |      482|   123137|  2.410 us|  0.616 ms|  483|  123138|       no|
    +---------+---------+----------+----------+-----+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+---------+---------+----------+-----------+-----------+---------+----------+
        |              |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip  |          |
        |   Loop Name  |   min   |   max   |  Latency |  achieved |   target  |  Count  | Pipelined|
        +--------------+---------+---------+----------+-----------+-----------+---------+----------+
        |- loop_queue  |      481|   123136|       481|          -|          -|  1 ~ 256|        no|
        +--------------+---------+---------+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.71>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%q_in = alloca i32 1"   --->   Operation 6 'alloca' 'q_in' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%q_out = alloca i32 1"   --->   Operation 7 'alloca' 'q_out' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%dummy = alloca i32 1"   --->   Operation 8 'alloca' 'dummy' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%starting_node_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %starting_node"   --->   Operation 9 'read' 'starting_node_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%trunc_ln14 = trunc i64 %starting_node_read" [bfs.c:14]   --->   Operation 10 'trunc' 'trunc_ln14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%spectopmodule_ln14 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2" [bfs.c:14]   --->   Operation 11 'spectopmodule' 'spectopmodule_ln14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i128 %nodes, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i128 %nodes"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %edges, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %edges"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %starting_node"   --->   Operation 16 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %starting_node, void @empty_1, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %level, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %level"   --->   Operation 19 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %level_counts, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %level_counts"   --->   Operation 21 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%queue = alloca i64 1" [bfs.c:15]   --->   Operation 22 'alloca' 'queue' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%level_addr = getelementptr i8 %level, i64 0, i64 %starting_node_read" [bfs.c:28]   --->   Operation 23 'getelementptr' 'level_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.62ns)   --->   "%store_ln28 = store i8 0, i8 %level_addr" [bfs.c:28]   --->   Operation 24 'store' 'store_ln28' <Predicate = true> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%level_counts_addr = getelementptr i64 %level_counts, i64 0, i64 0" [bfs.c:29]   --->   Operation 25 'getelementptr' 'level_counts_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.71ns)   --->   "%store_ln29 = store i64 1, i4 %level_counts_addr" [bfs.c:29]   --->   Operation 26 'store' 'store_ln29' <Predicate = true> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.71> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10> <RAM>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%queue_addr = getelementptr i8 %queue, i64 0, i64 0" [bfs.c:30]   --->   Operation 27 'getelementptr' 'queue_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.62ns)   --->   "%store_ln30 = store i8 %trunc_ln14, i8 %queue_addr" [bfs.c:30]   --->   Operation 28 'store' 'store_ln30' <Predicate = true> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_1 : Operation 29 [1/1] (0.38ns)   --->   "%store_ln32 = store i9 0, i9 %dummy" [bfs.c:32]   --->   Operation 29 'store' 'store_ln32' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 30 [1/1] (0.38ns)   --->   "%store_ln32 = store i8 0, i8 %q_out" [bfs.c:32]   --->   Operation 30 'store' 'store_ln32' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%store_ln32 = store i64 2, i64 %q_in" [bfs.c:32]   --->   Operation 31 'store' 'store_ln32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln32 = br void %for.body" [bfs.c:32]   --->   Operation 32 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.27>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%dummy_1 = load i9 %dummy" [bfs.c:32]   --->   Operation 33 'load' 'dummy_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.59ns)   --->   "%icmp_ln32 = icmp_eq  i9 %dummy_1, i9 256" [bfs.c:32]   --->   Operation 34 'icmp' 'icmp_ln32' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1, i64 256, i64 128"   --->   Operation 35 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.71ns)   --->   "%dummy_2 = add i9 %dummy_1, i9 1" [bfs.c:32]   --->   Operation 36 'add' 'dummy_2' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32, void %for.body.split, void %for.end48.loopexit" [bfs.c:32]   --->   Operation 37 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%q_in_load = load i64 %q_in" [bfs.c:33]   --->   Operation 38 'load' 'q_in_load' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%q_out_load = load i8 %q_out" [bfs.c:33]   --->   Operation 39 'load' 'q_out_load' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln32 = zext i8 %q_out_load" [bfs.c:32]   --->   Operation 40 'zext' 'zext_ln32' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln32_1 = zext i8 %q_out_load" [bfs.c:32]   --->   Operation 41 'zext' 'zext_ln32_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%specloopname_ln16 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [bfs.c:16]   --->   Operation 42 'specloopname' 'specloopname_ln16' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (1.06ns)   --->   "%icmp_ln33 = icmp_ugt  i64 %q_in_load, i64 %zext_ln32" [bfs.c:33]   --->   Operation 43 'icmp' 'icmp_ln33' <Predicate = (!icmp_ln32)> <Delay = 1.06> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.70ns)   --->   "%add_ln33 = add i9 %zext_ln32_1, i9 1" [bfs.c:33]   --->   Operation 44 'add' 'add_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln33 = zext i9 %add_ln33" [bfs.c:33]   --->   Operation 45 'zext' 'zext_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.70ns)   --->   "%q_out_1 = add i8 %q_out_load, i8 1" [bfs.c:33]   --->   Operation 46 'add' 'q_out_1' <Predicate = (!icmp_ln32)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln33 = br i1 %icmp_ln33, void %cond.false8, void %cond.true5" [bfs.c:33]   --->   Operation 47 'br' 'br_ln33' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.06ns)   --->   "%icmp_ln33_2 = icmp_eq  i64 %q_in_load, i64 0" [bfs.c:33]   --->   Operation 48 'icmp' 'icmp_ln33_2' <Predicate = (!icmp_ln32 & !icmp_ln33)> <Delay = 1.06> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.58ns)   --->   "%icmp_ln33_3 = icmp_eq  i8 %q_out_load, i8 255" [bfs.c:33]   --->   Operation 49 'icmp' 'icmp_ln33_3' <Predicate = (!icmp_ln32 & !icmp_ln33)> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.12ns)   --->   "%and_ln33 = and i1 %icmp_ln33_2, i1 %icmp_ln33_3" [bfs.c:33]   --->   Operation 50 'and' 'and_ln33' <Predicate = (!icmp_ln32 & !icmp_ln33)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln33 = br i1 %and_ln33, void %loop_neighbors, void %if.then" [bfs.c:33]   --->   Operation 51 'br' 'br_ln33' <Predicate = (!icmp_ln32 & !icmp_ln33)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (1.06ns)   --->   "%icmp_ln33_1 = icmp_eq  i64 %q_in_load, i64 %zext_ln33" [bfs.c:33]   --->   Operation 52 'icmp' 'icmp_ln33_1' <Predicate = (!icmp_ln32 & icmp_ln33)> <Delay = 1.06> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln33 = br i1 %icmp_ln33_1, void %loop_neighbors, void %if.then" [bfs.c:33]   --->   Operation 53 'br' 'br_ln33' <Predicate = (!icmp_ln32 & icmp_ln33)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%queue_addr_1 = getelementptr i8 %queue, i64 0, i64 %zext_ln32" [bfs.c:35]   --->   Operation 54 'getelementptr' 'queue_addr_1' <Predicate = (!icmp_ln32 & icmp_ln33 & !icmp_ln33_1) | (!icmp_ln32 & !icmp_ln33 & !and_ln33)> <Delay = 0.00>
ST_2 : Operation 55 [2/2] (0.62ns)   --->   "%n = load i8 %queue_addr_1" [bfs.c:37]   --->   Operation 55 'load' 'n' <Predicate = (!icmp_ln32 & icmp_ln33 & !icmp_ln33_1) | (!icmp_ln32 & !icmp_ln33 & !and_ln33)> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_2 : Operation 56 [1/1] (0.38ns)   --->   "%store_ln32 = store i9 %dummy_2, i9 %dummy" [bfs.c:32]   --->   Operation 56 'store' 'store_ln32' <Predicate = (!icmp_ln32 & icmp_ln33 & !icmp_ln33_1) | (!icmp_ln32 & !icmp_ln33 & !and_ln33)> <Delay = 0.38>
ST_2 : Operation 57 [1/1] (0.38ns)   --->   "%store_ln32 = store i8 %q_out_1, i8 %q_out" [bfs.c:32]   --->   Operation 57 'store' 'store_ln32' <Predicate = (!icmp_ln32 & icmp_ln33 & !icmp_ln33_1) | (!icmp_ln32 & !icmp_ln33 & !and_ln33)> <Delay = 0.38>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%br_ln34 = br void %for.end48" [bfs.c:34]   --->   Operation 58 'br' 'br_ln34' <Predicate = (!icmp_ln32 & icmp_ln33 & icmp_ln33_1) | (!icmp_ln32 & !icmp_ln33 & and_ln33)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.end48"   --->   Operation 59 'br' 'br_ln0' <Predicate = (icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%ret_ln61 = ret" [bfs.c:61]   --->   Operation 60 'ret' 'ret_ln61' <Predicate = (icmp_ln33 & icmp_ln33_1) | (!icmp_ln33 & and_ln33) | (icmp_ln32)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.82>
ST_3 : Operation 61 [1/2] (0.62ns)   --->   "%n = load i8 %queue_addr_1" [bfs.c:37]   --->   Operation 61 'load' 'n' <Predicate = true> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i8 %n" [bfs.c:18]   --->   Operation 62 'zext' 'zext_ln18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%nodes_addr = getelementptr i128 %nodes, i64 0, i64 %zext_ln18" [bfs.c:37]   --->   Operation 63 'getelementptr' 'nodes_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [2/2] (1.20ns)   --->   "%nodes_load = load i8 %nodes_addr" [bfs.c:37]   --->   Operation 64 'load' 'nodes_load' <Predicate = true> <Delay = 1.20> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 256> <RAM>

State 4 <SV = 3> <Delay = 1.58>
ST_4 : Operation 65 [1/2] (1.20ns)   --->   "%nodes_load = load i8 %nodes_addr" [bfs.c:37]   --->   Operation 65 'load' 'nodes_load' <Predicate = true> <Delay = 1.20> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 128> <Depth = 256> <RAM>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%e = trunc i128 %nodes_load" [bfs.c:37]   --->   Operation 66 'trunc' 'e' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_end = partselect i64 @_ssdm_op_PartSelect.i64.i128.i32.i32, i128 %nodes_load, i32 64, i32 127" [bfs.c:38]   --->   Operation 67 'partselect' 'tmp_end' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [2/2] (0.38ns)   --->   "%call_ln37 = call void @bfs_Pipeline_loop_neighbors, i64 %e, i8 %level, i8 %n, i64 %tmp_end, i64 %edges, i64 %level_counts, i8 %queue, i64 %q_in" [bfs.c:37]   --->   Operation 68 'call' 'call_ln37' <Predicate = true> <Delay = 0.38> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 69 [1/2] (0.00ns)   --->   "%call_ln37 = call void @bfs_Pipeline_loop_neighbors, i64 %e, i8 %level, i8 %n, i64 %tmp_end, i64 %edges, i64 %level_counts, i8 %queue, i64 %q_in" [bfs.c:37]   --->   Operation 69 'call' 'call_ln37' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln32 = br void %for.body" [bfs.c:32]   --->   Operation 70 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 1.35ns.

 <State 1>: 0.714ns
The critical path consists of the following:
	'getelementptr' operation ('level_counts_addr', bfs.c:29) [25]  (0 ns)
	'store' operation ('store_ln29', bfs.c:29) of constant 1 on array 'level_counts' [26]  (0.714 ns)

 <State 2>: 2.28ns
The critical path consists of the following:
	'load' operation ('q_out_load', bfs.c:33) on local variable 'q_out' [41]  (0 ns)
	'add' operation ('add_ln33', bfs.c:33) [46]  (0.705 ns)
	'icmp' operation ('icmp_ln33_1', bfs.c:33) [56]  (1.06 ns)
	blocking operation 0.509 ns on control path)

 <State 3>: 1.83ns
The critical path consists of the following:
	'load' operation ('n', bfs.c:37) on array 'queue', bfs.c:15 [60]  (0.626 ns)
	'getelementptr' operation ('nodes_addr', bfs.c:37) [62]  (0 ns)
	'load' operation ('nodes_load', bfs.c:37) on array 'nodes' [63]  (1.2 ns)

 <State 4>: 1.59ns
The critical path consists of the following:
	'load' operation ('nodes_load', bfs.c:37) on array 'nodes' [63]  (1.2 ns)
	'call' operation ('call_ln37', bfs.c:37) to 'bfs_Pipeline_loop_neighbors' [66]  (0.387 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
