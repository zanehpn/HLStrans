

================================================================
== Vitis HLS Report for 'bfs_Pipeline_loop_neighbors'
================================================================
* Date:           Fri Apr  4 02:04:14 2025

* Version:        2022.2.2 (Build 3779808 on Feb 17 2023)
* Project:        hls_prj
* Solution:       solution (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu55c-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  2.575 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      477|      477|  2.385 us|  2.385 us|  477|  477|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- loop_neighbors  |      475|      475|         5|          3|          1|   158|       yes|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 3, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.38>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%e_1 = alloca i32 1"   --->   Operation 8 'alloca' 'e_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%tmp_end_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %tmp_end"   --->   Operation 10 'read' 'tmp_end_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%zext_ln18_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %zext_ln18"   --->   Operation 11 'read' 'zext_ln18_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%e_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %e"   --->   Operation 12 'read' 'e_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln18_cast = zext i8 %zext_ln18_read"   --->   Operation 13 'zext' 'zext_ln18_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %level_counts, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %level, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %edges, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.38ns)   --->   "%store_ln0 = store i8 0, i8 %i"   --->   Operation 17 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 18 [1/1] (0.38ns)   --->   "%store_ln0 = store i64 %e_read, i64 %e_1"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body18"   --->   Operation 19 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.64>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%e_3 = load i64 %e_1" [bfs.c:41]   --->   Operation 20 'load' 'e_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%i_1 = load i8 %i" [bfs.c:39]   --->   Operation 21 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%level_addr = getelementptr i8 %level, i64 0, i64 %zext_ln18_cast" [bfs.c:45]   --->   Operation 22 'getelementptr' 'level_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 23 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.58ns)   --->   "%icmp_ln39 = icmp_eq  i8 %i_1, i8 158" [bfs.c:39]   --->   Operation 24 'icmp' 'icmp_ln39' <Predicate = true> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 158, i64 158, i64 158"   --->   Operation 25 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.70ns)   --->   "%i_2 = add i8 %i_1, i8 1" [bfs.c:39]   --->   Operation 26 'add' 'i_2' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39, void %for.body18.split, void %for.inc46.exitStub" [bfs.c:39]   --->   Operation 27 'br' 'br_ln39' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (1.06ns)   --->   "%icmp_ln40 = icmp_ult  i64 %e_3, i64 %tmp_end_read" [bfs.c:40]   --->   Operation 28 'icmp' 'icmp_ln40' <Predicate = (!icmp_ln39)> <Delay = 1.06> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln40 = br i1 %icmp_ln40, void %for.inc, void %if.then20" [bfs.c:40]   --->   Operation 29 'br' 'br_ln40' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln41 = trunc i64 %e_3" [bfs.c:41]   --->   Operation 30 'trunc' 'trunc_ln41' <Predicate = (!icmp_ln39 & icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln41 = zext i12 %trunc_ln41" [bfs.c:41]   --->   Operation 31 'zext' 'zext_ln41' <Predicate = (!icmp_ln39 & icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%edges_addr = getelementptr i64 %edges, i64 0, i64 %zext_ln41" [bfs.c:41]   --->   Operation 32 'getelementptr' 'edges_addr' <Predicate = (!icmp_ln39 & icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 33 [2/2] (1.64ns)   --->   "%tmp_dst = load i12 %edges_addr" [bfs.c:41]   --->   Operation 33 'load' 'tmp_dst' <Predicate = (!icmp_ln39 & icmp_ln40)> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_2 : Operation 34 [1/1] (1.14ns)   --->   "%e_4 = add i64 %e_3, i64 1" [bfs.c:51]   --->   Operation 34 'add' 'e_4' <Predicate = (!icmp_ln39)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.38ns)   --->   "%store_ln39 = store i8 %i_2, i8 %i" [bfs.c:39]   --->   Operation 35 'store' 'store_ln39' <Predicate = (!icmp_ln39)> <Delay = 0.38>
ST_2 : Operation 36 [1/1] (0.38ns)   --->   "%store_ln39 = store i64 %e_4, i64 %e_1" [bfs.c:39]   --->   Operation 36 'store' 'store_ln39' <Predicate = (!icmp_ln39)> <Delay = 0.38>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln39 = br void %for.body18" [bfs.c:39]   --->   Operation 37 'br' 'br_ln39' <Predicate = (!icmp_ln39)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.27>
ST_3 : Operation 38 [1/2] (1.64ns)   --->   "%tmp_dst = load i12 %edges_addr" [bfs.c:41]   --->   Operation 38 'load' 'tmp_dst' <Predicate = (!icmp_ln39 & icmp_ln40)> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%trunc_ln41_1 = trunc i64 %tmp_dst" [bfs.c:41]   --->   Operation 39 'trunc' 'trunc_ln41_1' <Predicate = (!icmp_ln39 & icmp_ln40)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%level_addr_1 = getelementptr i8 %level, i64 0, i64 %tmp_dst" [bfs.c:42]   --->   Operation 40 'getelementptr' 'level_addr_1' <Predicate = (!icmp_ln39 & icmp_ln40)> <Delay = 0.00>
ST_3 : Operation 41 [2/2] (0.62ns)   --->   "%tmp_level = load i8 %level_addr_1" [bfs.c:42]   --->   Operation 41 'load' 'tmp_level' <Predicate = (!icmp_ln39 & icmp_ln40)> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 69 'ret' 'ret_ln0' <Predicate = (icmp_ln39)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.99>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%q_in_2_out_load = load i64 %q_in_2_out"   --->   Operation 42 'load' 'q_in_2_out_load' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%empty_10 = trunc i64 %q_in_2_out_load"   --->   Operation 43 'trunc' 'empty_10' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%specloopname_ln16 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [bfs.c:16]   --->   Operation 44 'specloopname' 'specloopname_ln16' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_4 : Operation 45 [1/2] (0.62ns)   --->   "%tmp_level = load i8 %level_addr_1" [bfs.c:42]   --->   Operation 45 'load' 'tmp_level' <Predicate = (!icmp_ln39 & icmp_ln40)> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_4 : Operation 46 [1/1] (0.58ns)   --->   "%icmp_ln44 = icmp_eq  i8 %tmp_level, i8 127" [bfs.c:44]   --->   Operation 46 'icmp' 'icmp_ln44' <Predicate = (!icmp_ln39 & icmp_ln40)> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln44 = br i1 %icmp_ln44, void %for.inc, void %if.then24" [bfs.c:44]   --->   Operation 47 'br' 'br_ln44' <Predicate = (!icmp_ln39 & icmp_ln40)> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%q_in_2_out_load_1 = load i64 %q_in_2_out" [bfs.c:48]   --->   Operation 48 'load' 'q_in_2_out_load_1' <Predicate = (!icmp_ln39 & icmp_ln40 & icmp_ln44)> <Delay = 0.00>
ST_4 : Operation 49 [2/2] (0.62ns)   --->   "%level_load = load i8 %level_addr" [bfs.c:45]   --->   Operation 49 'load' 'level_load' <Predicate = (!icmp_ln39 & icmp_ln40 & icmp_ln44)> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_4 : Operation 50 [1/1] (1.06ns)   --->   "%icmp_ln48 = icmp_eq  i64 %q_in_2_out_load_1, i64 0" [bfs.c:48]   --->   Operation 50 'icmp' 'icmp_ln48' <Predicate = (!icmp_ln39 & icmp_ln40 & icmp_ln44)> <Delay = 1.06> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.70ns)   --->   "%add_ln48 = add i8 %empty_10, i8 255" [bfs.c:48]   --->   Operation 51 'add' 'add_ln48' <Predicate = (!icmp_ln39 & icmp_ln40 & icmp_ln44)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.30ns)   --->   "%select_ln48 = select i1 %icmp_ln48, i8 255, i8 %add_ln48" [bfs.c:48]   --->   Operation 52 'select' 'select_ln48' <Predicate = (!icmp_ln39 & icmp_ln40 & icmp_ln44)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln48 = zext i8 %select_ln48" [bfs.c:48]   --->   Operation 53 'zext' 'zext_ln48' <Predicate = (!icmp_ln39 & icmp_ln40 & icmp_ln44)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%queue_addr = getelementptr i8 %queue, i64 0, i64 %zext_ln48" [bfs.c:48]   --->   Operation 54 'getelementptr' 'queue_addr' <Predicate = (!icmp_ln39 & icmp_ln40 & icmp_ln44)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.62ns)   --->   "%store_ln48 = store i8 %trunc_ln41_1, i8 %queue_addr" [bfs.c:48]   --->   Operation 55 'store' 'store_ln48' <Predicate = (!icmp_ln39 & icmp_ln40 & icmp_ln44)> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_4 : Operation 56 [1/1] (0.70ns)   --->   "%q_in = add i8 %empty_10, i8 1" [bfs.c:48]   --->   Operation 56 'add' 'q_in' <Predicate = (!icmp_ln39 & icmp_ln40 & icmp_ln44)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i8 %q_in" [bfs.c:16]   --->   Operation 57 'zext' 'zext_ln16' <Predicate = (!icmp_ln39 & icmp_ln40 & icmp_ln44)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%store_ln49 = store i64 %zext_ln16, i64 %q_in_2_out" [bfs.c:49]   --->   Operation 58 'store' 'store_ln49' <Predicate = (!icmp_ln39 & icmp_ln40 & icmp_ln44)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.04>
ST_5 : Operation 59 [1/2] (0.62ns)   --->   "%level_load = load i8 %level_addr" [bfs.c:45]   --->   Operation 59 'load' 'level_load' <Predicate = (icmp_ln40 & icmp_ln44)> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_5 : Operation 60 [1/1] (0.70ns)   --->   "%tmp_level_1 = add i8 %level_load, i8 1" [bfs.c:45]   --->   Operation 60 'add' 'tmp_level_1' <Predicate = (icmp_ln40 & icmp_ln44)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (0.62ns)   --->   "%store_ln46 = store i8 %tmp_level_1, i8 %level_addr_1" [bfs.c:46]   --->   Operation 61 'store' 'store_ln46' <Predicate = (icmp_ln40 & icmp_ln44)> <Delay = 0.62> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 256> <RAM>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i8 %tmp_level_1" [bfs.c:47]   --->   Operation 62 'zext' 'zext_ln47' <Predicate = (icmp_ln40 & icmp_ln44)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%level_counts_addr = getelementptr i64 %level_counts, i64 0, i64 %zext_ln47" [bfs.c:47]   --->   Operation 63 'getelementptr' 'level_counts_addr' <Predicate = (icmp_ln40 & icmp_ln44)> <Delay = 0.00>
ST_5 : Operation 64 [2/2] (0.71ns)   --->   "%level_counts_load = load i4 %level_counts_addr" [bfs.c:47]   --->   Operation 64 'load' 'level_counts_load' <Predicate = (icmp_ln40 & icmp_ln44)> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.71> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10> <RAM>

State 6 <SV = 5> <Delay = 2.57>
ST_6 : Operation 65 [1/2] (0.71ns)   --->   "%level_counts_load = load i4 %level_counts_addr" [bfs.c:47]   --->   Operation 65 'load' 'level_counts_load' <Predicate = (icmp_ln40 & icmp_ln44)> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.71> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10> <RAM>
ST_6 : Operation 66 [1/1] (1.14ns)   --->   "%add_ln47 = add i64 %level_counts_load, i64 1" [bfs.c:47]   --->   Operation 66 'add' 'add_ln47' <Predicate = (icmp_ln40 & icmp_ln44)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 67 [1/1] (0.71ns)   --->   "%store_ln47 = store i64 %add_ln47, i4 %level_counts_addr" [bfs.c:47]   --->   Operation 67 'store' 'store_ln47' <Predicate = (icmp_ln40 & icmp_ln44)> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.71> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 10> <RAM>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln49 = br void %for.inc" [bfs.c:49]   --->   Operation 68 'br' 'br_ln49' <Predicate = (icmp_ln40 & icmp_ln44)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 1.35ns.

 <State 1>: 0.387ns
The critical path consists of the following:
	'alloca' operation ('i') [10]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'i' [18]  (0.387 ns)

 <State 2>: 1.65ns
The critical path consists of the following:
	'load' operation ('e', bfs.c:41) on local variable 'e' [22]  (0 ns)
	'getelementptr' operation ('edges_addr', bfs.c:41) [39]  (0 ns)
	'load' operation ('tmp_dst', bfs.c:41) on array 'edges' [40]  (1.65 ns)

 <State 3>: 2.27ns
The critical path consists of the following:
	'load' operation ('tmp_dst', bfs.c:41) on array 'edges' [40]  (1.65 ns)
	'getelementptr' operation ('level_addr_1', bfs.c:42) [42]  (0 ns)
	'load' operation ('tmp_level', bfs.c:42) on array 'level' [43]  (0.626 ns)

 <State 4>: 1.99ns
The critical path consists of the following:
	'load' operation ('q_in_2_out_load_1', bfs.c:48) on local variable 'q_in_2_out' [47]  (0 ns)
	'icmp' operation ('icmp_ln48', bfs.c:48) [56]  (1.06 ns)
	'select' operation ('select_ln48', bfs.c:48) [58]  (0.303 ns)
	'getelementptr' operation ('queue_addr', bfs.c:48) [60]  (0 ns)
	'store' operation ('store_ln48', bfs.c:48) of variable 'trunc_ln41_1', bfs.c:41 on array 'queue' [61]  (0.626 ns)

 <State 5>: 2.04ns
The critical path consists of the following:
	'load' operation ('level_load', bfs.c:45) on array 'level' [48]  (0.626 ns)
	'add' operation ('tmp_level', bfs.c:45) [49]  (0.705 ns)
	'getelementptr' operation ('level_counts_addr', bfs.c:47) [52]  (0 ns)
	'load' operation ('level_counts_load', bfs.c:47) on array 'level_counts' [53]  (0.714 ns)

 <State 6>: 2.58ns
The critical path consists of the following:
	'load' operation ('level_counts_load', bfs.c:47) on array 'level_counts' [53]  (0.714 ns)
	'add' operation ('add_ln47', bfs.c:47) [54]  (1.15 ns)
	'store' operation ('store_ln47', bfs.c:47) of variable 'add_ln47', bfs.c:47 on array 'level_counts' [55]  (0.714 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
