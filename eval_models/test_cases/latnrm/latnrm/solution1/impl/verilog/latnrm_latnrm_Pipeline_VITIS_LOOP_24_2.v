// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module latnrm_latnrm_Pipeline_VITIS_LOOP_24_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        empty_24,
        empty_25,
        empty_26,
        empty_27,
        empty_28,
        empty_29,
        empty_30,
        empty_31,
        int_state_V_address0,
        int_state_V_ce0,
        int_state_V_we0,
        int_state_V_d0,
        int_state_V_address1,
        int_state_V_ce1,
        int_state_V_we1,
        int_state_V_d1,
        empty_32,
        empty_33,
        empty_34,
        empty_35,
        empty_36,
        empty_37,
        empty_38,
        empty_39,
        empty_40,
        empty_41,
        empty_42,
        empty_43,
        empty_44,
        empty_45,
        empty_46,
        empty_47,
        empty_48,
        empty_49,
        empty_50,
        empty_51,
        empty_52,
        empty_53,
        empty_54,
        empty_55,
        empty
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] empty_24;
input  [31:0] empty_25;
input  [31:0] empty_26;
input  [31:0] empty_27;
input  [31:0] empty_28;
input  [31:0] empty_29;
input  [31:0] empty_30;
input  [31:0] empty_31;
output  [5:0] int_state_V_address0;
output   int_state_V_ce0;
output   int_state_V_we0;
output  [31:0] int_state_V_d0;
output  [5:0] int_state_V_address1;
output   int_state_V_ce1;
output   int_state_V_we1;
output  [31:0] int_state_V_d1;
input  [31:0] empty_32;
input  [31:0] empty_33;
input  [31:0] empty_34;
input  [31:0] empty_35;
input  [31:0] empty_36;
input  [31:0] empty_37;
input  [31:0] empty_38;
input  [31:0] empty_39;
input  [31:0] empty_40;
input  [31:0] empty_41;
input  [31:0] empty_42;
input  [31:0] empty_43;
input  [31:0] empty_44;
input  [31:0] empty_45;
input  [31:0] empty_46;
input  [31:0] empty_47;
input  [31:0] empty_48;
input  [31:0] empty_49;
input  [31:0] empty_50;
input  [31:0] empty_51;
input  [31:0] empty_52;
input  [31:0] empty_53;
input  [31:0] empty_54;
input  [31:0] empty_55;
input  [31:0] empty;

reg ap_idle;
reg[5:0] int_state_V_address0;
reg int_state_V_ce0;
reg int_state_V_we0;
reg[31:0] int_state_V_d0;
reg[5:0] int_state_V_address1;
reg int_state_V_ce1;
reg int_state_V_we1;
reg[31:0] int_state_V_d1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln24_1_reg_3057;
reg   [0:0] icmp_ln24_reg_3042;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [5:0] j_reg_3034;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [5:0] j_reg_3034_pp0_iter1_reg;
wire   [0:0] icmp_ln24_fu_429_p2;
reg   [0:0] icmp_ln24_reg_3042_pp0_iter1_reg;
wire   [31:0] d_assign_1_fu_435_p35;
reg   [31:0] d_assign_1_reg_3046;
wire   [5:0] or_ln24_fu_508_p2;
reg   [5:0] or_ln24_reg_3052;
reg   [5:0] or_ln24_reg_3052_pp0_iter1_reg;
wire   [0:0] icmp_ln24_1_fu_514_p2;
reg   [0:0] icmp_ln24_1_reg_3057_pp0_iter1_reg;
wire   [31:0] d_assign_3_fu_520_p31;
reg   [31:0] d_assign_3_reg_3061;
wire   [31:0] d_assign_6_fu_585_p31;
reg   [31:0] d_assign_6_reg_3067;
reg   [31:0] d_assign_6_reg_3067_pp0_iter1_reg;
wire   [31:0] d_assign_8_fu_649_p31;
reg   [31:0] d_assign_8_reg_3073;
reg   [31:0] d_assign_8_reg_3073_pp0_iter1_reg;
wire   [0:0] neg_src_95_fu_721_p3;
reg   [0:0] neg_src_95_reg_3079;
wire    ap_block_pp0_stage1_11001;
wire   [53:0] man_V_15_fu_765_p3;
reg   [53:0] man_V_15_reg_3085;
wire   [0:0] icmp_ln560_fu_773_p2;
reg   [0:0] icmp_ln560_reg_3091;
wire   [11:0] F2_fu_779_p2;
reg   [11:0] F2_reg_3097;
wire   [0:0] icmp_ln570_1_fu_785_p2;
reg   [0:0] icmp_ln570_1_reg_3103;
wire  signed [11:0] sh_amt_fu_803_p3;
reg  signed [11:0] sh_amt_reg_3108;
wire   [31:0] trunc_ln572_fu_811_p1;
reg   [31:0] trunc_ln572_reg_3114;
reg   [6:0] tmp_302_reg_3120;
wire   [0:0] icmp_ln570_fu_835_p2;
reg   [0:0] icmp_ln570_reg_3125;
wire   [0:0] icmp_ln600_fu_857_p2;
reg   [0:0] icmp_ln600_reg_3130;
wire  signed [11:0] pos1_fu_863_p2;
reg  signed [11:0] pos1_reg_3135;
reg   [0:0] tmp_307_reg_3141;
wire   [0:0] lD_fu_881_p3;
reg   [0:0] lD_reg_3146;
wire   [0:0] neg_src_fu_897_p3;
reg   [0:0] neg_src_reg_3151;
wire   [53:0] man_V_13_fu_941_p3;
reg   [53:0] man_V_13_reg_3157;
wire   [0:0] icmp_ln560_1_fu_949_p2;
reg   [0:0] icmp_ln560_1_reg_3163;
wire   [11:0] F2_1_fu_955_p2;
reg   [11:0] F2_1_reg_3169;
wire   [0:0] icmp_ln570_2_fu_961_p2;
reg   [0:0] icmp_ln570_2_reg_3175;
wire  signed [11:0] sh_amt_1_fu_979_p3;
reg  signed [11:0] sh_amt_1_reg_3180;
wire   [31:0] trunc_ln572_1_fu_987_p1;
reg   [31:0] trunc_ln572_1_reg_3186;
reg   [6:0] tmp_310_reg_3192;
wire   [0:0] icmp_ln570_3_fu_1011_p2;
reg   [0:0] icmp_ln570_3_reg_3197;
wire   [0:0] icmp_ln600_1_fu_1033_p2;
reg   [0:0] icmp_ln600_1_reg_3202;
wire  signed [11:0] pos1_1_fu_1039_p2;
reg  signed [11:0] pos1_1_reg_3207;
reg   [0:0] tmp_315_reg_3213;
wire   [0:0] lD_3_fu_1057_p3;
reg   [0:0] lD_3_reg_3218;
wire   [31:0] p_Val2_199_fu_1187_p3;
reg   [31:0] p_Val2_199_reg_3223;
wire   [0:0] overflow_fu_1402_p2;
reg   [0:0] overflow_reg_3228;
wire   [0:0] or_ln302_fu_1425_p2;
reg   [0:0] or_ln302_reg_3233;
wire   [31:0] p_Val2_201_fu_1543_p3;
reg   [31:0] p_Val2_201_reg_3238;
wire   [0:0] overflow_93_fu_1758_p2;
reg   [0:0] overflow_93_reg_3243;
wire   [0:0] or_ln302_1_fu_1781_p2;
reg   [0:0] or_ln302_1_reg_3248;
wire   [0:0] neg_src_93_fu_1795_p3;
reg   [0:0] neg_src_93_reg_3253;
wire   [53:0] man_V_fu_1839_p3;
reg   [53:0] man_V_reg_3259;
wire   [0:0] icmp_ln560_2_fu_1847_p2;
reg   [0:0] icmp_ln560_2_reg_3265;
wire   [11:0] F2_2_fu_1853_p2;
reg   [11:0] F2_2_reg_3271;
wire   [0:0] icmp_ln570_4_fu_1859_p2;
reg   [0:0] icmp_ln570_4_reg_3277;
wire  signed [11:0] sh_amt_2_fu_1877_p3;
reg  signed [11:0] sh_amt_2_reg_3282;
wire   [31:0] trunc_ln572_2_fu_1885_p1;
reg   [31:0] trunc_ln572_2_reg_3288;
reg   [6:0] tmp_318_reg_3294;
wire   [0:0] icmp_ln570_5_fu_1909_p2;
reg   [0:0] icmp_ln570_5_reg_3299;
wire   [0:0] icmp_ln600_2_fu_1931_p2;
reg   [0:0] icmp_ln600_2_reg_3304;
wire  signed [11:0] pos1_2_fu_1937_p2;
reg  signed [11:0] pos1_2_reg_3309;
reg   [0:0] tmp_323_reg_3315;
wire   [0:0] lD_5_fu_1955_p3;
reg   [0:0] lD_5_reg_3320;
wire   [0:0] neg_src_94_fu_1971_p3;
reg   [0:0] neg_src_94_reg_3325;
wire   [53:0] man_V_14_fu_2015_p3;
reg   [53:0] man_V_14_reg_3331;
wire   [0:0] icmp_ln560_3_fu_2023_p2;
reg   [0:0] icmp_ln560_3_reg_3337;
wire   [11:0] F2_3_fu_2029_p2;
reg   [11:0] F2_3_reg_3343;
wire   [0:0] icmp_ln570_6_fu_2035_p2;
reg   [0:0] icmp_ln570_6_reg_3349;
wire  signed [11:0] sh_amt_3_fu_2053_p3;
reg  signed [11:0] sh_amt_3_reg_3354;
wire   [31:0] trunc_ln572_3_fu_2061_p1;
reg   [31:0] trunc_ln572_3_reg_3360;
reg   [6:0] tmp_326_reg_3366;
wire   [0:0] icmp_ln570_7_fu_2085_p2;
reg   [0:0] icmp_ln570_7_reg_3371;
wire   [0:0] icmp_ln600_3_fu_2107_p2;
reg   [0:0] icmp_ln600_3_reg_3376;
wire  signed [11:0] pos1_3_fu_2113_p2;
reg  signed [11:0] pos1_3_reg_3381;
reg   [0:0] tmp_331_reg_3387;
wire   [0:0] lD_7_fu_2131_p3;
reg   [0:0] lD_7_reg_3392;
wire   [31:0] p_Val2_203_fu_2333_p3;
reg   [31:0] p_Val2_203_reg_3397;
wire   [0:0] overflow_94_fu_2548_p2;
reg   [0:0] overflow_94_reg_3402;
wire   [0:0] or_ln302_2_fu_2571_p2;
reg   [0:0] or_ln302_2_reg_3407;
wire   [31:0] p_Val2_205_fu_2689_p3;
reg   [31:0] p_Val2_205_reg_3412;
wire   [0:0] overflow_95_fu_2904_p2;
reg   [0:0] overflow_95_reg_3417;
wire   [0:0] or_ln302_3_fu_2927_p2;
reg   [0:0] or_ln302_3_reg_3422;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_condition_exit_pp0_iter1_stage1;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] trunc_ln26_cast_fu_2139_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln24_fu_2180_p1;
wire   [63:0] zext_ln26_fu_2938_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln26_1_fu_2985_p1;
reg   [5:0] j_1_fu_172;
wire   [5:0] add_ln24_fu_1065_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_j;
wire   [31:0] select_ln560_fu_2172_p3;
wire   [31:0] select_ln560_1_fu_2213_p3;
wire   [31:0] select_ln560_2_fu_2972_p3;
wire   [31:0] select_ln560_3_fu_3019_p3;
reg   [31:0] grp_fu_415_p0;
reg   [31:0] grp_fu_418_p0;
wire   [63:0] grp_fu_415_p1;
wire   [63:0] ireg_3_fu_713_p1;
wire   [10:0] exp_tmp_fu_729_p4;
wire   [51:0] trunc_ln554_fu_743_p1;
wire   [52:0] p_Result_231_fu_747_p3;
wire   [53:0] zext_ln558_fu_755_p1;
wire   [53:0] man_V_4_fu_759_p2;
wire   [62:0] trunc_ln544_fu_717_p1;
wire   [11:0] zext_ln455_fu_739_p1;
wire   [11:0] add_ln570_fu_791_p2;
wire   [11:0] sub_ln570_fu_797_p2;
wire   [7:0] tmp_304_fu_825_p4;
wire   [11:0] add_ln601_fu_841_p2;
wire   [7:0] tmp_305_fu_847_p4;
wire  signed [31:0] sext_ln607_fu_869_p1;
wire   [63:0] grp_fu_418_p1;
wire   [63:0] ireg_fu_889_p1;
wire   [10:0] exp_tmp_1_fu_905_p4;
wire   [51:0] trunc_ln554_1_fu_919_p1;
wire   [52:0] p_Result_s_fu_923_p3;
wire   [53:0] zext_ln558_1_fu_931_p1;
wire   [53:0] man_V_7_fu_935_p2;
wire   [62:0] trunc_ln544_1_fu_893_p1;
wire   [11:0] zext_ln455_1_fu_915_p1;
wire   [11:0] add_ln570_1_fu_967_p2;
wire   [11:0] sub_ln570_1_fu_973_p2;
wire   [7:0] tmp_312_fu_1001_p4;
wire   [11:0] add_ln601_1_fu_1017_p2;
wire   [7:0] tmp_313_fu_1023_p4;
wire  signed [31:0] sext_ln607_1_fu_1045_p1;
wire  signed [31:0] sext_ln570_fu_1075_p1;
wire   [53:0] zext_ln575_fu_1093_p1;
wire   [53:0] ashr_ln575_fu_1097_p2;
wire   [31:0] bitcast_ln724_fu_1106_p1;
wire   [0:0] tmp_303_fu_1109_p3;
wire   [0:0] icmp_ln571_fu_1078_p2;
wire   [0:0] xor_ln571_fu_1137_p2;
wire   [0:0] and_ln570_fu_1143_p2;
wire   [0:0] icmp_ln574_fu_1083_p2;
wire   [0:0] and_ln574_fu_1148_p2;
wire   [31:0] trunc_ln575_fu_1102_p1;
wire   [31:0] select_ln571_fu_1130_p3;
wire   [0:0] xor_ln574_fu_1162_p2;
wire   [0:0] and_ln574_2_fu_1168_p2;
wire   [31:0] select_ln577_fu_1117_p3;
wire   [31:0] select_ln574_fu_1154_p3;
wire   [0:0] icmp_ln592_fu_1088_p2;
wire   [0:0] and_ln592_fu_1182_p2;
wire   [31:0] shl_ln593_fu_1125_p2;
wire   [31:0] select_ln574_2_fu_1174_p3;
wire   [0:0] icmp_ln610_2_fu_1218_p2;
wire  signed [11:0] pos2_fu_1195_p2;
wire  signed [31:0] sext_ln624_fu_1240_p1;
wire   [53:0] zext_ln624_fu_1244_p1;
wire   [53:0] Range2_V_2_fu_1248_p2;
wire   [53:0] r_V_fu_1253_p2;
wire   [0:0] tmp_308_fu_1265_p3;
wire   [0:0] icmp_ln620_2_fu_1234_p2;
wire   [0:0] Range2_all_ones_fu_1259_p2;
wire   [0:0] Range2_all_ones_3_fu_1273_p2;
wire   [0:0] Range2_all_ones_4_fu_1279_p3;
wire   [0:0] Range1_all_ones_19_fu_1223_p2;
wire   [0:0] icmp_ln630_fu_1299_p2;
wire   [0:0] Range1_all_zeros_2_fu_1293_p2;
wire   [0:0] icmp_ln631_fu_1311_p2;
wire   [0:0] Range1_all_ones_18_fu_1213_p2;
wire   [0:0] icmp_ln610_fu_1208_p2;
wire   [0:0] select_ln631_fu_1317_p3;
wire   [0:0] xor_ln610_fu_1333_p2;
wire   [0:0] icmp_ln620_fu_1228_p2;
wire   [0:0] and_ln628_fu_1345_p2;
wire   [0:0] and_ln628_2_fu_1351_p2;
wire   [0:0] and_ln630_fu_1305_p2;
wire   [0:0] or_ln610_fu_1339_p2;
wire   [0:0] select_ln631_2_fu_1325_p3;
wire   [0:0] Range1_all_ones_fu_1287_p2;
wire   [0:0] or_ln610_3_fu_1365_p2;
wire   [0:0] p_Result_232_fu_1200_p3;
wire   [0:0] deleted_zeros_fu_1357_p3;
wire   [0:0] xor_ln647_fu_1385_p2;
wire   [0:0] or_ln647_fu_1391_p2;
wire   [0:0] xor_ln647_2_fu_1397_p2;
wire   [0:0] deleted_ones_fu_1371_p3;
wire   [0:0] and_ln648_fu_1408_p2;
wire   [0:0] or_ln610_4_fu_1379_p2;
wire   [0:0] xor_ln648_fu_1414_p2;
wire   [0:0] underflow_fu_1420_p2;
wire  signed [31:0] sext_ln570_1_fu_1431_p1;
wire   [53:0] zext_ln575_1_fu_1449_p1;
wire   [53:0] ashr_ln575_1_fu_1453_p2;
wire   [31:0] bitcast_ln724_2_fu_1462_p1;
wire   [0:0] tmp_311_fu_1465_p3;
wire   [0:0] icmp_ln571_1_fu_1434_p2;
wire   [0:0] xor_ln571_1_fu_1493_p2;
wire   [0:0] and_ln570_1_fu_1499_p2;
wire   [0:0] icmp_ln574_1_fu_1439_p2;
wire   [0:0] and_ln574_3_fu_1504_p2;
wire   [31:0] trunc_ln575_1_fu_1458_p1;
wire   [31:0] select_ln571_1_fu_1486_p3;
wire   [0:0] xor_ln574_1_fu_1518_p2;
wire   [0:0] and_ln574_4_fu_1524_p2;
wire   [31:0] select_ln577_1_fu_1473_p3;
wire   [31:0] select_ln574_3_fu_1510_p3;
wire   [0:0] icmp_ln592_1_fu_1444_p2;
wire   [0:0] and_ln592_1_fu_1538_p2;
wire   [31:0] shl_ln593_1_fu_1481_p2;
wire   [31:0] select_ln574_4_fu_1530_p3;
wire   [0:0] icmp_ln610_4_fu_1574_p2;
wire  signed [11:0] pos2_1_fu_1551_p2;
wire  signed [31:0] sext_ln624_1_fu_1596_p1;
wire   [53:0] zext_ln624_1_fu_1600_p1;
wire   [53:0] Range2_V_4_fu_1604_p2;
wire   [53:0] r_V_371_fu_1609_p2;
wire   [0:0] tmp_316_fu_1621_p3;
wire   [0:0] icmp_ln620_4_fu_1590_p2;
wire   [0:0] Range2_all_ones_5_fu_1615_p2;
wire   [0:0] Range2_all_ones_6_fu_1629_p2;
wire   [0:0] Range2_all_ones_7_fu_1635_p3;
wire   [0:0] Range1_all_ones_13_fu_1579_p2;
wire   [0:0] icmp_ln630_1_fu_1655_p2;
wire   [0:0] Range1_all_zeros_4_fu_1649_p2;
wire   [0:0] icmp_ln631_1_fu_1667_p2;
wire   [0:0] Range1_all_ones_12_fu_1569_p2;
wire   [0:0] icmp_ln610_3_fu_1564_p2;
wire   [0:0] select_ln631_3_fu_1673_p3;
wire   [0:0] xor_ln610_2_fu_1689_p2;
wire   [0:0] icmp_ln620_3_fu_1584_p2;
wire   [0:0] and_ln628_3_fu_1701_p2;
wire   [0:0] and_ln628_4_fu_1707_p2;
wire   [0:0] and_ln630_1_fu_1661_p2;
wire   [0:0] or_ln610_5_fu_1695_p2;
wire   [0:0] select_ln631_4_fu_1681_p3;
wire   [0:0] Range1_all_ones_5_fu_1643_p2;
wire   [0:0] or_ln610_6_fu_1721_p2;
wire   [0:0] p_Result_226_fu_1556_p3;
wire   [0:0] deleted_zeros_1_fu_1713_p3;
wire   [0:0] xor_ln647_3_fu_1741_p2;
wire   [0:0] or_ln647_1_fu_1747_p2;
wire   [0:0] xor_ln647_4_fu_1753_p2;
wire   [0:0] deleted_ones_1_fu_1727_p3;
wire   [0:0] and_ln648_3_fu_1764_p2;
wire   [0:0] or_ln610_7_fu_1735_p2;
wire   [0:0] xor_ln648_1_fu_1770_p2;
wire   [0:0] underflow_93_fu_1776_p2;
wire   [63:0] ireg_1_fu_1787_p1;
wire   [10:0] exp_tmp_2_fu_1803_p4;
wire   [51:0] trunc_ln554_2_fu_1817_p1;
wire   [52:0] p_Result_227_fu_1821_p3;
wire   [53:0] zext_ln558_2_fu_1829_p1;
wire   [53:0] man_V_8_fu_1833_p2;
wire   [62:0] trunc_ln544_2_fu_1791_p1;
wire   [11:0] zext_ln455_2_fu_1813_p1;
wire   [11:0] add_ln570_2_fu_1865_p2;
wire   [11:0] sub_ln570_2_fu_1871_p2;
wire   [7:0] tmp_320_fu_1899_p4;
wire   [11:0] add_ln601_2_fu_1915_p2;
wire   [7:0] tmp_321_fu_1921_p4;
wire  signed [31:0] sext_ln607_2_fu_1943_p1;
wire   [63:0] ireg_2_fu_1963_p1;
wire   [10:0] exp_tmp_3_fu_1979_p4;
wire   [51:0] trunc_ln554_3_fu_1993_p1;
wire   [52:0] p_Result_229_fu_1997_p3;
wire   [53:0] zext_ln558_3_fu_2005_p1;
wire   [53:0] man_V_11_fu_2009_p2;
wire   [62:0] trunc_ln544_3_fu_1967_p1;
wire   [11:0] zext_ln455_3_fu_1989_p1;
wire   [11:0] add_ln570_3_fu_2041_p2;
wire   [11:0] sub_ln570_3_fu_2047_p2;
wire   [7:0] tmp_328_fu_2075_p4;
wire   [11:0] add_ln601_3_fu_2091_p2;
wire   [7:0] tmp_329_fu_2097_p4;
wire  signed [31:0] sext_ln607_3_fu_2119_p1;
wire   [0:0] xor_ln560_fu_2150_p2;
wire   [0:0] and_ln302_fu_2155_p2;
wire   [0:0] and_ln302_2_fu_2160_p2;
wire   [31:0] select_ln346_1_fu_2143_p3;
wire   [31:0] select_ln302_fu_2165_p3;
wire   [0:0] xor_ln560_1_fu_2191_p2;
wire   [0:0] and_ln302_3_fu_2196_p2;
wire   [0:0] and_ln302_4_fu_2201_p2;
wire   [31:0] select_ln346_5_fu_2184_p3;
wire   [31:0] select_ln302_1_fu_2206_p3;
wire  signed [31:0] sext_ln570_2_fu_2221_p1;
wire   [53:0] zext_ln575_2_fu_2239_p1;
wire   [53:0] ashr_ln575_2_fu_2243_p2;
wire   [31:0] bitcast_ln724_4_fu_2252_p1;
wire   [0:0] tmp_319_fu_2255_p3;
wire   [0:0] icmp_ln571_2_fu_2224_p2;
wire   [0:0] xor_ln571_2_fu_2283_p2;
wire   [0:0] and_ln570_2_fu_2289_p2;
wire   [0:0] icmp_ln574_2_fu_2229_p2;
wire   [0:0] and_ln574_5_fu_2294_p2;
wire   [31:0] trunc_ln575_2_fu_2248_p1;
wire   [31:0] select_ln571_2_fu_2276_p3;
wire   [0:0] xor_ln574_2_fu_2308_p2;
wire   [0:0] and_ln574_6_fu_2314_p2;
wire   [31:0] select_ln577_2_fu_2263_p3;
wire   [31:0] select_ln574_5_fu_2300_p3;
wire   [0:0] icmp_ln592_2_fu_2234_p2;
wire   [0:0] and_ln592_2_fu_2328_p2;
wire   [31:0] shl_ln593_2_fu_2271_p2;
wire   [31:0] select_ln574_6_fu_2320_p3;
wire   [0:0] icmp_ln610_6_fu_2364_p2;
wire  signed [11:0] pos2_2_fu_2341_p2;
wire  signed [31:0] sext_ln624_2_fu_2386_p1;
wire   [53:0] zext_ln624_2_fu_2390_p1;
wire   [53:0] Range2_V_6_fu_2394_p2;
wire   [53:0] r_V_372_fu_2399_p2;
wire   [0:0] tmp_324_fu_2411_p3;
wire   [0:0] icmp_ln620_6_fu_2380_p2;
wire   [0:0] Range2_all_ones_8_fu_2405_p2;
wire   [0:0] Range2_all_ones_9_fu_2419_p2;
wire   [0:0] Range2_all_ones_10_fu_2425_p3;
wire   [0:0] Range1_all_ones_15_fu_2369_p2;
wire   [0:0] icmp_ln630_2_fu_2445_p2;
wire   [0:0] Range1_all_zeros_6_fu_2439_p2;
wire   [0:0] icmp_ln631_2_fu_2457_p2;
wire   [0:0] Range1_all_ones_14_fu_2359_p2;
wire   [0:0] icmp_ln610_5_fu_2354_p2;
wire   [0:0] select_ln631_5_fu_2463_p3;
wire   [0:0] xor_ln610_4_fu_2479_p2;
wire   [0:0] icmp_ln620_5_fu_2374_p2;
wire   [0:0] and_ln628_5_fu_2491_p2;
wire   [0:0] and_ln628_6_fu_2497_p2;
wire   [0:0] and_ln630_2_fu_2451_p2;
wire   [0:0] or_ln610_8_fu_2485_p2;
wire   [0:0] select_ln631_6_fu_2471_p3;
wire   [0:0] Range1_all_ones_8_fu_2433_p2;
wire   [0:0] or_ln610_9_fu_2511_p2;
wire   [0:0] p_Result_228_fu_2346_p3;
wire   [0:0] deleted_zeros_2_fu_2503_p3;
wire   [0:0] xor_ln647_5_fu_2531_p2;
wire   [0:0] or_ln647_2_fu_2537_p2;
wire   [0:0] xor_ln647_6_fu_2543_p2;
wire   [0:0] deleted_ones_2_fu_2517_p3;
wire   [0:0] and_ln648_5_fu_2554_p2;
wire   [0:0] or_ln610_10_fu_2525_p2;
wire   [0:0] xor_ln648_2_fu_2560_p2;
wire   [0:0] underflow_94_fu_2566_p2;
wire  signed [31:0] sext_ln570_3_fu_2577_p1;
wire   [53:0] zext_ln575_3_fu_2595_p1;
wire   [53:0] ashr_ln575_3_fu_2599_p2;
wire   [31:0] bitcast_ln724_6_fu_2608_p1;
wire   [0:0] tmp_327_fu_2611_p3;
wire   [0:0] icmp_ln571_3_fu_2580_p2;
wire   [0:0] xor_ln571_3_fu_2639_p2;
wire   [0:0] and_ln570_3_fu_2645_p2;
wire   [0:0] icmp_ln574_3_fu_2585_p2;
wire   [0:0] and_ln574_7_fu_2650_p2;
wire   [31:0] trunc_ln575_3_fu_2604_p1;
wire   [31:0] select_ln571_3_fu_2632_p3;
wire   [0:0] xor_ln574_3_fu_2664_p2;
wire   [0:0] and_ln574_8_fu_2670_p2;
wire   [31:0] select_ln577_3_fu_2619_p3;
wire   [31:0] select_ln574_7_fu_2656_p3;
wire   [0:0] icmp_ln592_3_fu_2590_p2;
wire   [0:0] and_ln592_3_fu_2684_p2;
wire   [31:0] shl_ln593_3_fu_2627_p2;
wire   [31:0] select_ln574_8_fu_2676_p3;
wire   [0:0] icmp_ln610_8_fu_2720_p2;
wire  signed [11:0] pos2_3_fu_2697_p2;
wire  signed [31:0] sext_ln624_3_fu_2742_p1;
wire   [53:0] zext_ln624_3_fu_2746_p1;
wire   [53:0] Range2_V_8_fu_2750_p2;
wire   [53:0] r_V_373_fu_2755_p2;
wire   [0:0] tmp_332_fu_2767_p3;
wire   [0:0] icmp_ln620_8_fu_2736_p2;
wire   [0:0] Range2_all_ones_11_fu_2761_p2;
wire   [0:0] Range2_all_ones_12_fu_2775_p2;
wire   [0:0] Range2_all_ones_13_fu_2781_p3;
wire   [0:0] Range1_all_ones_17_fu_2725_p2;
wire   [0:0] icmp_ln630_3_fu_2801_p2;
wire   [0:0] Range1_all_zeros_8_fu_2795_p2;
wire   [0:0] icmp_ln631_3_fu_2813_p2;
wire   [0:0] Range1_all_ones_16_fu_2715_p2;
wire   [0:0] icmp_ln610_7_fu_2710_p2;
wire   [0:0] select_ln631_7_fu_2819_p3;
wire   [0:0] xor_ln610_6_fu_2835_p2;
wire   [0:0] icmp_ln620_7_fu_2730_p2;
wire   [0:0] and_ln628_7_fu_2847_p2;
wire   [0:0] and_ln628_8_fu_2853_p2;
wire   [0:0] and_ln630_3_fu_2807_p2;
wire   [0:0] or_ln610_11_fu_2841_p2;
wire   [0:0] select_ln631_8_fu_2827_p3;
wire   [0:0] Range1_all_ones_11_fu_2789_p2;
wire   [0:0] or_ln610_12_fu_2867_p2;
wire   [0:0] p_Result_230_fu_2702_p3;
wire   [0:0] deleted_zeros_3_fu_2859_p3;
wire   [0:0] xor_ln647_7_fu_2887_p2;
wire   [0:0] or_ln647_3_fu_2893_p2;
wire   [0:0] xor_ln647_8_fu_2899_p2;
wire   [0:0] deleted_ones_3_fu_2873_p3;
wire   [0:0] and_ln648_7_fu_2910_p2;
wire   [0:0] or_ln610_13_fu_2881_p2;
wire   [0:0] xor_ln648_3_fu_2916_p2;
wire   [0:0] underflow_95_fu_2922_p2;
wire   [5:0] or_ln24_1_fu_2933_p2;
wire   [0:0] xor_ln560_2_fu_2950_p2;
wire   [0:0] and_ln302_5_fu_2955_p2;
wire   [0:0] and_ln302_6_fu_2960_p2;
wire   [31:0] select_ln346_12_fu_2943_p3;
wire   [31:0] select_ln302_2_fu_2965_p3;
wire   [5:0] or_ln24_2_fu_2980_p2;
wire   [0:0] xor_ln560_3_fu_2997_p2;
wire   [0:0] and_ln302_7_fu_3002_p2;
wire   [0:0] and_ln302_8_fu_3007_p2;
wire   [31:0] select_ln346_14_fu_2990_p3;
wire   [31:0] select_ln302_3_fu_3012_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to2;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

latnrm_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_415_p0),
    .ce(1'b1),
    .dout(grp_fu_415_p1)
);

latnrm_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_418_p0),
    .ce(1'b1),
    .dout(grp_fu_418_p1)
);

latnrm_mux_336_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mux_336_32_1_1_U76(
    .din0(empty_48),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(empty_49),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(empty_50),
    .din9(32'd0),
    .din10(32'd0),
    .din11(32'd0),
    .din12(empty_51),
    .din13(32'd0),
    .din14(32'd0),
    .din15(32'd0),
    .din16(empty_52),
    .din17(32'd0),
    .din18(32'd0),
    .din19(32'd0),
    .din20(empty_53),
    .din21(32'd0),
    .din22(32'd0),
    .din23(32'd0),
    .din24(empty_54),
    .din25(32'd0),
    .din26(32'd0),
    .din27(32'd0),
    .din28(empty_55),
    .din29(32'd0),
    .din30(32'd0),
    .din31(32'd0),
    .din32(empty),
    .din33(ap_sig_allocacmp_j),
    .dout(d_assign_1_fu_435_p35)
);

latnrm_mux_296_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mux_296_32_1_1_U77(
    .din0(empty_24),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(empty_25),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(empty_26),
    .din9(32'd0),
    .din10(32'd0),
    .din11(32'd0),
    .din12(empty_27),
    .din13(32'd0),
    .din14(32'd0),
    .din15(32'd0),
    .din16(empty_28),
    .din17(32'd0),
    .din18(32'd0),
    .din19(32'd0),
    .din20(empty_29),
    .din21(32'd0),
    .din22(32'd0),
    .din23(32'd0),
    .din24(empty_30),
    .din25(32'd0),
    .din26(32'd0),
    .din27(32'd0),
    .din28(empty_31),
    .din29(ap_sig_allocacmp_j),
    .dout(d_assign_3_fu_520_p31)
);

latnrm_mux_296_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mux_296_32_1_1_U78(
    .din0(empty_32),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(empty_33),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(empty_34),
    .din9(32'd0),
    .din10(32'd0),
    .din11(32'd0),
    .din12(empty_35),
    .din13(32'd0),
    .din14(32'd0),
    .din15(32'd0),
    .din16(empty_36),
    .din17(32'd0),
    .din18(32'd0),
    .din19(32'd0),
    .din20(empty_37),
    .din21(32'd0),
    .din22(32'd0),
    .din23(32'd0),
    .din24(empty_38),
    .din25(32'd0),
    .din26(32'd0),
    .din27(32'd0),
    .din28(empty_39),
    .din29(ap_sig_allocacmp_j),
    .dout(d_assign_6_fu_585_p31)
);

latnrm_mux_296_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mux_296_32_1_1_U79(
    .din0(empty_40),
    .din1(32'd0),
    .din2(32'd0),
    .din3(32'd0),
    .din4(empty_41),
    .din5(32'd0),
    .din6(32'd0),
    .din7(32'd0),
    .din8(empty_42),
    .din9(32'd0),
    .din10(32'd0),
    .din11(32'd0),
    .din12(empty_43),
    .din13(32'd0),
    .din14(32'd0),
    .din15(32'd0),
    .din16(empty_44),
    .din17(32'd0),
    .din18(32'd0),
    .din19(32'd0),
    .din20(empty_45),
    .din21(32'd0),
    .din22(32'd0),
    .din23(32'd0),
    .din24(empty_46),
    .din25(32'd0),
    .din26(32'd0),
    .din27(32'd0),
    .din28(empty_47),
    .din29(ap_sig_allocacmp_j),
    .dout(d_assign_8_fu_649_p31)
);

latnrm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter1_stage1) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_1_fu_172 <= 6'd0;
    end else if (((icmp_ln24_reg_3042 == 1'd1) & (icmp_ln24_1_reg_3057 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_1_fu_172 <= add_ln24_fu_1065_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_3042 == 1'd1) & (icmp_ln24_1_reg_3057 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        F2_1_reg_3169 <= F2_1_fu_955_p2;
        icmp_ln560_1_reg_3163 <= icmp_ln560_1_fu_949_p2;
        icmp_ln570_2_reg_3175 <= icmp_ln570_2_fu_961_p2;
        icmp_ln570_3_reg_3197 <= icmp_ln570_3_fu_1011_p2;
        icmp_ln600_1_reg_3202 <= icmp_ln600_1_fu_1033_p2;
        lD_3_reg_3218 <= lD_3_fu_1057_p3;
        man_V_13_reg_3157 <= man_V_13_fu_941_p3;
        neg_src_reg_3151 <= ireg_fu_889_p1[32'd63];
        pos1_1_reg_3207 <= pos1_1_fu_1039_p2;
        sh_amt_1_reg_3180 <= sh_amt_1_fu_979_p3;
        tmp_310_reg_3192 <= {{sh_amt_1_fu_979_p3[11:5]}};
        tmp_315_reg_3213 <= pos1_1_fu_1039_p2[32'd11];
        trunc_ln572_1_reg_3186 <= trunc_ln572_1_fu_987_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_3042 == 1'd1) & (icmp_ln24_1_reg_3057 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        F2_2_reg_3271 <= F2_2_fu_1853_p2;
        F2_3_reg_3343 <= F2_3_fu_2029_p2;
        icmp_ln560_2_reg_3265 <= icmp_ln560_2_fu_1847_p2;
        icmp_ln560_3_reg_3337 <= icmp_ln560_3_fu_2023_p2;
        icmp_ln570_4_reg_3277 <= icmp_ln570_4_fu_1859_p2;
        icmp_ln570_5_reg_3299 <= icmp_ln570_5_fu_1909_p2;
        icmp_ln570_6_reg_3349 <= icmp_ln570_6_fu_2035_p2;
        icmp_ln570_7_reg_3371 <= icmp_ln570_7_fu_2085_p2;
        icmp_ln600_2_reg_3304 <= icmp_ln600_2_fu_1931_p2;
        icmp_ln600_3_reg_3376 <= icmp_ln600_3_fu_2107_p2;
        lD_5_reg_3320 <= lD_5_fu_1955_p3;
        lD_7_reg_3392 <= lD_7_fu_2131_p3;
        man_V_14_reg_3331 <= man_V_14_fu_2015_p3;
        man_V_reg_3259 <= man_V_fu_1839_p3;
        neg_src_93_reg_3253 <= ireg_1_fu_1787_p1[32'd63];
        neg_src_94_reg_3325 <= ireg_2_fu_1963_p1[32'd63];
        pos1_2_reg_3309 <= pos1_2_fu_1937_p2;
        pos1_3_reg_3381 <= pos1_3_fu_2113_p2;
        sh_amt_2_reg_3282 <= sh_amt_2_fu_1877_p3;
        sh_amt_3_reg_3354 <= sh_amt_3_fu_2053_p3;
        tmp_318_reg_3294 <= {{sh_amt_2_fu_1877_p3[11:5]}};
        tmp_323_reg_3315 <= pos1_2_fu_1937_p2[32'd11];
        tmp_326_reg_3366 <= {{sh_amt_3_fu_2053_p3[11:5]}};
        tmp_331_reg_3387 <= pos1_3_fu_2113_p2[32'd11];
        trunc_ln572_2_reg_3288 <= trunc_ln572_2_fu_1885_p1;
        trunc_ln572_3_reg_3360 <= trunc_ln572_3_fu_2061_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_3042 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        F2_reg_3097 <= F2_fu_779_p2;
        icmp_ln560_reg_3091 <= icmp_ln560_fu_773_p2;
        icmp_ln570_1_reg_3103 <= icmp_ln570_1_fu_785_p2;
        icmp_ln570_reg_3125 <= icmp_ln570_fu_835_p2;
        icmp_ln600_reg_3130 <= icmp_ln600_fu_857_p2;
        lD_reg_3146 <= lD_fu_881_p3;
        man_V_15_reg_3085 <= man_V_15_fu_765_p3;
        neg_src_95_reg_3079 <= ireg_3_fu_713_p1[32'd63];
        pos1_reg_3135 <= pos1_fu_863_p2;
        sh_amt_reg_3108 <= sh_amt_fu_803_p3;
        tmp_302_reg_3120 <= {{sh_amt_fu_803_p3[11:5]}};
        tmp_307_reg_3141 <= pos1_fu_863_p2[32'd11];
        trunc_ln572_reg_3114 <= trunc_ln572_fu_811_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_fu_429_p2 == 1'd1))) begin
        d_assign_1_reg_3046 <= d_assign_1_fu_435_p35;
        icmp_ln24_1_reg_3057 <= icmp_ln24_1_fu_514_p2;
        or_ln24_reg_3052[5 : 1] <= or_ln24_fu_508_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln24_1_fu_514_p2 == 1'd1) & (icmp_ln24_fu_429_p2 == 1'd1))) begin
        d_assign_3_reg_3061 <= d_assign_3_fu_520_p31;
        d_assign_6_reg_3067 <= d_assign_6_fu_585_p31;
        d_assign_8_reg_3073 <= d_assign_8_fu_649_p31;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_assign_6_reg_3067_pp0_iter1_reg <= d_assign_6_reg_3067;
        d_assign_8_reg_3073_pp0_iter1_reg <= d_assign_8_reg_3073;
        icmp_ln24_1_reg_3057_pp0_iter1_reg <= icmp_ln24_1_reg_3057;
        icmp_ln24_reg_3042 <= icmp_ln24_fu_429_p2;
        icmp_ln24_reg_3042_pp0_iter1_reg <= icmp_ln24_reg_3042;
        j_reg_3034 <= ap_sig_allocacmp_j;
        j_reg_3034_pp0_iter1_reg <= j_reg_3034;
        or_ln24_reg_3052_pp0_iter1_reg[5 : 1] <= or_ln24_reg_3052[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_3042 == 1'd1) & (icmp_ln24_1_reg_3057 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln560_1_reg_3163 == 1'd0))) begin
        or_ln302_1_reg_3248 <= or_ln302_1_fu_1781_p2;
        overflow_93_reg_3243 <= overflow_93_fu_1758_p2;
        p_Val2_201_reg_3238 <= p_Val2_201_fu_1543_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln560_2_reg_3265 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_1_reg_3057_pp0_iter1_reg == 1'd1) & (icmp_ln24_reg_3042_pp0_iter1_reg == 1'd1))) begin
        or_ln302_2_reg_3407 <= or_ln302_2_fu_2571_p2;
        overflow_94_reg_3402 <= overflow_94_fu_2548_p2;
        p_Val2_203_reg_3397 <= p_Val2_203_fu_2333_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln560_3_reg_3337 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_1_reg_3057_pp0_iter1_reg == 1'd1) & (icmp_ln24_reg_3042_pp0_iter1_reg == 1'd1))) begin
        or_ln302_3_reg_3422 <= or_ln302_3_fu_2927_p2;
        overflow_95_reg_3417 <= overflow_95_fu_2904_p2;
        p_Val2_205_reg_3412 <= p_Val2_205_fu_2689_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_3042 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln560_reg_3091 == 1'd0))) begin
        or_ln302_reg_3233 <= or_ln302_fu_1425_p2;
        overflow_reg_3228 <= overflow_fu_1402_p2;
        p_Val2_199_reg_3223 <= p_Val2_199_fu_1187_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & ((icmp_ln24_reg_3042 == 1'd0) | (icmp_ln24_1_reg_3057 == 1'd0)))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & ((icmp_ln24_1_reg_3057_pp0_iter1_reg == 1'd0) | (icmp_ln24_reg_3042_pp0_iter1_reg == 1'd0)))) begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j = 6'd0;
    end else begin
        ap_sig_allocacmp_j = j_1_fu_172;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_415_p0 = d_assign_6_reg_3067;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_415_p0 = d_assign_1_fu_435_p35;
        end else begin
            grp_fu_415_p0 = 'bx;
        end
    end else begin
        grp_fu_415_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_418_p0 = d_assign_8_reg_3073;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_418_p0 = d_assign_3_fu_520_p31;
        end else begin
            grp_fu_418_p0 = 'bx;
        end
    end else begin
        grp_fu_418_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        int_state_V_address0 = zext_ln26_1_fu_2985_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        int_state_V_address0 = zext_ln24_fu_2180_p1;
    end else begin
        int_state_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        int_state_V_address1 = zext_ln26_fu_2938_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        int_state_V_address1 = trunc_ln26_cast_fu_2139_p1;
    end else begin
        int_state_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        int_state_V_ce0 = 1'b1;
    end else begin
        int_state_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        int_state_V_ce1 = 1'b1;
    end else begin
        int_state_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        int_state_V_d0 = select_ln560_3_fu_3019_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        int_state_V_d0 = select_ln560_1_fu_2213_p3;
    end else begin
        int_state_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        int_state_V_d1 = select_ln560_2_fu_2972_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        int_state_V_d1 = select_ln560_fu_2172_p3;
    end else begin
        int_state_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_1_reg_3057_pp0_iter1_reg == 1'd1) & (icmp_ln24_reg_3042_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        int_state_V_we0 = 1'b1;
    end else begin
        int_state_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln24_reg_3042_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        int_state_V_we1 = 1'b1;
    end else begin
        int_state_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_955_p2 = (12'd1075 - zext_ln455_1_fu_915_p1);

assign F2_2_fu_1853_p2 = (12'd1075 - zext_ln455_2_fu_1813_p1);

assign F2_3_fu_2029_p2 = (12'd1075 - zext_ln455_3_fu_1989_p1);

assign F2_fu_779_p2 = (12'd1075 - zext_ln455_fu_739_p1);

assign Range1_all_ones_11_fu_2789_p2 = (Range2_all_ones_13_fu_2781_p3 & Range1_all_ones_17_fu_2725_p2);

assign Range1_all_ones_12_fu_1569_p2 = (tmp_315_reg_3213 ^ 1'd1);

assign Range1_all_ones_13_fu_1579_p2 = (lD_3_reg_3218 & icmp_ln610_4_fu_1574_p2);

assign Range1_all_ones_14_fu_2359_p2 = (tmp_323_reg_3315 ^ 1'd1);

assign Range1_all_ones_15_fu_2369_p2 = (lD_5_reg_3320 & icmp_ln610_6_fu_2364_p2);

assign Range1_all_ones_16_fu_2715_p2 = (tmp_331_reg_3387 ^ 1'd1);

assign Range1_all_ones_17_fu_2725_p2 = (lD_7_reg_3392 & icmp_ln610_8_fu_2720_p2);

assign Range1_all_ones_18_fu_1213_p2 = (tmp_307_reg_3141 ^ 1'd1);

assign Range1_all_ones_19_fu_1223_p2 = (lD_reg_3146 & icmp_ln610_2_fu_1218_p2);

assign Range1_all_ones_5_fu_1643_p2 = (Range2_all_ones_7_fu_1635_p3 & Range1_all_ones_13_fu_1579_p2);

assign Range1_all_ones_8_fu_2433_p2 = (Range2_all_ones_10_fu_2425_p3 & Range1_all_ones_15_fu_2369_p2);

assign Range1_all_ones_fu_1287_p2 = (Range2_all_ones_4_fu_1279_p3 & Range1_all_ones_19_fu_1223_p2);

assign Range1_all_zeros_2_fu_1293_p2 = (1'd1 ^ Range1_all_ones_19_fu_1223_p2);

assign Range1_all_zeros_4_fu_1649_p2 = (1'd1 ^ Range1_all_ones_13_fu_1579_p2);

assign Range1_all_zeros_6_fu_2439_p2 = (1'd1 ^ Range1_all_ones_15_fu_2369_p2);

assign Range1_all_zeros_8_fu_2795_p2 = (1'd1 ^ Range1_all_ones_17_fu_2725_p2);

assign Range2_V_2_fu_1248_p2 = man_V_15_reg_3085 >> zext_ln624_fu_1244_p1;

assign Range2_V_4_fu_1604_p2 = man_V_13_reg_3157 >> zext_ln624_1_fu_1600_p1;

assign Range2_V_6_fu_2394_p2 = man_V_reg_3259 >> zext_ln624_2_fu_2390_p1;

assign Range2_V_8_fu_2750_p2 = man_V_14_reg_3331 >> zext_ln624_3_fu_2746_p1;

assign Range2_all_ones_10_fu_2425_p3 = ((icmp_ln620_6_fu_2380_p2[0:0] == 1'b1) ? Range2_all_ones_8_fu_2405_p2 : Range2_all_ones_9_fu_2419_p2);

assign Range2_all_ones_11_fu_2761_p2 = ((Range2_V_8_fu_2750_p2 == r_V_373_fu_2755_p2) ? 1'b1 : 1'b0);

assign Range2_all_ones_12_fu_2775_p2 = (tmp_332_fu_2767_p3 ^ 1'd1);

assign Range2_all_ones_13_fu_2781_p3 = ((icmp_ln620_8_fu_2736_p2[0:0] == 1'b1) ? Range2_all_ones_11_fu_2761_p2 : Range2_all_ones_12_fu_2775_p2);

assign Range2_all_ones_3_fu_1273_p2 = (tmp_308_fu_1265_p3 ^ 1'd1);

assign Range2_all_ones_4_fu_1279_p3 = ((icmp_ln620_2_fu_1234_p2[0:0] == 1'b1) ? Range2_all_ones_fu_1259_p2 : Range2_all_ones_3_fu_1273_p2);

assign Range2_all_ones_5_fu_1615_p2 = ((Range2_V_4_fu_1604_p2 == r_V_371_fu_1609_p2) ? 1'b1 : 1'b0);

assign Range2_all_ones_6_fu_1629_p2 = (tmp_316_fu_1621_p3 ^ 1'd1);

assign Range2_all_ones_7_fu_1635_p3 = ((icmp_ln620_4_fu_1590_p2[0:0] == 1'b1) ? Range2_all_ones_5_fu_1615_p2 : Range2_all_ones_6_fu_1629_p2);

assign Range2_all_ones_8_fu_2405_p2 = ((Range2_V_6_fu_2394_p2 == r_V_372_fu_2399_p2) ? 1'b1 : 1'b0);

assign Range2_all_ones_9_fu_2419_p2 = (tmp_324_fu_2411_p3 ^ 1'd1);

assign Range2_all_ones_fu_1259_p2 = ((Range2_V_2_fu_1248_p2 == r_V_fu_1253_p2) ? 1'b1 : 1'b0);

assign add_ln24_fu_1065_p2 = (j_reg_3034 + 6'd4);

assign add_ln570_1_fu_967_p2 = ($signed(F2_1_fu_955_p2) + $signed(12'd4080));

assign add_ln570_2_fu_1865_p2 = ($signed(F2_2_fu_1853_p2) + $signed(12'd4080));

assign add_ln570_3_fu_2041_p2 = ($signed(F2_3_fu_2029_p2) + $signed(12'd4080));

assign add_ln570_fu_791_p2 = ($signed(F2_fu_779_p2) + $signed(12'd4080));

assign add_ln601_1_fu_1017_p2 = ($signed(zext_ln455_1_fu_915_p1) + $signed(12'd3074));

assign add_ln601_2_fu_1915_p2 = ($signed(zext_ln455_2_fu_1813_p1) + $signed(12'd3074));

assign add_ln601_3_fu_2091_p2 = ($signed(zext_ln455_3_fu_1989_p1) + $signed(12'd3074));

assign add_ln601_fu_841_p2 = ($signed(zext_ln455_fu_739_p1) + $signed(12'd3074));

assign and_ln302_2_fu_2160_p2 = (icmp_ln600_reg_3130 & and_ln302_fu_2155_p2);

assign and_ln302_3_fu_2196_p2 = (xor_ln560_1_fu_2191_p2 & or_ln302_1_reg_3248);

assign and_ln302_4_fu_2201_p2 = (icmp_ln600_1_reg_3202 & and_ln302_3_fu_2196_p2);

assign and_ln302_5_fu_2955_p2 = (xor_ln560_2_fu_2950_p2 & or_ln302_2_reg_3407);

assign and_ln302_6_fu_2960_p2 = (icmp_ln600_2_reg_3304 & and_ln302_5_fu_2955_p2);

assign and_ln302_7_fu_3002_p2 = (xor_ln560_3_fu_2997_p2 & or_ln302_3_reg_3422);

assign and_ln302_8_fu_3007_p2 = (icmp_ln600_3_reg_3376 & and_ln302_7_fu_3002_p2);

assign and_ln302_fu_2155_p2 = (xor_ln560_fu_2150_p2 & or_ln302_reg_3233);

assign and_ln570_1_fu_1499_p2 = (xor_ln571_1_fu_1493_p2 & icmp_ln570_2_reg_3175);

assign and_ln570_2_fu_2289_p2 = (xor_ln571_2_fu_2283_p2 & icmp_ln570_4_reg_3277);

assign and_ln570_3_fu_2645_p2 = (xor_ln571_3_fu_2639_p2 & icmp_ln570_6_reg_3349);

assign and_ln570_fu_1143_p2 = (xor_ln571_fu_1137_p2 & icmp_ln570_1_reg_3103);

assign and_ln574_2_fu_1168_p2 = (xor_ln574_fu_1162_p2 & and_ln570_fu_1143_p2);

assign and_ln574_3_fu_1504_p2 = (icmp_ln574_1_fu_1439_p2 & and_ln570_1_fu_1499_p2);

assign and_ln574_4_fu_1524_p2 = (xor_ln574_1_fu_1518_p2 & and_ln570_1_fu_1499_p2);

assign and_ln574_5_fu_2294_p2 = (icmp_ln574_2_fu_2229_p2 & and_ln570_2_fu_2289_p2);

assign and_ln574_6_fu_2314_p2 = (xor_ln574_2_fu_2308_p2 & and_ln570_2_fu_2289_p2);

assign and_ln574_7_fu_2650_p2 = (icmp_ln574_3_fu_2585_p2 & and_ln570_3_fu_2645_p2);

assign and_ln574_8_fu_2670_p2 = (xor_ln574_3_fu_2664_p2 & and_ln570_3_fu_2645_p2);

assign and_ln574_fu_1148_p2 = (icmp_ln574_fu_1083_p2 & and_ln570_fu_1143_p2);

assign and_ln592_1_fu_1538_p2 = (icmp_ln592_1_fu_1444_p2 & icmp_ln570_3_reg_3197);

assign and_ln592_2_fu_2328_p2 = (icmp_ln592_2_fu_2234_p2 & icmp_ln570_5_reg_3299);

assign and_ln592_3_fu_2684_p2 = (icmp_ln592_3_fu_2590_p2 & icmp_ln570_7_reg_3371);

assign and_ln592_fu_1182_p2 = (icmp_ln592_fu_1088_p2 & icmp_ln570_reg_3125);

assign and_ln628_2_fu_1351_p2 = (and_ln628_fu_1345_p2 & Range1_all_ones_18_fu_1213_p2);

assign and_ln628_3_fu_1701_p2 = (icmp_ln620_3_fu_1584_p2 & icmp_ln610_3_fu_1564_p2);

assign and_ln628_4_fu_1707_p2 = (and_ln628_3_fu_1701_p2 & Range1_all_ones_12_fu_1569_p2);

assign and_ln628_5_fu_2491_p2 = (icmp_ln620_5_fu_2374_p2 & icmp_ln610_5_fu_2354_p2);

assign and_ln628_6_fu_2497_p2 = (and_ln628_5_fu_2491_p2 & Range1_all_ones_14_fu_2359_p2);

assign and_ln628_7_fu_2847_p2 = (icmp_ln620_7_fu_2730_p2 & icmp_ln610_7_fu_2710_p2);

assign and_ln628_8_fu_2853_p2 = (and_ln628_7_fu_2847_p2 & Range1_all_ones_16_fu_2715_p2);

assign and_ln628_fu_1345_p2 = (icmp_ln620_fu_1228_p2 & icmp_ln610_fu_1208_p2);

assign and_ln630_1_fu_1661_p2 = (icmp_ln630_1_fu_1655_p2 & Range1_all_zeros_4_fu_1649_p2);

assign and_ln630_2_fu_2451_p2 = (icmp_ln630_2_fu_2445_p2 & Range1_all_zeros_6_fu_2439_p2);

assign and_ln630_3_fu_2807_p2 = (icmp_ln630_3_fu_2801_p2 & Range1_all_zeros_8_fu_2795_p2);

assign and_ln630_fu_1305_p2 = (icmp_ln630_fu_1299_p2 & Range1_all_zeros_2_fu_1293_p2);

assign and_ln648_3_fu_1764_p2 = (p_Result_226_fu_1556_p3 & deleted_ones_1_fu_1727_p3);

assign and_ln648_5_fu_2554_p2 = (p_Result_228_fu_2346_p3 & deleted_ones_2_fu_2517_p3);

assign and_ln648_7_fu_2910_p2 = (p_Result_230_fu_2702_p3 & deleted_ones_3_fu_2873_p3);

assign and_ln648_fu_1408_p2 = (p_Result_232_fu_1200_p3 & deleted_ones_fu_1371_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ashr_ln575_1_fu_1453_p2 = $signed(man_V_13_reg_3157) >>> zext_ln575_1_fu_1449_p1;

assign ashr_ln575_2_fu_2243_p2 = $signed(man_V_reg_3259) >>> zext_ln575_2_fu_2239_p1;

assign ashr_ln575_3_fu_2599_p2 = $signed(man_V_14_reg_3331) >>> zext_ln575_3_fu_2595_p1;

assign ashr_ln575_fu_1097_p2 = $signed(man_V_15_reg_3085) >>> zext_ln575_fu_1093_p1;

assign bitcast_ln724_2_fu_1462_p1 = d_assign_3_reg_3061;

assign bitcast_ln724_4_fu_2252_p1 = d_assign_6_reg_3067_pp0_iter1_reg;

assign bitcast_ln724_6_fu_2608_p1 = d_assign_8_reg_3073_pp0_iter1_reg;

assign bitcast_ln724_fu_1106_p1 = d_assign_1_reg_3046;

assign deleted_ones_1_fu_1727_p3 = ((and_ln628_4_fu_1707_p2[0:0] == 1'b1) ? Range1_all_ones_5_fu_1643_p2 : or_ln610_6_fu_1721_p2);

assign deleted_ones_2_fu_2517_p3 = ((and_ln628_6_fu_2497_p2[0:0] == 1'b1) ? Range1_all_ones_8_fu_2433_p2 : or_ln610_9_fu_2511_p2);

assign deleted_ones_3_fu_2873_p3 = ((and_ln628_8_fu_2853_p2[0:0] == 1'b1) ? Range1_all_ones_11_fu_2789_p2 : or_ln610_12_fu_2867_p2);

assign deleted_ones_fu_1371_p3 = ((and_ln628_2_fu_1351_p2[0:0] == 1'b1) ? Range1_all_ones_fu_1287_p2 : or_ln610_3_fu_1365_p2);

assign deleted_zeros_1_fu_1713_p3 = ((and_ln628_4_fu_1707_p2[0:0] == 1'b1) ? and_ln630_1_fu_1661_p2 : or_ln610_5_fu_1695_p2);

assign deleted_zeros_2_fu_2503_p3 = ((and_ln628_6_fu_2497_p2[0:0] == 1'b1) ? and_ln630_2_fu_2451_p2 : or_ln610_8_fu_2485_p2);

assign deleted_zeros_3_fu_2859_p3 = ((and_ln628_8_fu_2853_p2[0:0] == 1'b1) ? and_ln630_3_fu_2807_p2 : or_ln610_11_fu_2841_p2);

assign deleted_zeros_fu_1357_p3 = ((and_ln628_2_fu_1351_p2[0:0] == 1'b1) ? and_ln630_fu_1305_p2 : or_ln610_fu_1339_p2);

assign exp_tmp_1_fu_905_p4 = {{ireg_fu_889_p1[62:52]}};

assign exp_tmp_2_fu_1803_p4 = {{ireg_1_fu_1787_p1[62:52]}};

assign exp_tmp_3_fu_1979_p4 = {{ireg_2_fu_1963_p1[62:52]}};

assign exp_tmp_fu_729_p4 = {{ireg_3_fu_713_p1[62:52]}};

assign icmp_ln24_1_fu_514_p2 = ((or_ln24_fu_508_p2 < 6'd33) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_429_p2 = ((ap_sig_allocacmp_j < 6'd33) ? 1'b1 : 1'b0);

assign icmp_ln560_1_fu_949_p2 = ((trunc_ln544_1_fu_893_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_2_fu_1847_p2 = ((trunc_ln544_2_fu_1791_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_3_fu_2023_p2 = ((trunc_ln544_3_fu_1967_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_fu_773_p2 = ((trunc_ln544_fu_717_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln570_1_fu_785_p2 = (($signed(F2_fu_779_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln570_2_fu_961_p2 = (($signed(F2_1_fu_955_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln570_3_fu_1011_p2 = (($signed(tmp_312_fu_1001_p4) < $signed(8'd1)) ? 1'b1 : 1'b0);

assign icmp_ln570_4_fu_1859_p2 = (($signed(F2_2_fu_1853_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln570_5_fu_1909_p2 = (($signed(tmp_320_fu_1899_p4) < $signed(8'd1)) ? 1'b1 : 1'b0);

assign icmp_ln570_6_fu_2035_p2 = (($signed(F2_3_fu_2029_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln570_7_fu_2085_p2 = (($signed(tmp_328_fu_2075_p4) < $signed(8'd1)) ? 1'b1 : 1'b0);

assign icmp_ln570_fu_835_p2 = (($signed(tmp_304_fu_825_p4) < $signed(8'd1)) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_1434_p2 = ((F2_1_reg_3169 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln571_2_fu_2224_p2 = ((F2_2_reg_3271 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln571_3_fu_2580_p2 = ((F2_3_reg_3343 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1078_p2 = ((F2_reg_3097 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln574_1_fu_1439_p2 = ((sh_amt_1_reg_3180 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_2_fu_2229_p2 = ((sh_amt_2_reg_3282 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_3_fu_2585_p2 = ((sh_amt_3_reg_3354 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_1083_p2 = ((sh_amt_reg_3108 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln592_1_fu_1444_p2 = ((tmp_310_reg_3192 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln592_2_fu_2234_p2 = ((tmp_318_reg_3294 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln592_3_fu_2590_p2 = ((tmp_326_reg_3366 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln592_fu_1088_p2 = ((tmp_302_reg_3120 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln600_1_fu_1033_p2 = (($signed(tmp_313_fu_1023_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln600_2_fu_1931_p2 = (($signed(tmp_321_fu_1921_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln600_3_fu_2107_p2 = (($signed(tmp_329_fu_2097_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln600_fu_857_p2 = (($signed(tmp_305_fu_847_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp_ln610_2_fu_1218_p2 = ((pos1_reg_3135 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln610_3_fu_1564_p2 = (($signed(pos1_1_reg_3207) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln610_4_fu_1574_p2 = ((pos1_1_reg_3207 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln610_5_fu_2354_p2 = (($signed(pos1_2_reg_3309) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln610_6_fu_2364_p2 = ((pos1_2_reg_3309 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln610_7_fu_2710_p2 = (($signed(pos1_3_reg_3381) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln610_8_fu_2720_p2 = ((pos1_3_reg_3381 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln610_fu_1208_p2 = (($signed(pos1_reg_3135) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln620_2_fu_1234_p2 = ((pos2_fu_1195_p2 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln620_3_fu_1584_p2 = (($signed(pos2_1_fu_1551_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln620_4_fu_1590_p2 = ((pos2_1_fu_1551_p2 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln620_5_fu_2374_p2 = (($signed(pos2_2_fu_2341_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln620_6_fu_2380_p2 = ((pos2_2_fu_2341_p2 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln620_7_fu_2730_p2 = (($signed(pos2_3_fu_2697_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln620_8_fu_2736_p2 = ((pos2_3_fu_2697_p2 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln620_fu_1228_p2 = (($signed(pos2_fu_1195_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln630_1_fu_1655_p2 = ((Range2_V_4_fu_1604_p2 == 54'd0) ? 1'b1 : 1'b0);

assign icmp_ln630_2_fu_2445_p2 = ((Range2_V_6_fu_2394_p2 == 54'd0) ? 1'b1 : 1'b0);

assign icmp_ln630_3_fu_2801_p2 = ((Range2_V_8_fu_2750_p2 == 54'd0) ? 1'b1 : 1'b0);

assign icmp_ln630_fu_1299_p2 = ((Range2_V_2_fu_1248_p2 == 54'd0) ? 1'b1 : 1'b0);

assign icmp_ln631_1_fu_1667_p2 = ((pos2_1_fu_1551_p2 == 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln631_2_fu_2457_p2 = ((pos2_2_fu_2341_p2 == 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln631_3_fu_2813_p2 = ((pos2_3_fu_2697_p2 == 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln631_fu_1311_p2 = ((pos2_fu_1195_p2 == 12'd54) ? 1'b1 : 1'b0);

assign ireg_1_fu_1787_p1 = grp_fu_415_p1;

assign ireg_2_fu_1963_p1 = grp_fu_418_p1;

assign ireg_3_fu_713_p1 = grp_fu_415_p1;

assign ireg_fu_889_p1 = grp_fu_418_p1;

assign lD_3_fu_1057_p3 = man_V_13_fu_941_p3[sext_ln607_1_fu_1045_p1];

assign lD_5_fu_1955_p3 = man_V_fu_1839_p3[sext_ln607_2_fu_1943_p1];

assign lD_7_fu_2131_p3 = man_V_14_fu_2015_p3[sext_ln607_3_fu_2119_p1];

assign lD_fu_881_p3 = man_V_15_fu_765_p3[sext_ln607_fu_869_p1];

assign man_V_11_fu_2009_p2 = (54'd0 - zext_ln558_3_fu_2005_p1);

assign man_V_13_fu_941_p3 = ((neg_src_fu_897_p3[0:0] == 1'b1) ? man_V_7_fu_935_p2 : zext_ln558_1_fu_931_p1);

assign man_V_14_fu_2015_p3 = ((neg_src_94_fu_1971_p3[0:0] == 1'b1) ? man_V_11_fu_2009_p2 : zext_ln558_3_fu_2005_p1);

assign man_V_15_fu_765_p3 = ((neg_src_95_fu_721_p3[0:0] == 1'b1) ? man_V_4_fu_759_p2 : zext_ln558_fu_755_p1);

assign man_V_4_fu_759_p2 = (54'd0 - zext_ln558_fu_755_p1);

assign man_V_7_fu_935_p2 = (54'd0 - zext_ln558_1_fu_931_p1);

assign man_V_8_fu_1833_p2 = (54'd0 - zext_ln558_2_fu_1829_p1);

assign man_V_fu_1839_p3 = ((neg_src_93_fu_1795_p3[0:0] == 1'b1) ? man_V_8_fu_1833_p2 : zext_ln558_2_fu_1829_p1);

assign neg_src_93_fu_1795_p3 = ireg_1_fu_1787_p1[32'd63];

assign neg_src_94_fu_1971_p3 = ireg_2_fu_1963_p1[32'd63];

assign neg_src_95_fu_721_p3 = ireg_3_fu_713_p1[32'd63];

assign neg_src_fu_897_p3 = ireg_fu_889_p1[32'd63];

assign or_ln24_1_fu_2933_p2 = (j_reg_3034_pp0_iter1_reg | 6'd2);

assign or_ln24_2_fu_2980_p2 = (j_reg_3034_pp0_iter1_reg | 6'd3);

assign or_ln24_fu_508_p2 = (ap_sig_allocacmp_j | 6'd1);

assign or_ln302_1_fu_1781_p2 = (underflow_93_fu_1776_p2 | overflow_93_fu_1758_p2);

assign or_ln302_2_fu_2571_p2 = (underflow_94_fu_2566_p2 | overflow_94_fu_2548_p2);

assign or_ln302_3_fu_2927_p2 = (underflow_95_fu_2922_p2 | overflow_95_fu_2904_p2);

assign or_ln302_fu_1425_p2 = (underflow_fu_1420_p2 | overflow_fu_1402_p2);

assign or_ln610_10_fu_2525_p2 = (p_Result_228_fu_2346_p3 | icmp_ln610_5_fu_2354_p2);

assign or_ln610_11_fu_2841_p2 = (xor_ln610_6_fu_2835_p2 | select_ln631_7_fu_2819_p3);

assign or_ln610_12_fu_2867_p2 = (xor_ln610_6_fu_2835_p2 | select_ln631_8_fu_2827_p3);

assign or_ln610_13_fu_2881_p2 = (p_Result_230_fu_2702_p3 | icmp_ln610_7_fu_2710_p2);

assign or_ln610_3_fu_1365_p2 = (xor_ln610_fu_1333_p2 | select_ln631_2_fu_1325_p3);

assign or_ln610_4_fu_1379_p2 = (p_Result_232_fu_1200_p3 | icmp_ln610_fu_1208_p2);

assign or_ln610_5_fu_1695_p2 = (xor_ln610_2_fu_1689_p2 | select_ln631_3_fu_1673_p3);

assign or_ln610_6_fu_1721_p2 = (xor_ln610_2_fu_1689_p2 | select_ln631_4_fu_1681_p3);

assign or_ln610_7_fu_1735_p2 = (p_Result_226_fu_1556_p3 | icmp_ln610_3_fu_1564_p2);

assign or_ln610_8_fu_2485_p2 = (xor_ln610_4_fu_2479_p2 | select_ln631_5_fu_2463_p3);

assign or_ln610_9_fu_2511_p2 = (xor_ln610_4_fu_2479_p2 | select_ln631_6_fu_2471_p3);

assign or_ln610_fu_1339_p2 = (xor_ln610_fu_1333_p2 | select_ln631_fu_1317_p3);

assign or_ln647_1_fu_1747_p2 = (xor_ln647_3_fu_1741_p2 | p_Result_226_fu_1556_p3);

assign or_ln647_2_fu_2537_p2 = (xor_ln647_5_fu_2531_p2 | p_Result_228_fu_2346_p3);

assign or_ln647_3_fu_2893_p2 = (xor_ln647_7_fu_2887_p2 | p_Result_230_fu_2702_p3);

assign or_ln647_fu_1391_p2 = (xor_ln647_fu_1385_p2 | p_Result_232_fu_1200_p3);

assign overflow_93_fu_1758_p2 = (xor_ln647_4_fu_1753_p2 & or_ln647_1_fu_1747_p2);

assign overflow_94_fu_2548_p2 = (xor_ln647_6_fu_2543_p2 & or_ln647_2_fu_2537_p2);

assign overflow_95_fu_2904_p2 = (xor_ln647_8_fu_2899_p2 & or_ln647_3_fu_2893_p2);

assign overflow_fu_1402_p2 = (xor_ln647_2_fu_1397_p2 & or_ln647_fu_1391_p2);

assign p_Result_226_fu_1556_p3 = p_Val2_201_fu_1543_p3[32'd31];

assign p_Result_227_fu_1821_p3 = {{1'd1}, {trunc_ln554_2_fu_1817_p1}};

assign p_Result_228_fu_2346_p3 = p_Val2_203_fu_2333_p3[32'd31];

assign p_Result_229_fu_1997_p3 = {{1'd1}, {trunc_ln554_3_fu_1993_p1}};

assign p_Result_230_fu_2702_p3 = p_Val2_205_fu_2689_p3[32'd31];

assign p_Result_231_fu_747_p3 = {{1'd1}, {trunc_ln554_fu_743_p1}};

assign p_Result_232_fu_1200_p3 = p_Val2_199_fu_1187_p3[32'd31];

assign p_Result_s_fu_923_p3 = {{1'd1}, {trunc_ln554_1_fu_919_p1}};

assign p_Val2_199_fu_1187_p3 = ((and_ln592_fu_1182_p2[0:0] == 1'b1) ? shl_ln593_fu_1125_p2 : select_ln574_2_fu_1174_p3);

assign p_Val2_201_fu_1543_p3 = ((and_ln592_1_fu_1538_p2[0:0] == 1'b1) ? shl_ln593_1_fu_1481_p2 : select_ln574_4_fu_1530_p3);

assign p_Val2_203_fu_2333_p3 = ((and_ln592_2_fu_2328_p2[0:0] == 1'b1) ? shl_ln593_2_fu_2271_p2 : select_ln574_6_fu_2320_p3);

assign p_Val2_205_fu_2689_p3 = ((and_ln592_3_fu_2684_p2[0:0] == 1'b1) ? shl_ln593_3_fu_2627_p2 : select_ln574_8_fu_2676_p3);

assign pos1_1_fu_1039_p2 = (F2_1_fu_955_p2 + 12'd16);

assign pos1_2_fu_1937_p2 = (F2_2_fu_1853_p2 + 12'd16);

assign pos1_3_fu_2113_p2 = (F2_3_fu_2029_p2 + 12'd16);

assign pos1_fu_863_p2 = (F2_fu_779_p2 + 12'd16);

assign pos2_1_fu_1551_p2 = (F2_1_reg_3169 + 12'd17);

assign pos2_2_fu_2341_p2 = (F2_2_reg_3271 + 12'd17);

assign pos2_3_fu_2697_p2 = (F2_3_reg_3343 + 12'd17);

assign pos2_fu_1195_p2 = (F2_reg_3097 + 12'd17);

assign r_V_371_fu_1609_p2 = 54'd18014398509481983 >> zext_ln624_1_fu_1600_p1;

assign r_V_372_fu_2399_p2 = 54'd18014398509481983 >> zext_ln624_2_fu_2390_p1;

assign r_V_373_fu_2755_p2 = 54'd18014398509481983 >> zext_ln624_3_fu_2746_p1;

assign r_V_fu_1253_p2 = 54'd18014398509481983 >> zext_ln624_fu_1244_p1;

assign select_ln302_1_fu_2206_p3 = ((and_ln302_4_fu_2201_p2[0:0] == 1'b1) ? select_ln346_5_fu_2184_p3 : p_Val2_201_reg_3238);

assign select_ln302_2_fu_2965_p3 = ((and_ln302_6_fu_2960_p2[0:0] == 1'b1) ? select_ln346_12_fu_2943_p3 : p_Val2_203_reg_3397);

assign select_ln302_3_fu_3012_p3 = ((and_ln302_8_fu_3007_p2[0:0] == 1'b1) ? select_ln346_14_fu_2990_p3 : p_Val2_205_reg_3412);

assign select_ln302_fu_2165_p3 = ((and_ln302_2_fu_2160_p2[0:0] == 1'b1) ? select_ln346_1_fu_2143_p3 : p_Val2_199_reg_3223);

assign select_ln346_12_fu_2943_p3 = ((overflow_94_reg_3402[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln346_14_fu_2990_p3 = ((overflow_95_reg_3417[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln346_1_fu_2143_p3 = ((overflow_reg_3228[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln346_5_fu_2184_p3 = ((overflow_93_reg_3243[0:0] == 1'b1) ? 32'd2147483647 : 32'd2147483648);

assign select_ln560_1_fu_2213_p3 = ((icmp_ln560_1_reg_3163[0:0] == 1'b1) ? 32'd0 : select_ln302_1_fu_2206_p3);

assign select_ln560_2_fu_2972_p3 = ((icmp_ln560_2_reg_3265[0:0] == 1'b1) ? 32'd0 : select_ln302_2_fu_2965_p3);

assign select_ln560_3_fu_3019_p3 = ((icmp_ln560_3_reg_3337[0:0] == 1'b1) ? 32'd0 : select_ln302_3_fu_3012_p3);

assign select_ln560_fu_2172_p3 = ((icmp_ln560_reg_3091[0:0] == 1'b1) ? 32'd0 : select_ln302_fu_2165_p3);

assign select_ln571_1_fu_1486_p3 = ((icmp_ln571_1_fu_1434_p2[0:0] == 1'b1) ? trunc_ln572_1_reg_3186 : 32'd0);

assign select_ln571_2_fu_2276_p3 = ((icmp_ln571_2_fu_2224_p2[0:0] == 1'b1) ? trunc_ln572_2_reg_3288 : 32'd0);

assign select_ln571_3_fu_2632_p3 = ((icmp_ln571_3_fu_2580_p2[0:0] == 1'b1) ? trunc_ln572_3_reg_3360 : 32'd0);

assign select_ln571_fu_1130_p3 = ((icmp_ln571_fu_1078_p2[0:0] == 1'b1) ? trunc_ln572_reg_3114 : 32'd0);

assign select_ln574_2_fu_1174_p3 = ((and_ln574_2_fu_1168_p2[0:0] == 1'b1) ? select_ln577_fu_1117_p3 : select_ln574_fu_1154_p3);

assign select_ln574_3_fu_1510_p3 = ((and_ln574_3_fu_1504_p2[0:0] == 1'b1) ? trunc_ln575_1_fu_1458_p1 : select_ln571_1_fu_1486_p3);

assign select_ln574_4_fu_1530_p3 = ((and_ln574_4_fu_1524_p2[0:0] == 1'b1) ? select_ln577_1_fu_1473_p3 : select_ln574_3_fu_1510_p3);

assign select_ln574_5_fu_2300_p3 = ((and_ln574_5_fu_2294_p2[0:0] == 1'b1) ? trunc_ln575_2_fu_2248_p1 : select_ln571_2_fu_2276_p3);

assign select_ln574_6_fu_2320_p3 = ((and_ln574_6_fu_2314_p2[0:0] == 1'b1) ? select_ln577_2_fu_2263_p3 : select_ln574_5_fu_2300_p3);

assign select_ln574_7_fu_2656_p3 = ((and_ln574_7_fu_2650_p2[0:0] == 1'b1) ? trunc_ln575_3_fu_2604_p1 : select_ln571_3_fu_2632_p3);

assign select_ln574_8_fu_2676_p3 = ((and_ln574_8_fu_2670_p2[0:0] == 1'b1) ? select_ln577_3_fu_2619_p3 : select_ln574_7_fu_2656_p3);

assign select_ln574_fu_1154_p3 = ((and_ln574_fu_1148_p2[0:0] == 1'b1) ? trunc_ln575_fu_1102_p1 : select_ln571_fu_1130_p3);

assign select_ln577_1_fu_1473_p3 = ((tmp_311_fu_1465_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln577_2_fu_2263_p3 = ((tmp_319_fu_2255_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln577_3_fu_2619_p3 = ((tmp_327_fu_2611_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln577_fu_1117_p3 = ((tmp_303_fu_1109_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln631_2_fu_1325_p3 = ((icmp_ln631_fu_1311_p2[0:0] == 1'b1) ? Range1_all_ones_19_fu_1223_p2 : Range1_all_ones_18_fu_1213_p2);

assign select_ln631_3_fu_1673_p3 = ((icmp_ln631_1_fu_1667_p2[0:0] == 1'b1) ? Range1_all_zeros_4_fu_1649_p2 : Range1_all_ones_12_fu_1569_p2);

assign select_ln631_4_fu_1681_p3 = ((icmp_ln631_1_fu_1667_p2[0:0] == 1'b1) ? Range1_all_ones_13_fu_1579_p2 : Range1_all_ones_12_fu_1569_p2);

assign select_ln631_5_fu_2463_p3 = ((icmp_ln631_2_fu_2457_p2[0:0] == 1'b1) ? Range1_all_zeros_6_fu_2439_p2 : Range1_all_ones_14_fu_2359_p2);

assign select_ln631_6_fu_2471_p3 = ((icmp_ln631_2_fu_2457_p2[0:0] == 1'b1) ? Range1_all_ones_15_fu_2369_p2 : Range1_all_ones_14_fu_2359_p2);

assign select_ln631_7_fu_2819_p3 = ((icmp_ln631_3_fu_2813_p2[0:0] == 1'b1) ? Range1_all_zeros_8_fu_2795_p2 : Range1_all_ones_16_fu_2715_p2);

assign select_ln631_8_fu_2827_p3 = ((icmp_ln631_3_fu_2813_p2[0:0] == 1'b1) ? Range1_all_ones_17_fu_2725_p2 : Range1_all_ones_16_fu_2715_p2);

assign select_ln631_fu_1317_p3 = ((icmp_ln631_fu_1311_p2[0:0] == 1'b1) ? Range1_all_zeros_2_fu_1293_p2 : Range1_all_ones_18_fu_1213_p2);

assign sext_ln570_1_fu_1431_p1 = sh_amt_1_reg_3180;

assign sext_ln570_2_fu_2221_p1 = sh_amt_2_reg_3282;

assign sext_ln570_3_fu_2577_p1 = sh_amt_3_reg_3354;

assign sext_ln570_fu_1075_p1 = sh_amt_reg_3108;

assign sext_ln607_1_fu_1045_p1 = pos1_1_fu_1039_p2;

assign sext_ln607_2_fu_1943_p1 = pos1_2_fu_1937_p2;

assign sext_ln607_3_fu_2119_p1 = pos1_3_fu_2113_p2;

assign sext_ln607_fu_869_p1 = pos1_fu_863_p2;

assign sext_ln624_1_fu_1596_p1 = pos2_1_fu_1551_p2;

assign sext_ln624_2_fu_2386_p1 = pos2_2_fu_2341_p2;

assign sext_ln624_3_fu_2742_p1 = pos2_3_fu_2697_p2;

assign sext_ln624_fu_1240_p1 = pos2_fu_1195_p2;

assign sh_amt_1_fu_979_p3 = ((icmp_ln570_2_fu_961_p2[0:0] == 1'b1) ? add_ln570_1_fu_967_p2 : sub_ln570_1_fu_973_p2);

assign sh_amt_2_fu_1877_p3 = ((icmp_ln570_4_fu_1859_p2[0:0] == 1'b1) ? add_ln570_2_fu_1865_p2 : sub_ln570_2_fu_1871_p2);

assign sh_amt_3_fu_2053_p3 = ((icmp_ln570_6_fu_2035_p2[0:0] == 1'b1) ? add_ln570_3_fu_2041_p2 : sub_ln570_3_fu_2047_p2);

assign sh_amt_fu_803_p3 = ((icmp_ln570_1_fu_785_p2[0:0] == 1'b1) ? add_ln570_fu_791_p2 : sub_ln570_fu_797_p2);

assign shl_ln593_1_fu_1481_p2 = trunc_ln572_1_reg_3186 << sext_ln570_1_fu_1431_p1;

assign shl_ln593_2_fu_2271_p2 = trunc_ln572_2_reg_3288 << sext_ln570_2_fu_2221_p1;

assign shl_ln593_3_fu_2627_p2 = trunc_ln572_3_reg_3360 << sext_ln570_3_fu_2577_p1;

assign shl_ln593_fu_1125_p2 = trunc_ln572_reg_3114 << sext_ln570_fu_1075_p1;

assign sub_ln570_1_fu_973_p2 = (12'd16 - F2_1_fu_955_p2);

assign sub_ln570_2_fu_1871_p2 = (12'd16 - F2_2_fu_1853_p2);

assign sub_ln570_3_fu_2047_p2 = (12'd16 - F2_3_fu_2029_p2);

assign sub_ln570_fu_797_p2 = (12'd16 - F2_fu_779_p2);

assign tmp_303_fu_1109_p3 = bitcast_ln724_fu_1106_p1[32'd31];

assign tmp_304_fu_825_p4 = {{F2_fu_779_p2[11:4]}};

assign tmp_305_fu_847_p4 = {{add_ln601_fu_841_p2[11:4]}};

assign tmp_308_fu_1265_p3 = pos2_fu_1195_p2[32'd11];

assign tmp_311_fu_1465_p3 = bitcast_ln724_2_fu_1462_p1[32'd31];

assign tmp_312_fu_1001_p4 = {{F2_1_fu_955_p2[11:4]}};

assign tmp_313_fu_1023_p4 = {{add_ln601_1_fu_1017_p2[11:4]}};

assign tmp_316_fu_1621_p3 = pos2_1_fu_1551_p2[32'd11];

assign tmp_319_fu_2255_p3 = bitcast_ln724_4_fu_2252_p1[32'd31];

assign tmp_320_fu_1899_p4 = {{F2_2_fu_1853_p2[11:4]}};

assign tmp_321_fu_1921_p4 = {{add_ln601_2_fu_1915_p2[11:4]}};

assign tmp_324_fu_2411_p3 = pos2_2_fu_2341_p2[32'd11];

assign tmp_327_fu_2611_p3 = bitcast_ln724_6_fu_2608_p1[32'd31];

assign tmp_328_fu_2075_p4 = {{F2_3_fu_2029_p2[11:4]}};

assign tmp_329_fu_2097_p4 = {{add_ln601_3_fu_2091_p2[11:4]}};

assign tmp_332_fu_2767_p3 = pos2_3_fu_2697_p2[32'd11];

assign trunc_ln26_cast_fu_2139_p1 = j_reg_3034_pp0_iter1_reg;

assign trunc_ln544_1_fu_893_p1 = ireg_fu_889_p1[62:0];

assign trunc_ln544_2_fu_1791_p1 = ireg_1_fu_1787_p1[62:0];

assign trunc_ln544_3_fu_1967_p1 = ireg_2_fu_1963_p1[62:0];

assign trunc_ln544_fu_717_p1 = ireg_3_fu_713_p1[62:0];

assign trunc_ln554_1_fu_919_p1 = ireg_fu_889_p1[51:0];

assign trunc_ln554_2_fu_1817_p1 = ireg_1_fu_1787_p1[51:0];

assign trunc_ln554_3_fu_1993_p1 = ireg_2_fu_1963_p1[51:0];

assign trunc_ln554_fu_743_p1 = ireg_3_fu_713_p1[51:0];

assign trunc_ln572_1_fu_987_p1 = man_V_13_fu_941_p3[31:0];

assign trunc_ln572_2_fu_1885_p1 = man_V_fu_1839_p3[31:0];

assign trunc_ln572_3_fu_2061_p1 = man_V_14_fu_2015_p3[31:0];

assign trunc_ln572_fu_811_p1 = man_V_15_fu_765_p3[31:0];

assign trunc_ln575_1_fu_1458_p1 = ashr_ln575_1_fu_1453_p2[31:0];

assign trunc_ln575_2_fu_2248_p1 = ashr_ln575_2_fu_2243_p2[31:0];

assign trunc_ln575_3_fu_2604_p1 = ashr_ln575_3_fu_2599_p2[31:0];

assign trunc_ln575_fu_1102_p1 = ashr_ln575_fu_1097_p2[31:0];

assign underflow_93_fu_1776_p2 = (xor_ln648_1_fu_1770_p2 & neg_src_reg_3151);

assign underflow_94_fu_2566_p2 = (xor_ln648_2_fu_2560_p2 & neg_src_93_reg_3253);

assign underflow_95_fu_2922_p2 = (xor_ln648_3_fu_2916_p2 & neg_src_94_reg_3325);

assign underflow_fu_1420_p2 = (xor_ln648_fu_1414_p2 & neg_src_95_reg_3079);

assign xor_ln560_1_fu_2191_p2 = (icmp_ln560_1_reg_3163 ^ 1'd1);

assign xor_ln560_2_fu_2950_p2 = (icmp_ln560_2_reg_3265 ^ 1'd1);

assign xor_ln560_3_fu_2997_p2 = (icmp_ln560_3_reg_3337 ^ 1'd1);

assign xor_ln560_fu_2150_p2 = (icmp_ln560_reg_3091 ^ 1'd1);

assign xor_ln571_1_fu_1493_p2 = (icmp_ln571_1_fu_1434_p2 ^ 1'd1);

assign xor_ln571_2_fu_2283_p2 = (icmp_ln571_2_fu_2224_p2 ^ 1'd1);

assign xor_ln571_3_fu_2639_p2 = (icmp_ln571_3_fu_2580_p2 ^ 1'd1);

assign xor_ln571_fu_1137_p2 = (icmp_ln571_fu_1078_p2 ^ 1'd1);

assign xor_ln574_1_fu_1518_p2 = (icmp_ln574_1_fu_1439_p2 ^ 1'd1);

assign xor_ln574_2_fu_2308_p2 = (icmp_ln574_2_fu_2229_p2 ^ 1'd1);

assign xor_ln574_3_fu_2664_p2 = (icmp_ln574_3_fu_2585_p2 ^ 1'd1);

assign xor_ln574_fu_1162_p2 = (icmp_ln574_fu_1083_p2 ^ 1'd1);

assign xor_ln610_2_fu_1689_p2 = (icmp_ln610_3_fu_1564_p2 ^ 1'd1);

assign xor_ln610_4_fu_2479_p2 = (icmp_ln610_5_fu_2354_p2 ^ 1'd1);

assign xor_ln610_6_fu_2835_p2 = (icmp_ln610_7_fu_2710_p2 ^ 1'd1);

assign xor_ln610_fu_1333_p2 = (icmp_ln610_fu_1208_p2 ^ 1'd1);

assign xor_ln647_2_fu_1397_p2 = (neg_src_95_reg_3079 ^ 1'd1);

assign xor_ln647_3_fu_1741_p2 = (deleted_zeros_1_fu_1713_p3 ^ 1'd1);

assign xor_ln647_4_fu_1753_p2 = (neg_src_reg_3151 ^ 1'd1);

assign xor_ln647_5_fu_2531_p2 = (deleted_zeros_2_fu_2503_p3 ^ 1'd1);

assign xor_ln647_6_fu_2543_p2 = (neg_src_93_reg_3253 ^ 1'd1);

assign xor_ln647_7_fu_2887_p2 = (deleted_zeros_3_fu_2859_p3 ^ 1'd1);

assign xor_ln647_8_fu_2899_p2 = (neg_src_94_reg_3325 ^ 1'd1);

assign xor_ln647_fu_1385_p2 = (deleted_zeros_fu_1357_p3 ^ 1'd1);

assign xor_ln648_1_fu_1770_p2 = (or_ln610_7_fu_1735_p2 ^ and_ln648_3_fu_1764_p2);

assign xor_ln648_2_fu_2560_p2 = (or_ln610_10_fu_2525_p2 ^ and_ln648_5_fu_2554_p2);

assign xor_ln648_3_fu_2916_p2 = (or_ln610_13_fu_2881_p2 ^ and_ln648_7_fu_2910_p2);

assign xor_ln648_fu_1414_p2 = (or_ln610_4_fu_1379_p2 ^ and_ln648_fu_1408_p2);

assign zext_ln24_fu_2180_p1 = or_ln24_reg_3052_pp0_iter1_reg;

assign zext_ln26_1_fu_2985_p1 = or_ln24_2_fu_2980_p2;

assign zext_ln26_fu_2938_p1 = or_ln24_1_fu_2933_p2;

assign zext_ln455_1_fu_915_p1 = exp_tmp_1_fu_905_p4;

assign zext_ln455_2_fu_1813_p1 = exp_tmp_2_fu_1803_p4;

assign zext_ln455_3_fu_1989_p1 = exp_tmp_3_fu_1979_p4;

assign zext_ln455_fu_739_p1 = exp_tmp_fu_729_p4;

assign zext_ln558_1_fu_931_p1 = p_Result_s_fu_923_p3;

assign zext_ln558_2_fu_1829_p1 = p_Result_227_fu_1821_p3;

assign zext_ln558_3_fu_2005_p1 = p_Result_229_fu_1997_p3;

assign zext_ln558_fu_755_p1 = p_Result_231_fu_747_p3;

assign zext_ln575_1_fu_1449_p1 = $unsigned(sext_ln570_1_fu_1431_p1);

assign zext_ln575_2_fu_2239_p1 = $unsigned(sext_ln570_2_fu_2221_p1);

assign zext_ln575_3_fu_2595_p1 = $unsigned(sext_ln570_3_fu_2577_p1);

assign zext_ln575_fu_1093_p1 = $unsigned(sext_ln570_fu_1075_p1);

assign zext_ln624_1_fu_1600_p1 = $unsigned(sext_ln624_1_fu_1596_p1);

assign zext_ln624_2_fu_2390_p1 = $unsigned(sext_ln624_2_fu_2386_p1);

assign zext_ln624_3_fu_2746_p1 = $unsigned(sext_ln624_3_fu_2742_p1);

assign zext_ln624_fu_1244_p1 = $unsigned(sext_ln624_fu_1240_p1);

always @ (posedge ap_clk) begin
    or_ln24_reg_3052[0] <= 1'b1;
    or_ln24_reg_3052_pp0_iter1_reg[0] <= 1'b1;
end

endmodule //latnrm_latnrm_Pipeline_VITIS_LOOP_24_2
