// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module md_md_Pipeline_loop_q (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sum_z,
        sum_y,
        sum_x,
        n_points_load_1,
        add_ln39_1,
        position_address0,
        position_ce0,
        position_q0,
        position_load,
        icmp_ln42_3,
        p_x,
        icmp_ln42_7,
        p_y,
        icmp_ln42_11,
        p_z,
        sum_z_2_out,
        sum_z_2_out_ap_vld,
        sum_y_2_out,
        sum_y_2_out_ap_vld,
        sum_x_2_out,
        sum_x_2_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] sum_z;
input  [63:0] sum_y;
input  [63:0] sum_x;
input  [31:0] n_points_load_1;
input  [9:0] add_ln39_1;
output  [9:0] position_address0;
output   position_ce0;
input  [191:0] position_q0;
input  [190:0] position_load;
input  [0:0] icmp_ln42_3;
input  [63:0] p_x;
input  [0:0] icmp_ln42_7;
input  [63:0] p_y;
input  [0:0] icmp_ln42_11;
input  [63:0] p_z;
output  [63:0] sum_z_2_out;
output   sum_z_2_out_ap_vld;
output  [63:0] sum_y_2_out;
output   sum_y_2_out_ap_vld;
output  [63:0] sum_x_2_out;
output   sum_x_2_out_ap_vld;

reg ap_idle;
reg position_ce0;
reg sum_z_2_out_ap_vld;
reg sum_y_2_out_ap_vld;
reg sum_x_2_out_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_state16_pp0_stage3_iter3;
wire    ap_block_state20_pp0_stage3_iter4;
wire    ap_block_state24_pp0_stage3_iter5;
wire    ap_block_state28_pp0_stage3_iter6;
wire    ap_block_state32_pp0_stage3_iter7;
wire    ap_block_state36_pp0_stage3_iter8;
wire    ap_block_state40_pp0_stage3_iter9;
wire    ap_block_state44_pp0_stage3_iter10;
wire    ap_block_state48_pp0_stage3_iter11;
wire    ap_block_state52_pp0_stage3_iter12;
wire    ap_block_state56_pp0_stage3_iter13;
wire    ap_block_state60_pp0_stage3_iter14;
wire    ap_block_state64_pp0_stage3_iter15;
wire    ap_block_state68_pp0_stage3_iter16;
wire    ap_block_state72_pp0_stage3_iter17;
wire    ap_block_state76_pp0_stage3_iter18;
wire    ap_block_state80_pp0_stage3_iter19;
wire    ap_block_state84_pp0_stage3_iter20;
wire    ap_block_state88_pp0_stage3_iter21;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln37_reg_682;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_state17_pp0_stage0_iter4;
wire    ap_block_state21_pp0_stage0_iter5;
wire    ap_block_state25_pp0_stage0_iter6;
wire    ap_block_state29_pp0_stage0_iter7;
wire    ap_block_state33_pp0_stage0_iter8;
wire    ap_block_state37_pp0_stage0_iter9;
wire    ap_block_state41_pp0_stage0_iter10;
wire    ap_block_state45_pp0_stage0_iter11;
wire    ap_block_state49_pp0_stage0_iter12;
wire    ap_block_state53_pp0_stage0_iter13;
wire    ap_block_state57_pp0_stage0_iter14;
wire    ap_block_state61_pp0_stage0_iter15;
wire    ap_block_state65_pp0_stage0_iter16;
wire    ap_block_state69_pp0_stage0_iter17;
wire    ap_block_state73_pp0_stage0_iter18;
wire    ap_block_state77_pp0_stage0_iter19;
wire    ap_block_state81_pp0_stage0_iter20;
wire    ap_block_state85_pp0_stage0_iter21;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln37_fu_302_p2;
reg   [0:0] icmp_ln37_reg_682_pp0_iter1_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter2_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter3_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter4_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter5_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter6_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter7_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter8_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter9_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter10_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter11_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter12_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter13_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter14_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter15_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter16_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter17_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter18_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter19_reg;
reg   [0:0] icmp_ln37_reg_682_pp0_iter20_reg;
wire   [0:0] icmp_ln42_2_fu_339_p2;
reg   [0:0] icmp_ln42_2_reg_691;
wire   [0:0] icmp_ln42_6_fu_355_p2;
reg   [0:0] icmp_ln42_6_reg_696;
wire   [0:0] icmp_ln42_10_fu_371_p2;
reg   [0:0] icmp_ln42_10_reg_701;
wire   [63:0] q_x_fu_386_p1;
reg   [63:0] q_x_reg_706;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state14_pp0_stage1_iter3;
wire    ap_block_state18_pp0_stage1_iter4;
wire    ap_block_state22_pp0_stage1_iter5;
wire    ap_block_state26_pp0_stage1_iter6;
wire    ap_block_state30_pp0_stage1_iter7;
wire    ap_block_state34_pp0_stage1_iter8;
wire    ap_block_state38_pp0_stage1_iter9;
wire    ap_block_state42_pp0_stage1_iter10;
wire    ap_block_state46_pp0_stage1_iter11;
wire    ap_block_state50_pp0_stage1_iter12;
wire    ap_block_state54_pp0_stage1_iter13;
wire    ap_block_state58_pp0_stage1_iter14;
wire    ap_block_state62_pp0_stage1_iter15;
wire    ap_block_state66_pp0_stage1_iter16;
wire    ap_block_state70_pp0_stage1_iter17;
wire    ap_block_state74_pp0_stage1_iter18;
wire    ap_block_state78_pp0_stage1_iter19;
wire    ap_block_state82_pp0_stage1_iter20;
wire    ap_block_state86_pp0_stage1_iter21;
wire    ap_block_pp0_stage1_11001;
reg   [63:0] trunc_ln39_1_reg_712;
reg   [63:0] trunc_ln39_2_reg_717;
wire   [0:0] icmp_ln42_fu_425_p2;
reg   [0:0] icmp_ln42_reg_722;
wire   [0:0] icmp_ln42_1_fu_431_p2;
reg   [0:0] icmp_ln42_1_reg_727;
wire   [0:0] icmp_ln42_4_fu_457_p2;
reg   [0:0] icmp_ln42_4_reg_732;
wire   [0:0] icmp_ln42_5_fu_463_p2;
reg   [0:0] icmp_ln42_5_reg_737;
wire   [0:0] icmp_ln42_8_fu_489_p2;
reg   [0:0] icmp_ln42_8_reg_742;
wire   [0:0] icmp_ln42_9_fu_495_p2;
reg   [0:0] icmp_ln42_9_reg_747;
wire   [63:0] q_y_fu_501_p1;
reg   [63:0] q_y_reg_752;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state15_pp0_stage2_iter3;
wire    ap_block_state19_pp0_stage2_iter4;
wire    ap_block_state23_pp0_stage2_iter5;
wire    ap_block_state27_pp0_stage2_iter6;
wire    ap_block_state31_pp0_stage2_iter7;
wire    ap_block_state35_pp0_stage2_iter8;
wire    ap_block_state39_pp0_stage2_iter9;
wire    ap_block_state43_pp0_stage2_iter10;
wire    ap_block_state47_pp0_stage2_iter11;
wire    ap_block_state51_pp0_stage2_iter12;
wire    ap_block_state55_pp0_stage2_iter13;
wire    ap_block_state59_pp0_stage2_iter14;
wire    ap_block_state63_pp0_stage2_iter15;
wire    ap_block_state67_pp0_stage2_iter16;
wire    ap_block_state71_pp0_stage2_iter17;
wire    ap_block_state75_pp0_stage2_iter18;
wire    ap_block_state79_pp0_stage2_iter19;
wire    ap_block_state83_pp0_stage2_iter20;
wire    ap_block_state87_pp0_stage2_iter21;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] grp_fu_271_p2;
reg   [0:0] tmp_2_reg_758;
wire   [63:0] q_z_fu_505_p1;
reg   [63:0] q_z_reg_763;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] and_ln42_5_fu_523_p2;
reg   [0:0] and_ln42_5_reg_769;
wire   [0:0] and_ln42_7_fu_573_p2;
reg   [0:0] and_ln42_7_reg_774;
reg   [0:0] and_ln42_7_reg_774_pp0_iter2_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter3_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter4_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter5_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter6_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter7_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter8_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter9_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter10_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter11_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter12_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter13_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter14_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter15_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter16_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter17_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter18_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter19_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter20_reg;
reg   [0:0] and_ln42_7_reg_774_pp0_iter21_reg;
wire   [63:0] grp_fu_240_p2;
reg   [63:0] dx_reg_778;
reg   [63:0] dx_reg_778_pp0_iter3_reg;
reg   [63:0] dx_reg_778_pp0_iter4_reg;
reg   [63:0] dx_reg_778_pp0_iter5_reg;
reg   [63:0] dx_reg_778_pp0_iter6_reg;
reg   [63:0] dx_reg_778_pp0_iter7_reg;
reg   [63:0] dx_reg_778_pp0_iter8_reg;
reg   [63:0] dx_reg_778_pp0_iter9_reg;
reg   [63:0] dx_reg_778_pp0_iter10_reg;
reg   [63:0] dx_reg_778_pp0_iter11_reg;
reg   [63:0] dx_reg_778_pp0_iter12_reg;
reg   [63:0] dx_reg_778_pp0_iter13_reg;
reg   [63:0] dx_reg_778_pp0_iter14_reg;
reg   [63:0] dx_reg_778_pp0_iter15_reg;
reg   [63:0] dx_reg_778_pp0_iter16_reg;
reg   [63:0] dx_reg_778_pp0_iter17_reg;
reg   [63:0] dx_reg_778_pp0_iter18_reg;
wire   [63:0] grp_fu_244_p2;
reg   [63:0] dy_reg_785;
reg   [63:0] dy_reg_785_pp0_iter3_reg;
reg   [63:0] dy_reg_785_pp0_iter4_reg;
reg   [63:0] dy_reg_785_pp0_iter5_reg;
reg   [63:0] dy_reg_785_pp0_iter6_reg;
reg   [63:0] dy_reg_785_pp0_iter7_reg;
reg   [63:0] dy_reg_785_pp0_iter8_reg;
reg   [63:0] dy_reg_785_pp0_iter9_reg;
reg   [63:0] dy_reg_785_pp0_iter10_reg;
reg   [63:0] dy_reg_785_pp0_iter11_reg;
reg   [63:0] dy_reg_785_pp0_iter12_reg;
reg   [63:0] dy_reg_785_pp0_iter13_reg;
reg   [63:0] dy_reg_785_pp0_iter14_reg;
reg   [63:0] dy_reg_785_pp0_iter15_reg;
reg   [63:0] dy_reg_785_pp0_iter16_reg;
reg   [63:0] dy_reg_785_pp0_iter17_reg;
reg   [63:0] dy_reg_785_pp0_iter18_reg;
wire   [63:0] grp_fu_248_p2;
reg   [63:0] dz_reg_792;
reg   [63:0] dz_reg_792_pp0_iter3_reg;
reg   [63:0] dz_reg_792_pp0_iter4_reg;
reg   [63:0] dz_reg_792_pp0_iter5_reg;
reg   [63:0] dz_reg_792_pp0_iter6_reg;
reg   [63:0] dz_reg_792_pp0_iter7_reg;
reg   [63:0] dz_reg_792_pp0_iter8_reg;
reg   [63:0] dz_reg_792_pp0_iter9_reg;
reg   [63:0] dz_reg_792_pp0_iter10_reg;
reg   [63:0] dz_reg_792_pp0_iter11_reg;
reg   [63:0] dz_reg_792_pp0_iter12_reg;
reg   [63:0] dz_reg_792_pp0_iter13_reg;
reg   [63:0] dz_reg_792_pp0_iter14_reg;
reg   [63:0] dz_reg_792_pp0_iter15_reg;
reg   [63:0] dz_reg_792_pp0_iter16_reg;
reg   [63:0] dz_reg_792_pp0_iter17_reg;
reg   [63:0] dz_reg_792_pp0_iter18_reg;
reg   [63:0] dz_reg_792_pp0_iter19_reg;
wire   [63:0] grp_fu_253_p2;
reg   [63:0] mul_reg_798;
wire   [63:0] grp_fu_257_p2;
reg   [63:0] mul1_reg_803;
wire   [63:0] grp_fu_261_p2;
reg   [63:0] mul2_reg_808;
reg   [63:0] mul2_reg_808_pp0_iter4_reg;
reg   [63:0] add_reg_813;
reg   [63:0] add1_reg_818;
wire   [63:0] grp_fu_266_p2;
reg   [63:0] r2inv_reg_823;
reg   [63:0] r2inv_reg_823_pp0_iter12_reg;
reg   [63:0] r2inv_reg_823_pp0_iter13_reg;
reg   [63:0] r2inv_reg_823_pp0_iter14_reg;
reg   [63:0] r2inv_reg_823_pp0_iter15_reg;
reg   [63:0] r2inv_reg_823_pp0_iter16_reg;
reg   [63:0] r2inv_reg_823_pp0_iter17_reg;
reg   [63:0] mul3_reg_830;
reg   [63:0] r6inv_reg_835;
reg   [63:0] r6inv_reg_835_pp0_iter14_reg;
reg   [63:0] r6inv_reg_835_pp0_iter15_reg;
reg   [63:0] mul5_reg_841;
reg   [63:0] sub_reg_846;
reg   [63:0] potential_reg_851;
reg   [63:0] f_reg_856;
reg   [63:0] mul8_reg_862;
reg   [63:0] mul9_reg_867;
reg   [63:0] mul4_reg_882;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln39_fu_324_p1;
wire    ap_block_pp0_stage0;
reg   [30:0] q_idx_fu_118;
wire   [30:0] add_ln37_fu_308_p2;
wire    ap_loop_init;
reg   [30:0] ap_sig_allocacmp_q_idx_1;
reg   [63:0] sum_x_1_fu_122;
reg   [63:0] ap_sig_allocacmp_sum_x_1_load_1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage3;
reg   [63:0] sum_y_1_fu_126;
reg   [63:0] ap_sig_allocacmp_sum_y_1_load_1;
reg   [63:0] sum_z_1_fu_130;
reg   [63:0] ap_sig_allocacmp_sum_z_1_load_1;
wire    ap_block_pp0_stage3_01001;
reg   [63:0] grp_fu_240_p0;
reg   [63:0] grp_fu_240_p1;
wire    ap_block_pp0_stage2;
reg   [63:0] grp_fu_244_p0;
reg   [63:0] grp_fu_244_p1;
reg   [63:0] grp_fu_248_p0;
reg   [63:0] grp_fu_248_p1;
reg   [63:0] grp_fu_253_p0;
reg   [63:0] grp_fu_253_p1;
reg   [63:0] grp_fu_257_p0;
reg   [63:0] grp_fu_257_p1;
reg   [63:0] grp_fu_261_p0;
reg   [63:0] grp_fu_261_p1;
reg   [63:0] grp_fu_271_p0;
reg   [63:0] grp_fu_271_p1;
wire   [31:0] q_idx_cast_fu_298_p1;
wire   [9:0] trunc_ln39_fu_314_p1;
wire   [9:0] add_ln39_fu_318_p2;
wire   [10:0] tmp_1_fu_329_p4;
wire   [10:0] tmp_4_fu_345_p4;
wire   [10:0] tmp_7_fu_361_p4;
wire   [63:0] trunc_ln39_3_fu_382_p1;
wire   [10:0] tmp_fu_411_p4;
wire   [51:0] trunc_ln42_fu_421_p1;
wire   [10:0] tmp_3_fu_437_p4;
wire   [51:0] trunc_ln42_2_fu_447_p4;
wire   [10:0] tmp_6_fu_469_p4;
wire   [51:0] trunc_ln42_4_fu_479_p4;
wire   [0:0] or_ln42_4_fu_509_p2;
wire   [0:0] or_ln42_5_fu_513_p2;
wire   [0:0] and_ln42_4_fu_517_p2;
wire   [0:0] or_ln42_fu_529_p2;
wire   [0:0] or_ln42_1_fu_533_p2;
wire   [0:0] and_ln42_fu_537_p2;
wire   [0:0] or_ln42_2_fu_548_p2;
wire   [0:0] or_ln42_3_fu_552_p2;
wire   [0:0] and_ln42_2_fu_556_p2;
wire   [0:0] and_ln42_3_fu_562_p2;
wire   [0:0] and_ln42_6_fu_568_p2;
wire   [0:0] and_ln42_1_fu_543_p2;
reg   [1:0] grp_fu_240_opcode;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
reg   [1:0] grp_fu_244_opcode;
reg   [1:0] grp_fu_248_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to21;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

md_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_240_p0),
    .din1(grp_fu_240_p1),
    .opcode(grp_fu_240_opcode),
    .ce(1'b1),
    .dout(grp_fu_240_p2)
);

md_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_244_p0),
    .din1(grp_fu_244_p1),
    .opcode(grp_fu_244_opcode),
    .ce(1'b1),
    .dout(grp_fu_244_p2)
);

md_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_248_p0),
    .din1(grp_fu_248_p1),
    .opcode(grp_fu_248_opcode),
    .ce(1'b1),
    .dout(grp_fu_248_p2)
);

md_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_253_p0),
    .din1(grp_fu_253_p1),
    .ce(1'b1),
    .dout(grp_fu_253_p2)
);

md_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_257_p0),
    .din1(grp_fu_257_p1),
    .ce(1'b1),
    .dout(grp_fu_257_p2)
);

md_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_261_p0),
    .din1(grp_fu_261_p1),
    .ce(1'b1),
    .dout(grp_fu_261_p2)
);

md_ddiv_64ns_64ns_64_22_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_22_no_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(add1_reg_818),
    .ce(1'b1),
    .dout(grp_fu_266_p2)
);

md_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_271_p0),
    .din1(grp_fu_271_p1),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_271_p2)
);

md_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter20_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln37_fu_302_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            q_idx_fu_118 <= add_ln37_fu_308_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            q_idx_fu_118 <= 31'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_x_1_fu_122 <= sum_x;
    end else if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln42_7_reg_774_pp0_iter21_reg) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sum_x_1_fu_122 <= grp_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_y_1_fu_126 <= sum_y;
    end else if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln42_7_reg_774_pp0_iter21_reg) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sum_y_1_fu_126 <= grp_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_z_1_fu_130 <= sum_z;
    end else if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd0 == and_ln42_7_reg_774_pp0_iter21_reg) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        sum_z_1_fu_130 <= grp_fu_244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd0 == and_ln42_7_reg_774_pp0_iter5_reg) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add1_reg_818 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == and_ln42_7_reg_774_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_reg_813 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln37_reg_682 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        and_ln42_5_reg_769 <= and_ln42_5_fu_523_p2;
        q_z_reg_763 <= q_z_fu_505_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln42_7_reg_774 <= and_ln42_7_fu_573_p2;
        and_ln42_7_reg_774_pp0_iter10_reg <= and_ln42_7_reg_774_pp0_iter9_reg;
        and_ln42_7_reg_774_pp0_iter11_reg <= and_ln42_7_reg_774_pp0_iter10_reg;
        and_ln42_7_reg_774_pp0_iter12_reg <= and_ln42_7_reg_774_pp0_iter11_reg;
        and_ln42_7_reg_774_pp0_iter13_reg <= and_ln42_7_reg_774_pp0_iter12_reg;
        and_ln42_7_reg_774_pp0_iter14_reg <= and_ln42_7_reg_774_pp0_iter13_reg;
        and_ln42_7_reg_774_pp0_iter15_reg <= and_ln42_7_reg_774_pp0_iter14_reg;
        and_ln42_7_reg_774_pp0_iter16_reg <= and_ln42_7_reg_774_pp0_iter15_reg;
        and_ln42_7_reg_774_pp0_iter17_reg <= and_ln42_7_reg_774_pp0_iter16_reg;
        and_ln42_7_reg_774_pp0_iter18_reg <= and_ln42_7_reg_774_pp0_iter17_reg;
        and_ln42_7_reg_774_pp0_iter19_reg <= and_ln42_7_reg_774_pp0_iter18_reg;
        and_ln42_7_reg_774_pp0_iter20_reg <= and_ln42_7_reg_774_pp0_iter19_reg;
        and_ln42_7_reg_774_pp0_iter21_reg <= and_ln42_7_reg_774_pp0_iter20_reg;
        and_ln42_7_reg_774_pp0_iter2_reg <= and_ln42_7_reg_774;
        and_ln42_7_reg_774_pp0_iter3_reg <= and_ln42_7_reg_774_pp0_iter2_reg;
        and_ln42_7_reg_774_pp0_iter4_reg <= and_ln42_7_reg_774_pp0_iter3_reg;
        and_ln42_7_reg_774_pp0_iter5_reg <= and_ln42_7_reg_774_pp0_iter4_reg;
        and_ln42_7_reg_774_pp0_iter6_reg <= and_ln42_7_reg_774_pp0_iter5_reg;
        and_ln42_7_reg_774_pp0_iter7_reg <= and_ln42_7_reg_774_pp0_iter6_reg;
        and_ln42_7_reg_774_pp0_iter8_reg <= and_ln42_7_reg_774_pp0_iter7_reg;
        and_ln42_7_reg_774_pp0_iter9_reg <= and_ln42_7_reg_774_pp0_iter8_reg;
        dx_reg_778_pp0_iter10_reg <= dx_reg_778_pp0_iter9_reg;
        dx_reg_778_pp0_iter11_reg <= dx_reg_778_pp0_iter10_reg;
        dx_reg_778_pp0_iter12_reg <= dx_reg_778_pp0_iter11_reg;
        dx_reg_778_pp0_iter13_reg <= dx_reg_778_pp0_iter12_reg;
        dx_reg_778_pp0_iter14_reg <= dx_reg_778_pp0_iter13_reg;
        dx_reg_778_pp0_iter15_reg <= dx_reg_778_pp0_iter14_reg;
        dx_reg_778_pp0_iter16_reg <= dx_reg_778_pp0_iter15_reg;
        dx_reg_778_pp0_iter17_reg <= dx_reg_778_pp0_iter16_reg;
        dx_reg_778_pp0_iter18_reg <= dx_reg_778_pp0_iter17_reg;
        dx_reg_778_pp0_iter3_reg <= dx_reg_778;
        dx_reg_778_pp0_iter4_reg <= dx_reg_778_pp0_iter3_reg;
        dx_reg_778_pp0_iter5_reg <= dx_reg_778_pp0_iter4_reg;
        dx_reg_778_pp0_iter6_reg <= dx_reg_778_pp0_iter5_reg;
        dx_reg_778_pp0_iter7_reg <= dx_reg_778_pp0_iter6_reg;
        dx_reg_778_pp0_iter8_reg <= dx_reg_778_pp0_iter7_reg;
        dx_reg_778_pp0_iter9_reg <= dx_reg_778_pp0_iter8_reg;
        dy_reg_785_pp0_iter10_reg <= dy_reg_785_pp0_iter9_reg;
        dy_reg_785_pp0_iter11_reg <= dy_reg_785_pp0_iter10_reg;
        dy_reg_785_pp0_iter12_reg <= dy_reg_785_pp0_iter11_reg;
        dy_reg_785_pp0_iter13_reg <= dy_reg_785_pp0_iter12_reg;
        dy_reg_785_pp0_iter14_reg <= dy_reg_785_pp0_iter13_reg;
        dy_reg_785_pp0_iter15_reg <= dy_reg_785_pp0_iter14_reg;
        dy_reg_785_pp0_iter16_reg <= dy_reg_785_pp0_iter15_reg;
        dy_reg_785_pp0_iter17_reg <= dy_reg_785_pp0_iter16_reg;
        dy_reg_785_pp0_iter18_reg <= dy_reg_785_pp0_iter17_reg;
        dy_reg_785_pp0_iter3_reg <= dy_reg_785;
        dy_reg_785_pp0_iter4_reg <= dy_reg_785_pp0_iter3_reg;
        dy_reg_785_pp0_iter5_reg <= dy_reg_785_pp0_iter4_reg;
        dy_reg_785_pp0_iter6_reg <= dy_reg_785_pp0_iter5_reg;
        dy_reg_785_pp0_iter7_reg <= dy_reg_785_pp0_iter6_reg;
        dy_reg_785_pp0_iter8_reg <= dy_reg_785_pp0_iter7_reg;
        dy_reg_785_pp0_iter9_reg <= dy_reg_785_pp0_iter8_reg;
        dz_reg_792_pp0_iter10_reg <= dz_reg_792_pp0_iter9_reg;
        dz_reg_792_pp0_iter11_reg <= dz_reg_792_pp0_iter10_reg;
        dz_reg_792_pp0_iter12_reg <= dz_reg_792_pp0_iter11_reg;
        dz_reg_792_pp0_iter13_reg <= dz_reg_792_pp0_iter12_reg;
        dz_reg_792_pp0_iter14_reg <= dz_reg_792_pp0_iter13_reg;
        dz_reg_792_pp0_iter15_reg <= dz_reg_792_pp0_iter14_reg;
        dz_reg_792_pp0_iter16_reg <= dz_reg_792_pp0_iter15_reg;
        dz_reg_792_pp0_iter17_reg <= dz_reg_792_pp0_iter16_reg;
        dz_reg_792_pp0_iter18_reg <= dz_reg_792_pp0_iter17_reg;
        dz_reg_792_pp0_iter19_reg <= dz_reg_792_pp0_iter18_reg;
        dz_reg_792_pp0_iter3_reg <= dz_reg_792;
        dz_reg_792_pp0_iter4_reg <= dz_reg_792_pp0_iter3_reg;
        dz_reg_792_pp0_iter5_reg <= dz_reg_792_pp0_iter4_reg;
        dz_reg_792_pp0_iter6_reg <= dz_reg_792_pp0_iter5_reg;
        dz_reg_792_pp0_iter7_reg <= dz_reg_792_pp0_iter6_reg;
        dz_reg_792_pp0_iter8_reg <= dz_reg_792_pp0_iter7_reg;
        dz_reg_792_pp0_iter9_reg <= dz_reg_792_pp0_iter8_reg;
        icmp_ln37_reg_682 <= icmp_ln37_fu_302_p2;
        icmp_ln37_reg_682_pp0_iter10_reg <= icmp_ln37_reg_682_pp0_iter9_reg;
        icmp_ln37_reg_682_pp0_iter11_reg <= icmp_ln37_reg_682_pp0_iter10_reg;
        icmp_ln37_reg_682_pp0_iter12_reg <= icmp_ln37_reg_682_pp0_iter11_reg;
        icmp_ln37_reg_682_pp0_iter13_reg <= icmp_ln37_reg_682_pp0_iter12_reg;
        icmp_ln37_reg_682_pp0_iter14_reg <= icmp_ln37_reg_682_pp0_iter13_reg;
        icmp_ln37_reg_682_pp0_iter15_reg <= icmp_ln37_reg_682_pp0_iter14_reg;
        icmp_ln37_reg_682_pp0_iter16_reg <= icmp_ln37_reg_682_pp0_iter15_reg;
        icmp_ln37_reg_682_pp0_iter17_reg <= icmp_ln37_reg_682_pp0_iter16_reg;
        icmp_ln37_reg_682_pp0_iter18_reg <= icmp_ln37_reg_682_pp0_iter17_reg;
        icmp_ln37_reg_682_pp0_iter19_reg <= icmp_ln37_reg_682_pp0_iter18_reg;
        icmp_ln37_reg_682_pp0_iter1_reg <= icmp_ln37_reg_682;
        icmp_ln37_reg_682_pp0_iter20_reg <= icmp_ln37_reg_682_pp0_iter19_reg;
        icmp_ln37_reg_682_pp0_iter2_reg <= icmp_ln37_reg_682_pp0_iter1_reg;
        icmp_ln37_reg_682_pp0_iter3_reg <= icmp_ln37_reg_682_pp0_iter2_reg;
        icmp_ln37_reg_682_pp0_iter4_reg <= icmp_ln37_reg_682_pp0_iter3_reg;
        icmp_ln37_reg_682_pp0_iter5_reg <= icmp_ln37_reg_682_pp0_iter4_reg;
        icmp_ln37_reg_682_pp0_iter6_reg <= icmp_ln37_reg_682_pp0_iter5_reg;
        icmp_ln37_reg_682_pp0_iter7_reg <= icmp_ln37_reg_682_pp0_iter6_reg;
        icmp_ln37_reg_682_pp0_iter8_reg <= icmp_ln37_reg_682_pp0_iter7_reg;
        icmp_ln37_reg_682_pp0_iter9_reg <= icmp_ln37_reg_682_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        r6inv_reg_835_pp0_iter14_reg <= r6inv_reg_835;
        r6inv_reg_835_pp0_iter15_reg <= r6inv_reg_835_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln42_7_reg_774) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dx_reg_778 <= grp_fu_240_p2;
        dy_reg_785 <= grp_fu_244_p2;
        dz_reg_792 <= grp_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd0 == and_ln42_7_reg_774_pp0_iter18_reg) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        f_reg_856 <= grp_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln42_10_reg_701 <= icmp_ln42_10_fu_371_p2;
        icmp_ln42_2_reg_691 <= icmp_ln42_2_fu_339_p2;
        icmp_ln42_6_reg_696 <= icmp_ln42_6_fu_355_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln37_reg_682 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln42_1_reg_727 <= icmp_ln42_1_fu_431_p2;
        icmp_ln42_4_reg_732 <= icmp_ln42_4_fu_457_p2;
        icmp_ln42_5_reg_737 <= icmp_ln42_5_fu_463_p2;
        icmp_ln42_8_reg_742 <= icmp_ln42_8_fu_489_p2;
        icmp_ln42_9_reg_747 <= icmp_ln42_9_fu_495_p2;
        icmp_ln42_reg_722 <= icmp_ln42_fu_425_p2;
        q_x_reg_706 <= q_x_fu_386_p1;
        trunc_ln39_1_reg_712 <= {{position_q0[127:64]}};
        trunc_ln39_2_reg_717 <= {{position_q0[191:128]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln42_7_reg_774_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul1_reg_803 <= grp_fu_257_p2;
        mul2_reg_808 <= grp_fu_261_p2;
        mul_reg_798 <= grp_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul2_reg_808_pp0_iter4_reg <= mul2_reg_808;
        r2inv_reg_823_pp0_iter12_reg <= r2inv_reg_823;
        r2inv_reg_823_pp0_iter13_reg <= r2inv_reg_823_pp0_iter12_reg;
        r2inv_reg_823_pp0_iter14_reg <= r2inv_reg_823_pp0_iter13_reg;
        r2inv_reg_823_pp0_iter15_reg <= r2inv_reg_823_pp0_iter14_reg;
        r2inv_reg_823_pp0_iter16_reg <= r2inv_reg_823_pp0_iter15_reg;
        r2inv_reg_823_pp0_iter17_reg <= r2inv_reg_823_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == and_ln42_7_reg_774_pp0_iter12_reg) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul3_reg_830 <= grp_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == and_ln42_7_reg_774_pp0_iter20_reg) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul4_reg_882 <= grp_fu_261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln42_7_reg_774_pp0_iter14_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul5_reg_841 <= grp_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln42_7_reg_774_pp0_iter19_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul8_reg_862 <= grp_fu_257_p2;
        mul9_reg_867 <= grp_fu_261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == and_ln42_7_reg_774_pp0_iter17_reg) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        potential_reg_851 <= grp_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln37_reg_682 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        q_y_reg_752 <= q_y_fu_501_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln42_7_reg_774_pp0_iter11_reg) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        r2inv_reg_823 <= grp_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd0 == and_ln42_7_reg_774_pp0_iter13_reg) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        r6inv_reg_835 <= grp_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln42_7_reg_774_pp0_iter16_reg) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        sub_reg_846 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln37_reg_682 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_2_reg_758 <= grp_fu_271_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln37_reg_682 == 1'd0) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter20_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter20_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter19_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter18_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter17_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter14_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter13_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter12_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to21 = 1'b1;
    end else begin
        ap_idle_pp0_1to21 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_q_idx_1 = 31'd0;
    end else begin
        ap_sig_allocacmp_q_idx_1 = q_idx_fu_118;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln42_7_reg_774_pp0_iter21_reg) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_sum_x_1_load_1 = grp_fu_244_p2;
    end else begin
        ap_sig_allocacmp_sum_x_1_load_1 = sum_x_1_fu_122;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln42_7_reg_774_pp0_iter21_reg) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_sig_allocacmp_sum_y_1_load_1 = grp_fu_248_p2;
    end else begin
        ap_sig_allocacmp_sum_y_1_load_1 = sum_y_1_fu_126;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd0 == and_ln42_7_reg_774_pp0_iter21_reg) & (1'b0 == ap_block_pp0_stage3))) begin
        ap_sig_allocacmp_sum_z_1_load_1 = grp_fu_244_p2;
    end else begin
        ap_sig_allocacmp_sum_z_1_load_1 = sum_z_1_fu_130;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln42_7_fu_573_p2) & (1'b0 == ap_block_pp0_stage0_00001))) begin
        grp_fu_240_opcode = 2'd1;
    end else if ((((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln42_7_reg_774_pp0_iter15_reg) & (1'b0 == ap_block_pp0_stage1_00001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd0 == and_ln42_7_reg_774_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage3_00001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == and_ln42_7_reg_774_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage2_00001)))) begin
        grp_fu_240_opcode = 2'd0;
    end else begin
        grp_fu_240_opcode = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_240_p0 = mul5_reg_841;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_240_p0 = add_reg_813;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_240_p0 = mul_reg_798;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_240_p0 = p_x;
    end else begin
        grp_fu_240_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_240_p1 = 64'd13835058055282163712;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_240_p1 = mul2_reg_808_pp0_iter4_reg;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_240_p1 = mul1_reg_803;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_240_p1 = q_x_reg_706;
    end else begin
        grp_fu_240_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln42_7_fu_573_p2) & (1'b0 == ap_block_pp0_stage0_00001))) begin
        grp_fu_244_opcode = 2'd1;
    end else if ((((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd0 == and_ln42_7_reg_774_pp0_iter20_reg) & (1'b0 == ap_block_pp0_stage3_00001)) | ((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln42_7_reg_774_pp0_iter20_reg) & (1'b0 == ap_block_pp0_stage1_00001)))) begin
        grp_fu_244_opcode = 2'd0;
    end else begin
        grp_fu_244_opcode = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_244_p0 = ap_sig_allocacmp_sum_z_1_load_1;
    end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_244_p0 = ap_sig_allocacmp_sum_x_1_load_1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_244_p0 = p_y;
    end else begin
        grp_fu_244_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_244_p1 = mul4_reg_882;
    end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_244_p1 = mul8_reg_862;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_244_p1 = q_y_reg_752;
    end else begin
        grp_fu_244_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln42_7_fu_573_p2) & (1'b0 == ap_block_pp0_stage0_00001))) begin
        grp_fu_248_opcode = 2'd1;
    end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == and_ln42_7_reg_774_pp0_iter20_reg) & (1'b0 == ap_block_pp0_stage1_00001))) begin
        grp_fu_248_opcode = 2'd0;
    end else begin
        grp_fu_248_opcode = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_248_p0 = ap_sig_allocacmp_sum_y_1_load_1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_248_p0 = p_z;
    end else begin
        grp_fu_248_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_248_p1 = mul9_reg_867;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_248_p1 = q_z_reg_763;
    end else begin
        grp_fu_248_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_253_p0 = r6inv_reg_835;
    end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_253_p0 = mul3_reg_830;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_253_p0 = r2inv_reg_823;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_253_p0 = dx_reg_778;
    end else begin
        grp_fu_253_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_253_p1 = 64'd4609434218613702656;
    end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_253_p1 = r2inv_reg_823_pp0_iter12_reg;
    end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_253_p1 = r2inv_reg_823;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_253_p1 = dx_reg_778;
    end else begin
        grp_fu_253_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_257_p0 = f_reg_856;
    end else if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_257_p0 = r2inv_reg_823_pp0_iter17_reg;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_257_p0 = r6inv_reg_835_pp0_iter15_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_257_p0 = dy_reg_785;
    end else begin
        grp_fu_257_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_257_p1 = dx_reg_778_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_257_p1 = potential_reg_851;
    end else if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_257_p1 = sub_reg_846;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_257_p1 = dy_reg_785;
    end else begin
        grp_fu_257_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        grp_fu_261_p0 = f_reg_856;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_261_p0 = dz_reg_792;
    end else begin
        grp_fu_261_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_261_p1 = dz_reg_792_pp0_iter19_reg;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_261_p1 = dy_reg_785_pp0_iter18_reg;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_261_p1 = dz_reg_792;
    end else begin
        grp_fu_261_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            grp_fu_271_p0 = q_z_fu_505_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_271_p0 = q_y_fu_501_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_271_p0 = q_x_fu_386_p1;
        end else begin
            grp_fu_271_p0 = 'bx;
        end
    end else begin
        grp_fu_271_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            grp_fu_271_p1 = p_z;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            grp_fu_271_p1 = p_y;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_fu_271_p1 = p_x;
        end else begin
            grp_fu_271_p1 = 'bx;
        end
    end else begin
        grp_fu_271_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        position_ce0 = 1'b1;
    end else begin
        position_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_682_pp0_iter20_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        sum_x_2_out_ap_vld = 1'b1;
    end else begin
        sum_x_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_682_pp0_iter20_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        sum_y_2_out_ap_vld = 1'b1;
    end else begin
        sum_y_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln37_reg_682_pp0_iter20_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        sum_z_2_out_ap_vld = 1'b1;
    end else begin
        sum_z_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to21 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln37_fu_308_p2 = (ap_sig_allocacmp_q_idx_1 + 31'd1);

assign add_ln39_fu_318_p2 = (add_ln39_1 + trunc_ln39_fu_314_p1);

assign and_ln42_1_fu_543_p2 = (tmp_2_reg_758 & and_ln42_fu_537_p2);

assign and_ln42_2_fu_556_p2 = (or_ln42_3_fu_552_p2 & or_ln42_2_fu_548_p2);

assign and_ln42_3_fu_562_p2 = (grp_fu_271_p2 & and_ln42_2_fu_556_p2);

assign and_ln42_4_fu_517_p2 = (or_ln42_5_fu_513_p2 & or_ln42_4_fu_509_p2);

assign and_ln42_5_fu_523_p2 = (grp_fu_271_p2 & and_ln42_4_fu_517_p2);

assign and_ln42_6_fu_568_p2 = (and_ln42_5_reg_769 & and_ln42_3_fu_562_p2);

assign and_ln42_7_fu_573_p2 = (and_ln42_6_fu_568_p2 & and_ln42_1_fu_543_p2);

assign and_ln42_fu_537_p2 = (or_ln42_fu_529_p2 & or_ln42_1_fu_533_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage3_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage3_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage3_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage2_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage3_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage2_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage3_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage2_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage3_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage2_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage3_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage2_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage3_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign icmp_ln37_fu_302_p2 = (($signed(q_idx_cast_fu_298_p1) < $signed(n_points_load_1)) ? 1'b1 : 1'b0);

assign icmp_ln42_10_fu_371_p2 = ((tmp_7_fu_361_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln42_1_fu_431_p2 = ((trunc_ln42_fu_421_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_2_fu_339_p2 = ((tmp_1_fu_329_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln42_4_fu_457_p2 = ((tmp_3_fu_437_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln42_5_fu_463_p2 = ((trunc_ln42_2_fu_447_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_6_fu_355_p2 = ((tmp_4_fu_345_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln42_8_fu_489_p2 = ((tmp_6_fu_469_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln42_9_fu_495_p2 = ((trunc_ln42_4_fu_479_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_425_p2 = ((tmp_fu_411_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign or_ln42_1_fu_533_p2 = (icmp_ln42_3 | icmp_ln42_2_reg_691);

assign or_ln42_2_fu_548_p2 = (icmp_ln42_5_reg_737 | icmp_ln42_4_reg_732);

assign or_ln42_3_fu_552_p2 = (icmp_ln42_7 | icmp_ln42_6_reg_696);

assign or_ln42_4_fu_509_p2 = (icmp_ln42_9_reg_747 | icmp_ln42_8_reg_742);

assign or_ln42_5_fu_513_p2 = (icmp_ln42_11 | icmp_ln42_10_reg_701);

assign or_ln42_fu_529_p2 = (icmp_ln42_reg_722 | icmp_ln42_1_reg_727);

assign position_address0 = zext_ln39_fu_324_p1;

assign q_idx_cast_fu_298_p1 = ap_sig_allocacmp_q_idx_1;

assign q_x_fu_386_p1 = trunc_ln39_3_fu_382_p1;

assign q_y_fu_501_p1 = trunc_ln39_1_reg_712;

assign q_z_fu_505_p1 = trunc_ln39_2_reg_717;

assign sum_x_2_out = sum_x_1_fu_122;

assign sum_y_2_out = sum_y_1_fu_126;

assign sum_z_2_out = sum_z_1_fu_130;

assign tmp_1_fu_329_p4 = {{position_load[62:52]}};

assign tmp_3_fu_437_p4 = {{position_q0[126:116]}};

assign tmp_4_fu_345_p4 = {{position_load[126:116]}};

assign tmp_6_fu_469_p4 = {{position_q0[190:180]}};

assign tmp_7_fu_361_p4 = {{position_load[190:180]}};

assign tmp_fu_411_p4 = {{position_q0[62:52]}};

assign trunc_ln39_3_fu_382_p1 = position_q0[63:0];

assign trunc_ln39_fu_314_p1 = ap_sig_allocacmp_q_idx_1[9:0];

assign trunc_ln42_2_fu_447_p4 = {{position_q0[115:64]}};

assign trunc_ln42_4_fu_479_p4 = {{position_q0[179:128]}};

assign trunc_ln42_fu_421_p1 = position_q0[51:0];

assign zext_ln39_fu_324_p1 = add_ln39_fu_318_p2;

endmodule //md_md_Pipeline_loop_q
